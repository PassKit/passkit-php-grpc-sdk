<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: io/raw/a_rpc.proto

namespace GPBMetadata\Io\Raw;

class ARpc
{
    public static $is_initialized = false;

    public static function initOnce() {
        $pool = \Google\Protobuf\Internal\DescriptorPool::getGeneratedPool();

        if (static::$is_initialized == true) {
          return;
        }
        \GPBMetadata\Google\Protobuf\GPBEmpty::initOnce();
        \GPBMetadata\Google\Api\Annotations::initOnce();
        \GPBMetadata\Io\Common\CommonObjects::initOnce();
        \GPBMetadata\Io\Raw\Project::initOnce();
        \GPBMetadata\Io\Raw\Pass::initOnce();
        $pool->internalAddGeneratedFile(
            "\x0A\xA0\x18\x0A\x12io/raw/a_rpc.proto\x12\x03raw\x1A\x1Cgoogle/api/annotations.proto\x1A\x1Eio/common/common_objects.proto\x1A\x14io/raw/project.proto\x1A\x11io/raw/pass.proto\x1A.protoc-gen-openapiv2/options/annotations.proto2\xD8\x0F\x0A\x03Raw\x12\x7F\x0A\x11createPassProject\x12\x10.raw.PassProject\x1A\x06.io.Id\"P\x92A2\x0A\x03Raw\x12\x13Create Pass Project\x1A\x16Creates a Pass Project\x82\xD3\xE4\x93\x02\x15\"\x10/raw/passProject:\x01*\x12\x93\x01\x0A\x11updatePassProject\x12\x10.raw.PassProject\x1A\x10.raw.PassProject\"Z\x92A<\x0A\x03Raw\x12\x13Update Pass Project\x1A Updates an existing Pass Project\x82\xD3\xE4\x93\x02\x15\x1A\x10/raw/passProject:\x01*\x12\x82\x01\x0A\x0EgetPassProject\x12\x06.io.Id\x1A\x10.raw.PassProject\"V\x92A6\x0A\x03Raw\x12\x10Get Pass Project\x1A\x1DGets an existing Pass Project\x82\xD3\xE4\x93\x02\x17\x12\x15/raw/passProject/{id}\x12\x94\x01\x0A\x0FcopyPassProject\x12\x1B.raw.PassProjectCopyRequest\x1A\x06.io.Id\"\\\x92A9\x0A\x03Raw\x12\x11Copy Pass Project\x1A\x1FCopies an existing Pass Project\x82\xD3\xE4\x93\x02\x1A\"\x15/raw/passProject/copy:\x01*\x12\x84\x02\x0A\x11deletePassProject\x12\x06.io.Id\x1A\x16.google.protobuf.Empty\"\xCE\x01\x92A\xAD\x01\x0A\x03Raw\x12\x13Delete Pass Project\x1A\x90\x01Deletes an existing Pass Project by id. Deleting a Pass Project results in all passes being invalidated and removed. Needs to be used with care.\x82\xD3\xE4\x93\x02\x17*\x15/raw/passProject/{id}\x12e\x0A\x0AcreatePass\x12\x09.raw.Pass\x1A\x06.io.Id\"D\x92A-\x0A\x03Raw\x12\x0BCreate Pass\x1A\x19Creates a new Pass record\x82\xD3\xE4\x93\x02\x0E\"\x09/raw/pass:\x01*\x12k\x0A\x0AupdatePass\x12\x09.raw.Pass\x1A\x06.io.Id\"J\x92A3\x0A\x03Raw\x12\x0BUpdate Pass\x1A\x1FUpdates an existing Pass record\x82\xD3\xE4\x93\x02\x0E\x1A\x09/raw/pass:\x01*\x12\x92\x01\x0A\x11streamPassUpdates\x12\x09.raw.Pass\x1A\x06.io.Id\"f\x92Ac\x0A\x03Raw\x122Stream Pass Updates (official SDK's only, no REST)\x1A(Updates existing Pass records via stream(\x010\x01\x12d\x0A\x0BgetPassById\x12\x06.io.Id\x1A\x09.raw.Pass\"B\x92A)\x0A\x03Raw\x12\x0EGet Pass by ID\x1A\x12Gets a pass record\x82\xD3\xE4\x93\x02\x10\x12\x0E/raw/pass/{id}\x12\xC3\x01\x0A\x13getPassByExternalId\x12\".raw.PassRecordByExternalIdRequest\x1A\x09.raw.Pass\"}\x92AA\x0A\x03Raw\x12\x17Get Pass by External ID\x1A!Gets a pass record by External ID\x82\xD3\xE4\x93\x023\x121/raw/pass/externalId/{passProjectId}/{externalId}\x12v\x0A\x0AdeletePass\x12\x09.raw.Pass\x1A\x16.google.protobuf.Empty\"E\x92A)\x0A\x03Raw\x12\x0BDelete Pass\x1A\x15Deletes a pass record\x82\xD3\xE4\x93\x02\x13*\x0E/raw/pass/{id}:\x01*\x12\xC0\x01\x0A\x17listPassesByPassProject\x12#.raw.ListPassesByPassProjectRequest\x1A\x09.raw.Pass\"s\x92AJ\x0A\x03Raw\x12\x0BList Passes\x1A6List all passes for pass project. Supports pagination.\x82\xD3\xE4\x93\x02 \"\x1B/raw/pass/listByPassProject:\x01*0\x01\x12\xC6\x01\x0A\x18listPassesByPassTemplate\x12\$.raw.ListPassesByPassTemplateRequest\x1A\x09.raw.Pass\"w\x92AM\x0A\x03Raw\x12\x0BList Passes\x1A9List all passes for a pass template. Supports pagination.\x82\xD3\xE4\x93\x02!\"\x1C/raw/pass/listByPassTemplate:\x01*0\x01B\x8A\x07\x0A\x14com.passkit.grpc.RawZ(stash.passkit.com/io/model/sdk/go/io/raw\xAA\x02\x10PassKit.Grpc.Raw\x92A\xB3\x06\x12\xC0\x02\x0A\x16PassKit Raw Passes API\x12\xA5\x01This protocol is suit for cases where the business logic is handled elsewhere, and the purpose is purely to issue and update content for Apple Wallet and Google Pay.\x1A8https://passkit.com/legal/terms-of-subscription-service/\"?\x0A\x0FPassKit Support\x12\x17https://docs.passkit.io\x1A\x13support@passkit.com2\x030.1*\x01\x022\x10application/json:\x10application/jsonR9\x0A\x03200\x122\x0A(Returned when the request is successful.\x12\x06\x0A\x04\x9A\x02\x01\x07R4\x0A\x03400\x12-\x0A+Returned when wrong user input is provided.R0\x0A\x03401\x12)\x0A'Returned when the user is unauthorized.RP\x0A\x03403\x12I\x0AGReturned when the user does not have permission to access the resource.R;\x0A\x03404\x124\x0A*Returned when the resource does not exist.\x12\x06\x0A\x04\x9A\x02\x01\x07R<\x0A\x03500\x125\x0A+Returned when there is an unexpected error.\x12\x06\x0A\x04\x9A\x02\x01\x07RW\x0A\x03503\x12P\x0ANServer is unavailable. Back off for 250ms and repeat request until successful.b\x06proto3"
        , true);

        static::$is_initialized = true;
    }
}

