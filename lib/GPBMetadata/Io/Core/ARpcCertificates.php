<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/core/a_rpc_certificates.proto

namespace GPBMetadata\Io\Core;

class ARpcCertificates
{
    public static $is_initialized = false;

    public static function initOnce() {
        $pool = \Google\Protobuf\Internal\DescriptorPool::getGeneratedPool();

        if (static::$is_initialized == true) {
          return;
        }
        \GPBMetadata\Google\Api\Annotations::initOnce();
        \GPBMetadata\Google\Protobuf\GPBEmpty::initOnce();
        \GPBMetadata\Io\Common\CommonObjects::initOnce();
        \GPBMetadata\Io\Certificate\Certificate::initOnce();
        \GPBMetadata\Io\Common\Pagination::initOnce();
        \GPBMetadata\Io\Common\Filter::initOnce();
        $pool->internalAddGeneratedFile(
            '
∑
 io/core/a_rpc_certificates.protoiogoogle/protobuf/empty.protoio/common/common_objects.proto io/certificate/certificate.protoio/common/pagination.protoio/common/filter.proto.protoc-gen-openapiv2/options/annotations.proto2Ë
Certificates‹
getAppleCertificateData.io.PassTypeIdentifier.io.CertificateData"ìÇ”‰ì/certificate/{passTypeId}íAoGet Apple pass certificateQGets the certificate data for certificate with Pass Type Identifier {passTypeId}.’
getCertificateSigningRequest.google.protobuf.Empty.io.CertificateSigningRequest"~Ç”‰ì*(/certificate/certificate_signing_requestíAK%Get CSR (Certificate Signing Request)"Gets a CSR for the logged in user.¢
addAppleCertificate.io.FileBytes.io.CertificateData"gÇ”‰ì#"/certificate/apple_certificate:*íA;Add Apple certificate"Uploads an Apple pass certificate.ª
updateAppleCertificate.io.FileBytes.io.CertificateData"}Ç”‰ì#/certificate/apple_certificate:*íAQUpdate Apple certificate5Updates or renews an existing Apple pass certificate.ª
listAppleCertificatesDeprecated.io.Pagination.io.CertificateData"qÇ”‰ì/certificatesíAY)List Apple pass certificates [DEPRECATED],Retrieves a users certificates [DEPRECATED].0°
listAppleCertificates.io.Filters.io.CertificateData"dÇ”‰ì"/certificates/apple/list:*íA>List Apple pass certificatesRetrieves a users certificates0‡
 countAppleCertificatesDeprecated.io.Pagination	.io.Count"†Ç”‰ì/certificates/countíAÅ*Count Apple pass certificates [DEPRECATED]SRetrieves the total count of pass certificates for the logged in user [DEPRECATED].¡
countAppleCertificates.io.Filters	.io.Count"éÇ”‰ì"/certificates/apple/count:*íAgCount Apple pass certificatesFRetrieves the total count of pass certificates for the logged in user.¥
sendNFCSigningCredentials .io.NFCSigningCredentialsRequest.google.protobuf.Empty"‹Ç”‰ì\'""/certificates/nfc/credentials/send:*íA´Send NFC signing credentialsäSends the NFC signing credentials for a certificate to the registered email address of the user. Only works with NFC enabled certificates.Bÿ
com.passkit.grpcZ$stash.passkit.com/io/model/sdk/go/io™PassKit.GrpcíAç⁄
PassKit Certificates APICAPI for managing Apple Wallet Pass Type Identifiers & Certificates.8https://passkit.com/legal/terms-of-subscription-service/"?
PassKit Supporthttps://docs.passkit.iosupport@passkit.com*2application/json:application/jsonR9
2002
(Returned when the request is successful.
öR4
400-
+Returned when wrong user input is provided.R0
401)
\'Returned when the user is unauthorized.RP
403I
GReturned when the user does not have permission to access the resource.R;
4044
*Returned when the resource does not exist.
öR<
5005
+Returned when there is an unexpected error.
öRW
503P
NServer is unavailable. Back off for 250ms and repeat request until successful.Z>
<

apiKeyAuth.JWT Authentication token.Authorization bproto3'
        , true);

        static::$is_initialized = true;
    }
}

