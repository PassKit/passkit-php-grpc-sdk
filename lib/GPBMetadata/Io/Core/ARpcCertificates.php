<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: io/core/a_rpc_certificates.proto

namespace GPBMetadata\Io\Core;

class ARpcCertificates
{
    public static $is_initialized = false;

    public static function initOnce() {
        $pool = \Google\Protobuf\Internal\DescriptorPool::getGeneratedPool();

        if (static::$is_initialized == true) {
          return;
        }
        \GPBMetadata\Google\Api\Annotations::initOnce();
        \GPBMetadata\Google\Protobuf\GPBEmpty::initOnce();
        \GPBMetadata\Io\Common\CommonObjects::initOnce();
        \GPBMetadata\Io\Certificate\Certificate::initOnce();
        \GPBMetadata\Io\Common\Pagination::initOnce();
        \GPBMetadata\Io\Common\Filter::initOnce();
        $pool->internalAddGeneratedFile(
            "\x0A\xB7\x17\x0A io/core/a_rpc_certificates.proto\x12\x02io\x1A\x1Bgoogle/protobuf/empty.proto\x1A\x1Eio/common/common_objects.proto\x1A io/certificate/certificate.proto\x1A\x1Aio/common/pagination.proto\x1A\x16io/common/filter.proto\x1A.protoc-gen-openapiv2/options/annotations.proto2\xE8\x0E\x0A\x0CCertificates\x12\xDC\x01\x0A\x17getAppleCertificateData\x12\x16.io.PassTypeIdentifier\x1A\x13.io.CertificateData\"\x93\x01\x92Ao\x12\x1AGet Apple pass certificate\x1AQGets the certificate data for certificate with Pass Type Identifier {passTypeId}.\x82\xD3\xE4\x93\x02\x1B\x12\x19/certificate/{passTypeId}\x12\xD5\x01\x0A\x1CgetCertificateSigningRequest\x12\x16.google.protobuf.Empty\x1A\x1D.io.CertificateSigningRequest\"~\x92AK\x12%Get CSR (Certificate Signing Request)\x1A\"Gets a CSR for the logged in user.\x82\xD3\xE4\x93\x02*\x12(/certificate/certificate_signing_request\x12\xA2\x01\x0A\x13addAppleCertificate\x12\x0D.io.FileBytes\x1A\x13.io.CertificateData\"g\x92A;\x12\x15Add Apple certificate\x1A\"Uploads an Apple pass certificate.\x82\xD3\xE4\x93\x02#\"\x1E/certificate/apple_certificate:\x01*\x12\xBB\x01\x0A\x16updateAppleCertificate\x12\x0D.io.FileBytes\x1A\x13.io.CertificateData\"}\x92AQ\x12\x18Update Apple certificate\x1A5Updates or renews an existing Apple pass certificate.\x82\xD3\xE4\x93\x02#\x1A\x1E/certificate/apple_certificate:\x01*\x12\xBB\x01\x0A\x1FlistAppleCertificatesDeprecated\x12\x0E.io.Pagination\x1A\x13.io.CertificateData\"q\x92AY\x12)List Apple pass certificates [DEPRECATED]\x1A,Retrieves a users certificates [DEPRECATED].\x82\xD3\xE4\x93\x02\x0F\x12\x0D/certificates0\x01\x12\xA1\x01\x0A\x15listAppleCertificates\x12\x0B.io.Filters\x1A\x13.io.CertificateData\"d\x92A>\x12\x1CList Apple pass certificates\x1A\x1ERetrieves a users certificates\x82\xD3\xE4\x93\x02\x1D\"\x18/certificates/apple/list:\x01*0\x01\x12\xE0\x01\x0A countAppleCertificatesDeprecated\x12\x0E.io.Pagination\x1A\x09.io.Count\"\xA0\x01\x92A\x81\x01\x12*Count Apple pass certificates [DEPRECATED]\x1ASRetrieves the total count of pass certificates for the logged in user [DEPRECATED].\x82\xD3\xE4\x93\x02\x15\x12\x13/certificates/count\x12\xC1\x01\x0A\x16countAppleCertificates\x12\x0B.io.Filters\x1A\x09.io.Count\"\x8E\x01\x92Ag\x12\x1DCount Apple pass certificates\x1AFRetrieves the total count of pass certificates for the logged in user.\x82\xD3\xE4\x93\x02\x1E\"\x19/certificates/apple/count:\x01*\x12\xB4\x02\x0A\x19sendNFCSigningCredentials\x12 .io.NFCSigningCredentialsRequest\x1A\x16.google.protobuf.Empty\"\xDC\x01\x92A\xAB\x01\x12\x1CSend NFC signing credentials\x1A\x8A\x01Sends the NFC signing credentials for a certificate to the registered email address of the user. Only works with NFC enabled certificates.\x82\xD3\xE4\x93\x02'\"\"/certificates/nfc/credentials/send:\x01*B\xD8\x06\x0A\x10com.passkit.grpcZ\$stash.passkit.com/io/model/sdk/go/io\xAA\x02\x0CPassKit.Grpc\x92A\x8D\x06\x12\xDA\x01\x0A\x18PassKit Certificates API\x12CAPI for managing Apple Wallet Pass Type Identifiers & Certificates.\x1A8https://passkit.com/legal/terms-of-subscription-service/\"?\x0A\x0FPassKit Support\x12\x17https://docs.passkit.io\x1A\x13support@passkit.com*\x01\x022\x10application/json:\x10application/jsonR9\x0A\x03200\x122\x0A(Returned when the request is successful.\x12\x06\x0A\x04\x9A\x02\x01\x07R4\x0A\x03400\x12-\x0A+Returned when wrong user input is provided.R0\x0A\x03401\x12)\x0A'Returned when the user is unauthorized.RP\x0A\x03403\x12I\x0AGReturned when the user does not have permission to access the resource.R;\x0A\x03404\x124\x0A*Returned when the resource does not exist.\x12\x06\x0A\x04\x9A\x02\x01\x07R<\x0A\x03500\x125\x0A+Returned when there is an unexpected error.\x12\x06\x0A\x04\x9A\x02\x01\x07RW\x0A\x03503\x12P\x0ANServer is unavailable. Back off for 250ms and repeat request until successful.Z>\x0A<\x0A\x0AapiKeyAuth\x12.\x08\x02\x12\x19JWT Authentication token.\x1A\x0DAuthorization \x02b\x06proto3"
        , true);

        static::$is_initialized = true;
    }
}

