<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: io/flights/cabin_codes/cabin_codes.proto

namespace Cabin_codes;

use UnexpectedValueException;

/**
 * Compartment Code descriptions represent most frequently used classes. Airlines have discretion on how they use these codes.
 *
 * Protobuf type <code>cabin_codes.CompartmentCode</code>
 */
class CompartmentCode
{
    /**
     * Compartment code not provided
     *
     * Generated from protobuf enum <code>NONE = 0;</code>
     */
    const NONE = 0;
    /**
     * First class suite (previously supersonic)
     *
     * Generated from protobuf enum <code>R = 1;</code>
     */
    const R = 1;
    /**
     * First class premium
     *
     * Generated from protobuf enum <code>P = 2;</code>
     */
    const P = 2;
    /**
     * First class
     *
     * Generated from protobuf enum <code>F = 3;</code>
     */
    const F = 3;
    /**
     * First class discounted
     *
     * Generated from protobuf enum <code>A = 4;</code>
     */
    const A = 4;
    /**
     * Business class premium
     *
     * Generated from protobuf enum <code>J = 5;</code>
     */
    const J = 5;
    /**
     * Business class
     *
     * Generated from protobuf enum <code>C = 6;</code>
     */
    const C = 6;
    /**
     * Business class discounted
     *
     * Generated from protobuf enum <code>D = 7;</code>
     */
    const D = 7;
    /**
     * Business class discounted
     *
     * Generated from protobuf enum <code>I = 8;</code>
     */
    const I = 8;
    /**
     * Business class discounted
     *
     * Generated from protobuf enum <code>Z = 9;</code>
     */
    const Z = 9;
    /**
     * Premium economy
     *
     * Generated from protobuf enum <code>W = 10;</code>
     */
    const W = 10;
    /**
     * Premium economy discounted
     *
     * Generated from protobuf enum <code>E = 11;</code>
     */
    const E = 11;
    /**
     * Economy
     *
     * Generated from protobuf enum <code>S = 12;</code>
     */
    const S = 12;
    /**
     * Economy
     *
     * Generated from protobuf enum <code>Y = 13;</code>
     */
    const Y = 13;
    /**
     * Economy discounted
     *
     * Generated from protobuf enum <code>B = 14;</code>
     */
    const B = 14;
    /**
     * Economy discounted
     *
     * Generated from protobuf enum <code>H = 15;</code>
     */
    const H = 15;
    /**
     * Economy discounted
     *
     * Generated from protobuf enum <code>K = 16;</code>
     */
    const K = 16;
    /**
     * Economy discounted
     *
     * Generated from protobuf enum <code>L = 17;</code>
     */
    const L = 17;
    /**
     * Economy discounted
     *
     * Generated from protobuf enum <code>M = 18;</code>
     */
    const M = 18;
    /**
     * Economy discounted
     *
     * Generated from protobuf enum <code>N = 19;</code>
     */
    const N = 19;
    /**
     * Economy discounted
     *
     * Generated from protobuf enum <code>O = 20;</code>
     */
    const O = 20;
    /**
     * Economy discounted
     *
     * Generated from protobuf enum <code>Q = 21;</code>
     */
    const Q = 21;
    /**
     * Premium economy discounted / Economy discounted
     *
     * Generated from protobuf enum <code>T = 22;</code>
     */
    const T = 22;
    /**
     * Economy discounted
     *
     * Generated from protobuf enum <code>V = 23;</code>
     */
    const V = 23;
    /**
     * Economy discounted
     *
     * Generated from protobuf enum <code>X = 24;</code>
     */
    const X = 24;
    /**
     * Conditional reservation
     *
     * Generated from protobuf enum <code>G = 25;</code>
     */
    const G = 25;
    /**
     * Shuttle service
     *
     * Generated from protobuf enum <code>U = 26;</code>
     */
    const U = 26;

    private static $valueToName = [
        self::NONE => 'NONE',
        self::R => 'R',
        self::P => 'P',
        self::F => 'F',
        self::A => 'A',
        self::J => 'J',
        self::C => 'C',
        self::D => 'D',
        self::I => 'I',
        self::Z => 'Z',
        self::W => 'W',
        self::E => 'E',
        self::S => 'S',
        self::Y => 'Y',
        self::B => 'B',
        self::H => 'H',
        self::K => 'K',
        self::L => 'L',
        self::M => 'M',
        self::N => 'N',
        self::O => 'O',
        self::Q => 'Q',
        self::T => 'T',
        self::V => 'V',
        self::X => 'X',
        self::G => 'G',
        self::U => 'U',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

