<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: io/event_tickets/ticket.proto

namespace Event_tickets;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>event_tickets.Seat</code>
 */
class Seat extends \Google\Protobuf\Internal\Message
{
    /**
     * The seat number, such as "1", "2", "3", or any other seat identifier.
     *
     * Generated from protobuf field <code>string seat = 1;</code>
     */
    protected $seat = '';
    /**
     * Localized seat number.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedSeat = 2;</code>
     */
    protected $localizedSeat = null;
    /**
     * The row of the seat, such as "1", E", "BB", or "A5".
     *
     * Generated from protobuf field <code>string row = 3;</code>
     */
    protected $row = '';
    /**
     * Localized row.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedRow = 4;</code>
     */
    protected $localizedRow = null;
    /**
     * The section of the seat, such as "121".
     *
     * Generated from protobuf field <code>string section = 5;</code>
     */
    protected $section = '';
    /**
     * Localized section.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedSection = 6;</code>
     */
    protected $localizedSection = null;
    /**
     * The gate the ticket holder should enter to get to their seat, such as "A" or "West".
     *
     * Generated from protobuf field <code>string gate = 7;</code>
     */
    protected $gate = '';
    /**
     * Localized gate.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedGate = 8;</code>
     */
    protected $localizedGate = null;
    /**
     * The identifier code for the seat. E.g. "312-H-7".
     *
     * Generated from protobuf field <code>string identifier = 9;</code>
     */
    protected $identifier = '';
    /**
     * Localized Identifier.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedIdentifier = 10;</code>
     */
    protected $localizedIdentifier = null;
    /**
     * A description of the seat, such as "Shared Sofa Seat".
     *
     * Generated from protobuf field <code>string description = 11;</code>
     */
    protected $description = '';
    /**
     * Localized description.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedDescription = 12;</code>
     */
    protected $localizedDescription = null;
    /**
     * The type of ticket, such as "General Admission", "VIP", "Lower Reserve", etc.
     *
     * Generated from protobuf field <code>string type = 13;</code>
     */
    protected $type = '';
    /**
     * Localized type.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedType = 14;</code>
     */
    protected $localizedType = null;
    /**
     * The level the ticket holder should use to get to their seat.
     *
     * Generated from protobuf field <code>string level = 15;</code>
     */
    protected $level = '';
    /**
     * Localized level.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedLevel = 16;</code>
     */
    protected $localizedLevel = null;
    /**
     * The aisle the ticket holder should use to get to their seat.
     *
     * Generated from protobuf field <code>string aisle = 17;</code>
     */
    protected $aisle = '';
    /**
     * Localized aisle.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAisle = 18;</code>
     */
    protected $localizedAisle = null;
    /**
     * The door used to access the event (if applicable).
     *
     * Generated from protobuf field <code>string door = 19;</code>
     */
    protected $door = '';
    /**
     * Localized door.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedDoor = 20;</code>
     */
    protected $localizedDoor = null;
    /**
     * The associated color for the seat section as determined by the venue. Apple poster style NFC event tickets will change the color of the footer of the ticket to assist in directing attendees. Specified as a CSS-style RGB triple. E.g. `rgb(100,10,110`.
     *
     * Generated from protobuf field <code>string sectionColor = 21;</code>
     */
    protected $sectionColor = '';
    /**
     * A URL to a portal with additional event information. A deep link is preferred to provide a more personalised experience. Used with Apple poster style NFC event tickets only. A value in the Seat Information object will override a value in the Venue object.
     *
     * Generated from protobuf field <code>string portalURL = 22;</code>
     */
    protected $portalURL = '';
    /**
     * Localized portal URL.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedPortalURL = 23;</code>
     */
    protected $localizedPortalURL = null;
    /**
     * venueEntrance is a more flexible field that the venue labels provided in seating information, as it’s a text field with no label. E.g. can be used if a venue uses a category other than gate, portal, door (part of seating information) to describe the entrance, such as "VIP Entry".
     *
     * Generated from protobuf field <code>string venueEntrance = 24;</code>
     */
    protected $venueEntrance = '';
    /**
     * Localized portal URL.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedVenueEntrance = 25;</code>
     */
    protected $localizedVenueEntrance = null;
    /**
     * The level of admission the ticket provides E.g. "General Admission", "VIP", etc.
     *
     * Generated from protobuf field <code>string admissionLevel = 26;</code>
     */
    protected $admissionLevel = '';
    /**
     * Localized admission level.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAdmissionLevel = 27;</code>
     */
    protected $localizedAdmissionLevel = null;
    /**
     * A shortened representation of admissionLevel, which can be shown alongside seating information, unlike admissionLevel which cannot be displayed alongside seating information on Apple poster tickets.
     *
     * Generated from protobuf field <code>string admissionLevelAbbreviation = 28;</code>
     */
    protected $admissionLevelAbbreviation = '';
    /**
     * Localized admission level abbreviation.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAdmissionLevelAbbreviation = 29;</code>
     */
    protected $localizedAdmissionLevelAbbreviation = null;
    /**
     * The long description of the entrance information.
     *
     * Generated from protobuf field <code>string entranceDescription = 30;</code>
     */
    protected $entranceDescription = '';
    /**
     * Localized entrance description.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedEntranceDescription = 31;</code>
     */
    protected $localizedEntranceDescription = null;
    /**
     * The room where the seat is located. A value here will overwrite any room value given in EventSemanticTags.
     *
     * Generated from protobuf field <code>string room = 32;</code>
     */
    protected $room = '';
    /**
     * Localized room.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedRoom = 33;</code>
     */
    protected $localizedRoom = null;
    /**
     * The additional ticket attributes text provides a field for additional information that is essential to be on the pass face, but doesn’t fall into any other category. It is displayed directly above the venue name/region label on Apple poster tickets only.
     *
     * Generated from protobuf field <code>string additionalTicketAttributes = 34;</code>
     */
    protected $additionalTicketAttributes = '';
    /**
     * Localized room.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAdditionalTicketAttributes = 35;</code>
     */
    protected $localizedAdditionalTicketAttributes = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $seat
     *           The seat number, such as "1", "2", "3", or any other seat identifier.
     *     @type \Io\LocalizedString $localizedSeat
     *           Localized seat number.
     *     @type string $row
     *           The row of the seat, such as "1", E", "BB", or "A5".
     *     @type \Io\LocalizedString $localizedRow
     *           Localized row.
     *     @type string $section
     *           The section of the seat, such as "121".
     *     @type \Io\LocalizedString $localizedSection
     *           Localized section.
     *     @type string $gate
     *           The gate the ticket holder should enter to get to their seat, such as "A" or "West".
     *     @type \Io\LocalizedString $localizedGate
     *           Localized gate.
     *     @type string $identifier
     *           The identifier code for the seat. E.g. "312-H-7".
     *     @type \Io\LocalizedString $localizedIdentifier
     *           Localized Identifier.
     *     @type string $description
     *           A description of the seat, such as "Shared Sofa Seat".
     *     @type \Io\LocalizedString $localizedDescription
     *           Localized description.
     *     @type string $type
     *           The type of ticket, such as "General Admission", "VIP", "Lower Reserve", etc.
     *     @type \Io\LocalizedString $localizedType
     *           Localized type.
     *     @type string $level
     *           The level the ticket holder should use to get to their seat.
     *     @type \Io\LocalizedString $localizedLevel
     *           Localized level.
     *     @type string $aisle
     *           The aisle the ticket holder should use to get to their seat.
     *     @type \Io\LocalizedString $localizedAisle
     *           Localized aisle.
     *     @type string $door
     *           The door used to access the event (if applicable).
     *     @type \Io\LocalizedString $localizedDoor
     *           Localized door.
     *     @type string $sectionColor
     *           The associated color for the seat section as determined by the venue. Apple poster style NFC event tickets will change the color of the footer of the ticket to assist in directing attendees. Specified as a CSS-style RGB triple. E.g. `rgb(100,10,110`.
     *     @type string $portalURL
     *           A URL to a portal with additional event information. A deep link is preferred to provide a more personalised experience. Used with Apple poster style NFC event tickets only. A value in the Seat Information object will override a value in the Venue object.
     *     @type \Io\LocalizedString $localizedPortalURL
     *           Localized portal URL.
     *     @type string $venueEntrance
     *           venueEntrance is a more flexible field that the venue labels provided in seating information, as it’s a text field with no label. E.g. can be used if a venue uses a category other than gate, portal, door (part of seating information) to describe the entrance, such as "VIP Entry".
     *     @type \Io\LocalizedString $localizedVenueEntrance
     *           Localized portal URL.
     *     @type string $admissionLevel
     *           The level of admission the ticket provides E.g. "General Admission", "VIP", etc.
     *     @type \Io\LocalizedString $localizedAdmissionLevel
     *           Localized admission level.
     *     @type string $admissionLevelAbbreviation
     *           A shortened representation of admissionLevel, which can be shown alongside seating information, unlike admissionLevel which cannot be displayed alongside seating information on Apple poster tickets.
     *     @type \Io\LocalizedString $localizedAdmissionLevelAbbreviation
     *           Localized admission level abbreviation.
     *     @type string $entranceDescription
     *           The long description of the entrance information.
     *     @type \Io\LocalizedString $localizedEntranceDescription
     *           Localized entrance description.
     *     @type string $room
     *           The room where the seat is located. A value here will overwrite any room value given in EventSemanticTags.
     *     @type \Io\LocalizedString $localizedRoom
     *           Localized room.
     *     @type string $additionalTicketAttributes
     *           The additional ticket attributes text provides a field for additional information that is essential to be on the pass face, but doesn’t fall into any other category. It is displayed directly above the venue name/region label on Apple poster tickets only.
     *     @type \Io\LocalizedString $localizedAdditionalTicketAttributes
     *           Localized room.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\EventTickets\Ticket::initOnce();
        parent::__construct($data);
    }

    /**
     * The seat number, such as "1", "2", "3", or any other seat identifier.
     *
     * Generated from protobuf field <code>string seat = 1;</code>
     * @return string
     */
    public function getSeat()
    {
        return $this->seat;
    }

    /**
     * The seat number, such as "1", "2", "3", or any other seat identifier.
     *
     * Generated from protobuf field <code>string seat = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSeat($var)
    {
        GPBUtil::checkString($var, True);
        $this->seat = $var;

        return $this;
    }

    /**
     * Localized seat number.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedSeat = 2;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedSeat()
    {
        return $this->localizedSeat;
    }

    public function hasLocalizedSeat()
    {
        return isset($this->localizedSeat);
    }

    public function clearLocalizedSeat()
    {
        unset($this->localizedSeat);
    }

    /**
     * Localized seat number.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedSeat = 2;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedSeat($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedSeat = $var;

        return $this;
    }

    /**
     * The row of the seat, such as "1", E", "BB", or "A5".
     *
     * Generated from protobuf field <code>string row = 3;</code>
     * @return string
     */
    public function getRow()
    {
        return $this->row;
    }

    /**
     * The row of the seat, such as "1", E", "BB", or "A5".
     *
     * Generated from protobuf field <code>string row = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setRow($var)
    {
        GPBUtil::checkString($var, True);
        $this->row = $var;

        return $this;
    }

    /**
     * Localized row.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedRow = 4;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedRow()
    {
        return $this->localizedRow;
    }

    public function hasLocalizedRow()
    {
        return isset($this->localizedRow);
    }

    public function clearLocalizedRow()
    {
        unset($this->localizedRow);
    }

    /**
     * Localized row.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedRow = 4;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedRow($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedRow = $var;

        return $this;
    }

    /**
     * The section of the seat, such as "121".
     *
     * Generated from protobuf field <code>string section = 5;</code>
     * @return string
     */
    public function getSection()
    {
        return $this->section;
    }

    /**
     * The section of the seat, such as "121".
     *
     * Generated from protobuf field <code>string section = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setSection($var)
    {
        GPBUtil::checkString($var, True);
        $this->section = $var;

        return $this;
    }

    /**
     * Localized section.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedSection = 6;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedSection()
    {
        return $this->localizedSection;
    }

    public function hasLocalizedSection()
    {
        return isset($this->localizedSection);
    }

    public function clearLocalizedSection()
    {
        unset($this->localizedSection);
    }

    /**
     * Localized section.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedSection = 6;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedSection($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedSection = $var;

        return $this;
    }

    /**
     * The gate the ticket holder should enter to get to their seat, such as "A" or "West".
     *
     * Generated from protobuf field <code>string gate = 7;</code>
     * @return string
     */
    public function getGate()
    {
        return $this->gate;
    }

    /**
     * The gate the ticket holder should enter to get to their seat, such as "A" or "West".
     *
     * Generated from protobuf field <code>string gate = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setGate($var)
    {
        GPBUtil::checkString($var, True);
        $this->gate = $var;

        return $this;
    }

    /**
     * Localized gate.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedGate = 8;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedGate()
    {
        return $this->localizedGate;
    }

    public function hasLocalizedGate()
    {
        return isset($this->localizedGate);
    }

    public function clearLocalizedGate()
    {
        unset($this->localizedGate);
    }

    /**
     * Localized gate.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedGate = 8;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedGate($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedGate = $var;

        return $this;
    }

    /**
     * The identifier code for the seat. E.g. "312-H-7".
     *
     * Generated from protobuf field <code>string identifier = 9;</code>
     * @return string
     */
    public function getIdentifier()
    {
        return $this->identifier;
    }

    /**
     * The identifier code for the seat. E.g. "312-H-7".
     *
     * Generated from protobuf field <code>string identifier = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setIdentifier($var)
    {
        GPBUtil::checkString($var, True);
        $this->identifier = $var;

        return $this;
    }

    /**
     * Localized Identifier.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedIdentifier = 10;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedIdentifier()
    {
        return $this->localizedIdentifier;
    }

    public function hasLocalizedIdentifier()
    {
        return isset($this->localizedIdentifier);
    }

    public function clearLocalizedIdentifier()
    {
        unset($this->localizedIdentifier);
    }

    /**
     * Localized Identifier.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedIdentifier = 10;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedIdentifier($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedIdentifier = $var;

        return $this;
    }

    /**
     * A description of the seat, such as "Shared Sofa Seat".
     *
     * Generated from protobuf field <code>string description = 11;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * A description of the seat, such as "Shared Sofa Seat".
     *
     * Generated from protobuf field <code>string description = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Localized description.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedDescription = 12;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedDescription()
    {
        return $this->localizedDescription;
    }

    public function hasLocalizedDescription()
    {
        return isset($this->localizedDescription);
    }

    public function clearLocalizedDescription()
    {
        unset($this->localizedDescription);
    }

    /**
     * Localized description.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedDescription = 12;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedDescription($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedDescription = $var;

        return $this;
    }

    /**
     * The type of ticket, such as "General Admission", "VIP", "Lower Reserve", etc.
     *
     * Generated from protobuf field <code>string type = 13;</code>
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * The type of ticket, such as "General Admission", "VIP", "Lower Reserve", etc.
     *
     * Generated from protobuf field <code>string type = 13;</code>
     * @param string $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, True);
        $this->type = $var;

        return $this;
    }

    /**
     * Localized type.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedType = 14;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedType()
    {
        return $this->localizedType;
    }

    public function hasLocalizedType()
    {
        return isset($this->localizedType);
    }

    public function clearLocalizedType()
    {
        unset($this->localizedType);
    }

    /**
     * Localized type.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedType = 14;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedType($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedType = $var;

        return $this;
    }

    /**
     * The level the ticket holder should use to get to their seat.
     *
     * Generated from protobuf field <code>string level = 15;</code>
     * @return string
     */
    public function getLevel()
    {
        return $this->level;
    }

    /**
     * The level the ticket holder should use to get to their seat.
     *
     * Generated from protobuf field <code>string level = 15;</code>
     * @param string $var
     * @return $this
     */
    public function setLevel($var)
    {
        GPBUtil::checkString($var, True);
        $this->level = $var;

        return $this;
    }

    /**
     * Localized level.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedLevel = 16;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedLevel()
    {
        return $this->localizedLevel;
    }

    public function hasLocalizedLevel()
    {
        return isset($this->localizedLevel);
    }

    public function clearLocalizedLevel()
    {
        unset($this->localizedLevel);
    }

    /**
     * Localized level.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedLevel = 16;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedLevel($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedLevel = $var;

        return $this;
    }

    /**
     * The aisle the ticket holder should use to get to their seat.
     *
     * Generated from protobuf field <code>string aisle = 17;</code>
     * @return string
     */
    public function getAisle()
    {
        return $this->aisle;
    }

    /**
     * The aisle the ticket holder should use to get to their seat.
     *
     * Generated from protobuf field <code>string aisle = 17;</code>
     * @param string $var
     * @return $this
     */
    public function setAisle($var)
    {
        GPBUtil::checkString($var, True);
        $this->aisle = $var;

        return $this;
    }

    /**
     * Localized aisle.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAisle = 18;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedAisle()
    {
        return $this->localizedAisle;
    }

    public function hasLocalizedAisle()
    {
        return isset($this->localizedAisle);
    }

    public function clearLocalizedAisle()
    {
        unset($this->localizedAisle);
    }

    /**
     * Localized aisle.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAisle = 18;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedAisle($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedAisle = $var;

        return $this;
    }

    /**
     * The door used to access the event (if applicable).
     *
     * Generated from protobuf field <code>string door = 19;</code>
     * @return string
     */
    public function getDoor()
    {
        return $this->door;
    }

    /**
     * The door used to access the event (if applicable).
     *
     * Generated from protobuf field <code>string door = 19;</code>
     * @param string $var
     * @return $this
     */
    public function setDoor($var)
    {
        GPBUtil::checkString($var, True);
        $this->door = $var;

        return $this;
    }

    /**
     * Localized door.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedDoor = 20;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedDoor()
    {
        return $this->localizedDoor;
    }

    public function hasLocalizedDoor()
    {
        return isset($this->localizedDoor);
    }

    public function clearLocalizedDoor()
    {
        unset($this->localizedDoor);
    }

    /**
     * Localized door.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedDoor = 20;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedDoor($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedDoor = $var;

        return $this;
    }

    /**
     * The associated color for the seat section as determined by the venue. Apple poster style NFC event tickets will change the color of the footer of the ticket to assist in directing attendees. Specified as a CSS-style RGB triple. E.g. `rgb(100,10,110`.
     *
     * Generated from protobuf field <code>string sectionColor = 21;</code>
     * @return string
     */
    public function getSectionColor()
    {
        return $this->sectionColor;
    }

    /**
     * The associated color for the seat section as determined by the venue. Apple poster style NFC event tickets will change the color of the footer of the ticket to assist in directing attendees. Specified as a CSS-style RGB triple. E.g. `rgb(100,10,110`.
     *
     * Generated from protobuf field <code>string sectionColor = 21;</code>
     * @param string $var
     * @return $this
     */
    public function setSectionColor($var)
    {
        GPBUtil::checkString($var, True);
        $this->sectionColor = $var;

        return $this;
    }

    /**
     * A URL to a portal with additional event information. A deep link is preferred to provide a more personalised experience. Used with Apple poster style NFC event tickets only. A value in the Seat Information object will override a value in the Venue object.
     *
     * Generated from protobuf field <code>string portalURL = 22;</code>
     * @return string
     */
    public function getPortalURL()
    {
        return $this->portalURL;
    }

    /**
     * A URL to a portal with additional event information. A deep link is preferred to provide a more personalised experience. Used with Apple poster style NFC event tickets only. A value in the Seat Information object will override a value in the Venue object.
     *
     * Generated from protobuf field <code>string portalURL = 22;</code>
     * @param string $var
     * @return $this
     */
    public function setPortalURL($var)
    {
        GPBUtil::checkString($var, True);
        $this->portalURL = $var;

        return $this;
    }

    /**
     * Localized portal URL.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedPortalURL = 23;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedPortalURL()
    {
        return $this->localizedPortalURL;
    }

    public function hasLocalizedPortalURL()
    {
        return isset($this->localizedPortalURL);
    }

    public function clearLocalizedPortalURL()
    {
        unset($this->localizedPortalURL);
    }

    /**
     * Localized portal URL.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedPortalURL = 23;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedPortalURL($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedPortalURL = $var;

        return $this;
    }

    /**
     * venueEntrance is a more flexible field that the venue labels provided in seating information, as it’s a text field with no label. E.g. can be used if a venue uses a category other than gate, portal, door (part of seating information) to describe the entrance, such as "VIP Entry".
     *
     * Generated from protobuf field <code>string venueEntrance = 24;</code>
     * @return string
     */
    public function getVenueEntrance()
    {
        return $this->venueEntrance;
    }

    /**
     * venueEntrance is a more flexible field that the venue labels provided in seating information, as it’s a text field with no label. E.g. can be used if a venue uses a category other than gate, portal, door (part of seating information) to describe the entrance, such as "VIP Entry".
     *
     * Generated from protobuf field <code>string venueEntrance = 24;</code>
     * @param string $var
     * @return $this
     */
    public function setVenueEntrance($var)
    {
        GPBUtil::checkString($var, True);
        $this->venueEntrance = $var;

        return $this;
    }

    /**
     * Localized portal URL.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedVenueEntrance = 25;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedVenueEntrance()
    {
        return $this->localizedVenueEntrance;
    }

    public function hasLocalizedVenueEntrance()
    {
        return isset($this->localizedVenueEntrance);
    }

    public function clearLocalizedVenueEntrance()
    {
        unset($this->localizedVenueEntrance);
    }

    /**
     * Localized portal URL.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedVenueEntrance = 25;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedVenueEntrance($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedVenueEntrance = $var;

        return $this;
    }

    /**
     * The level of admission the ticket provides E.g. "General Admission", "VIP", etc.
     *
     * Generated from protobuf field <code>string admissionLevel = 26;</code>
     * @return string
     */
    public function getAdmissionLevel()
    {
        return $this->admissionLevel;
    }

    /**
     * The level of admission the ticket provides E.g. "General Admission", "VIP", etc.
     *
     * Generated from protobuf field <code>string admissionLevel = 26;</code>
     * @param string $var
     * @return $this
     */
    public function setAdmissionLevel($var)
    {
        GPBUtil::checkString($var, True);
        $this->admissionLevel = $var;

        return $this;
    }

    /**
     * Localized admission level.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAdmissionLevel = 27;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedAdmissionLevel()
    {
        return $this->localizedAdmissionLevel;
    }

    public function hasLocalizedAdmissionLevel()
    {
        return isset($this->localizedAdmissionLevel);
    }

    public function clearLocalizedAdmissionLevel()
    {
        unset($this->localizedAdmissionLevel);
    }

    /**
     * Localized admission level.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAdmissionLevel = 27;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedAdmissionLevel($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedAdmissionLevel = $var;

        return $this;
    }

    /**
     * A shortened representation of admissionLevel, which can be shown alongside seating information, unlike admissionLevel which cannot be displayed alongside seating information on Apple poster tickets.
     *
     * Generated from protobuf field <code>string admissionLevelAbbreviation = 28;</code>
     * @return string
     */
    public function getAdmissionLevelAbbreviation()
    {
        return $this->admissionLevelAbbreviation;
    }

    /**
     * A shortened representation of admissionLevel, which can be shown alongside seating information, unlike admissionLevel which cannot be displayed alongside seating information on Apple poster tickets.
     *
     * Generated from protobuf field <code>string admissionLevelAbbreviation = 28;</code>
     * @param string $var
     * @return $this
     */
    public function setAdmissionLevelAbbreviation($var)
    {
        GPBUtil::checkString($var, True);
        $this->admissionLevelAbbreviation = $var;

        return $this;
    }

    /**
     * Localized admission level abbreviation.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAdmissionLevelAbbreviation = 29;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedAdmissionLevelAbbreviation()
    {
        return $this->localizedAdmissionLevelAbbreviation;
    }

    public function hasLocalizedAdmissionLevelAbbreviation()
    {
        return isset($this->localizedAdmissionLevelAbbreviation);
    }

    public function clearLocalizedAdmissionLevelAbbreviation()
    {
        unset($this->localizedAdmissionLevelAbbreviation);
    }

    /**
     * Localized admission level abbreviation.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAdmissionLevelAbbreviation = 29;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedAdmissionLevelAbbreviation($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedAdmissionLevelAbbreviation = $var;

        return $this;
    }

    /**
     * The long description of the entrance information.
     *
     * Generated from protobuf field <code>string entranceDescription = 30;</code>
     * @return string
     */
    public function getEntranceDescription()
    {
        return $this->entranceDescription;
    }

    /**
     * The long description of the entrance information.
     *
     * Generated from protobuf field <code>string entranceDescription = 30;</code>
     * @param string $var
     * @return $this
     */
    public function setEntranceDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->entranceDescription = $var;

        return $this;
    }

    /**
     * Localized entrance description.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedEntranceDescription = 31;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedEntranceDescription()
    {
        return $this->localizedEntranceDescription;
    }

    public function hasLocalizedEntranceDescription()
    {
        return isset($this->localizedEntranceDescription);
    }

    public function clearLocalizedEntranceDescription()
    {
        unset($this->localizedEntranceDescription);
    }

    /**
     * Localized entrance description.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedEntranceDescription = 31;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedEntranceDescription($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedEntranceDescription = $var;

        return $this;
    }

    /**
     * The room where the seat is located. A value here will overwrite any room value given in EventSemanticTags.
     *
     * Generated from protobuf field <code>string room = 32;</code>
     * @return string
     */
    public function getRoom()
    {
        return $this->room;
    }

    /**
     * The room where the seat is located. A value here will overwrite any room value given in EventSemanticTags.
     *
     * Generated from protobuf field <code>string room = 32;</code>
     * @param string $var
     * @return $this
     */
    public function setRoom($var)
    {
        GPBUtil::checkString($var, True);
        $this->room = $var;

        return $this;
    }

    /**
     * Localized room.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedRoom = 33;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedRoom()
    {
        return $this->localizedRoom;
    }

    public function hasLocalizedRoom()
    {
        return isset($this->localizedRoom);
    }

    public function clearLocalizedRoom()
    {
        unset($this->localizedRoom);
    }

    /**
     * Localized room.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedRoom = 33;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedRoom($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedRoom = $var;

        return $this;
    }

    /**
     * The additional ticket attributes text provides a field for additional information that is essential to be on the pass face, but doesn’t fall into any other category. It is displayed directly above the venue name/region label on Apple poster tickets only.
     *
     * Generated from protobuf field <code>string additionalTicketAttributes = 34;</code>
     * @return string
     */
    public function getAdditionalTicketAttributes()
    {
        return $this->additionalTicketAttributes;
    }

    /**
     * The additional ticket attributes text provides a field for additional information that is essential to be on the pass face, but doesn’t fall into any other category. It is displayed directly above the venue name/region label on Apple poster tickets only.
     *
     * Generated from protobuf field <code>string additionalTicketAttributes = 34;</code>
     * @param string $var
     * @return $this
     */
    public function setAdditionalTicketAttributes($var)
    {
        GPBUtil::checkString($var, True);
        $this->additionalTicketAttributes = $var;

        return $this;
    }

    /**
     * Localized room.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAdditionalTicketAttributes = 35;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedAdditionalTicketAttributes()
    {
        return $this->localizedAdditionalTicketAttributes;
    }

    public function hasLocalizedAdditionalTicketAttributes()
    {
        return isset($this->localizedAdditionalTicketAttributes);
    }

    public function clearLocalizedAdditionalTicketAttributes()
    {
        unset($this->localizedAdditionalTicketAttributes);
    }

    /**
     * Localized room.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAdditionalTicketAttributes = 35;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedAdditionalTicketAttributes($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedAdditionalTicketAttributes = $var;

        return $this;
    }

}

