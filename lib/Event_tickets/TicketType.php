<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/event_tickets/ticket_type.proto

namespace Event_tickets;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The Ticket Type Details
 *
 * Generated from protobuf message <code>event_tickets.TicketType</code>
 */
class TicketType extends \Google\Protobuf\Internal\Message
{
    /**
     * PassKit generated ticket type id (22 characters).
     *
     * Generated from protobuf field <code>string id = 1 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    protected $id = '';
    /**
     * User generated ticket type id; unique within the Production.
     *
     * Generated from protobuf field <code>string uid = 2;</code>
     */
    protected $uid = '';
    /**
     * The Production the ticket type belongs to
     *
     * Generated from protobuf field <code>string productionId = 3;</code>
     */
    protected $productionId = '';
    /**
     * Name of the ticket type. Internal use only.
     *
     * Generated from protobuf field <code>string name = 4;</code>
     */
    protected $name = '';
    /**
     * Localized name of the ticket type.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedName = 5;</code>
     */
    protected $localizedName = null;
    /**
     * Terms & conditions specifically for this ticket type.
     *
     * Generated from protobuf field <code>string ticketTypeConditions = 6;</code>
     */
    protected $ticketTypeConditions = '';
    /**
     * Localized ticket conditions for this ticket type.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedTicketTypeConditions = 7;</code>
     */
    protected $localizedTicketTypeConditions = null;
    /**
     * The pass template design ID that tickets will use when initially issued.
     *
     * Generated from protobuf field <code>string beforeRedeemPassTemplateId = 8;</code>
     */
    protected $beforeRedeemPassTemplateId = '';
    /**
     * Optional pass template ID that tickets will use after the ticket holder checked into the venue (when the ticket switches to its redeemed state).
     *
     * Generated from protobuf field <code>string afterRedeemPassTemplateId = 9;</code>
     */
    protected $afterRedeemPassTemplateId = '';
    /**
     * The date the ticket type was created. Cannot be set via the API.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 10 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    protected $created = null;
    /**
     * The date the ticket type updated. Cannot be set via the API.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 11 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    protected $updated = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           PassKit generated ticket type id (22 characters).
     *     @type string $uid
     *           User generated ticket type id; unique within the Production.
     *     @type string $productionId
     *           The Production the ticket type belongs to
     *     @type string $name
     *           Name of the ticket type. Internal use only.
     *     @type \Io\LocalizedString $localizedName
     *           Localized name of the ticket type.
     *     @type string $ticketTypeConditions
     *           Terms & conditions specifically for this ticket type.
     *     @type \Io\LocalizedString $localizedTicketTypeConditions
     *           Localized ticket conditions for this ticket type.
     *     @type string $beforeRedeemPassTemplateId
     *           The pass template design ID that tickets will use when initially issued.
     *     @type string $afterRedeemPassTemplateId
     *           Optional pass template ID that tickets will use after the ticket holder checked into the venue (when the ticket switches to its redeemed state).
     *     @type \Google\Protobuf\Timestamp $created
     *           The date the ticket type was created. Cannot be set via the API.
     *     @type \Google\Protobuf\Timestamp $updated
     *           The date the ticket type updated. Cannot be set via the API.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\EventTickets\TicketType::initOnce();
        parent::__construct($data);
    }

    /**
     * PassKit generated ticket type id (22 characters).
     *
     * Generated from protobuf field <code>string id = 1 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * PassKit generated ticket type id (22 characters).
     *
     * Generated from protobuf field <code>string id = 1 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * User generated ticket type id; unique within the Production.
     *
     * Generated from protobuf field <code>string uid = 2;</code>
     * @return string
     */
    public function getUid()
    {
        return $this->uid;
    }

    /**
     * User generated ticket type id; unique within the Production.
     *
     * Generated from protobuf field <code>string uid = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setUid($var)
    {
        GPBUtil::checkString($var, True);
        $this->uid = $var;

        return $this;
    }

    /**
     * The Production the ticket type belongs to
     *
     * Generated from protobuf field <code>string productionId = 3;</code>
     * @return string
     */
    public function getProductionId()
    {
        return $this->productionId;
    }

    /**
     * The Production the ticket type belongs to
     *
     * Generated from protobuf field <code>string productionId = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setProductionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->productionId = $var;

        return $this;
    }

    /**
     * Name of the ticket type. Internal use only.
     *
     * Generated from protobuf field <code>string name = 4;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Name of the ticket type. Internal use only.
     *
     * Generated from protobuf field <code>string name = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Localized name of the ticket type.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedName = 5;</code>
     * @return \Io\LocalizedString
     */
    public function getLocalizedName()
    {
        return isset($this->localizedName) ? $this->localizedName : null;
    }

    public function hasLocalizedName()
    {
        return isset($this->localizedName);
    }

    public function clearLocalizedName()
    {
        unset($this->localizedName);
    }

    /**
     * Localized name of the ticket type.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedName = 5;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedName($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedName = $var;

        return $this;
    }

    /**
     * Terms & conditions specifically for this ticket type.
     *
     * Generated from protobuf field <code>string ticketTypeConditions = 6;</code>
     * @return string
     */
    public function getTicketTypeConditions()
    {
        return $this->ticketTypeConditions;
    }

    /**
     * Terms & conditions specifically for this ticket type.
     *
     * Generated from protobuf field <code>string ticketTypeConditions = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setTicketTypeConditions($var)
    {
        GPBUtil::checkString($var, True);
        $this->ticketTypeConditions = $var;

        return $this;
    }

    /**
     * Localized ticket conditions for this ticket type.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedTicketTypeConditions = 7;</code>
     * @return \Io\LocalizedString
     */
    public function getLocalizedTicketTypeConditions()
    {
        return isset($this->localizedTicketTypeConditions) ? $this->localizedTicketTypeConditions : null;
    }

    public function hasLocalizedTicketTypeConditions()
    {
        return isset($this->localizedTicketTypeConditions);
    }

    public function clearLocalizedTicketTypeConditions()
    {
        unset($this->localizedTicketTypeConditions);
    }

    /**
     * Localized ticket conditions for this ticket type.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedTicketTypeConditions = 7;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedTicketTypeConditions($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedTicketTypeConditions = $var;

        return $this;
    }

    /**
     * The pass template design ID that tickets will use when initially issued.
     *
     * Generated from protobuf field <code>string beforeRedeemPassTemplateId = 8;</code>
     * @return string
     */
    public function getBeforeRedeemPassTemplateId()
    {
        return $this->beforeRedeemPassTemplateId;
    }

    /**
     * The pass template design ID that tickets will use when initially issued.
     *
     * Generated from protobuf field <code>string beforeRedeemPassTemplateId = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setBeforeRedeemPassTemplateId($var)
    {
        GPBUtil::checkString($var, True);
        $this->beforeRedeemPassTemplateId = $var;

        return $this;
    }

    /**
     * Optional pass template ID that tickets will use after the ticket holder checked into the venue (when the ticket switches to its redeemed state).
     *
     * Generated from protobuf field <code>string afterRedeemPassTemplateId = 9;</code>
     * @return string
     */
    public function getAfterRedeemPassTemplateId()
    {
        return $this->afterRedeemPassTemplateId;
    }

    /**
     * Optional pass template ID that tickets will use after the ticket holder checked into the venue (when the ticket switches to its redeemed state).
     *
     * Generated from protobuf field <code>string afterRedeemPassTemplateId = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setAfterRedeemPassTemplateId($var)
    {
        GPBUtil::checkString($var, True);
        $this->afterRedeemPassTemplateId = $var;

        return $this;
    }

    /**
     * The date the ticket type was created. Cannot be set via the API.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 10 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getCreated()
    {
        return isset($this->created) ? $this->created : null;
    }

    public function hasCreated()
    {
        return isset($this->created);
    }

    public function clearCreated()
    {
        unset($this->created);
    }

    /**
     * The date the ticket type was created. Cannot be set via the API.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 10 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreated($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->created = $var;

        return $this;
    }

    /**
     * The date the ticket type updated. Cannot be set via the API.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 11 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getUpdated()
    {
        return isset($this->updated) ? $this->updated : null;
    }

    public function hasUpdated()
    {
        return isset($this->updated);
    }

    public function clearUpdated()
    {
        unset($this->updated);
    }

    /**
     * The date the ticket type updated. Cannot be set via the API.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 11 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdated($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->updated = $var;

        return $this;
    }

}

