<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: io/event_tickets/ticket.proto

namespace Event_tickets;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>event_tickets.FaceValue</code>
 */
class FaceValue extends \Google\Protobuf\Internal\Message
{
    /**
     * The ticket amount in cents.
     *
     * Generated from protobuf field <code>float amount = 1;</code>
     */
    protected $amount = 0.0;
    /**
     * The ticket currency.
     *
     * Generated from protobuf field <code>string currency = 2;</code>
     */
    protected $currency = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type float $amount
     *           The ticket amount in cents.
     *     @type string $currency
     *           The ticket currency.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\EventTickets\Ticket::initOnce();
        parent::__construct($data);
    }

    /**
     * The ticket amount in cents.
     *
     * Generated from protobuf field <code>float amount = 1;</code>
     * @return float
     */
    public function getAmount()
    {
        return $this->amount;
    }

    /**
     * The ticket amount in cents.
     *
     * Generated from protobuf field <code>float amount = 1;</code>
     * @param float $var
     * @return $this
     */
    public function setAmount($var)
    {
        GPBUtil::checkFloat($var);
        $this->amount = $var;

        return $this;
    }

    /**
     * The ticket currency.
     *
     * Generated from protobuf field <code>string currency = 2;</code>
     * @return string
     */
    public function getCurrency()
    {
        return $this->currency;
    }

    /**
     * The ticket currency.
     *
     * Generated from protobuf field <code>string currency = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setCurrency($var)
    {
        GPBUtil::checkString($var, True);
        $this->currency = $var;

        return $this;
    }

}

