<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: io/event_tickets/venue.proto

namespace Event_tickets;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>event_tickets.Venue</code>
 */
class Venue extends \Google\Protobuf\Internal\Message
{
    /**
     * PassKit generated venue id (22 characters).
     *
     * Generated from protobuf field <code>string id = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     */
    protected $id = '';
    /**
     * User generated venue id; unique within the user account.
     *
     * Generated from protobuf field <code>string uid = 2;</code>
     */
    protected $uid = '';
    /**
     * The venue name.
     *
     * Generated from protobuf field <code>string name = 3;</code>
     */
    protected $name = '';
    /**
     * Localized venue name.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedName = 4;</code>
     */
    protected $localizedName = null;
    /**
     * The venue address.
     *
     * Generated from protobuf field <code>string address = 5;</code>
     */
    protected $address = '';
    /**
     * Localized venue address.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAddress = 6;</code>
     */
    protected $localizedAddress = null;
    /**
     * Timezone applied for the event dates. e.g. America/New_York, Asia/Singapore, Europe/London.
     *
     * Generated from protobuf field <code>string timezone = 7;</code>
     */
    protected $timezone = '';
    /**
     * Optional GPS location details of the venue. If provided will be embedded into the ticket as the first GPS location.
     *
     * Generated from protobuf field <code>repeated .io.GPSLocation gpsCoords = 8;</code>
     */
    private $gpsCoords;
    /**
     * Event URLs integrate with Apple's poster event ticket (NFC and iCloud Binding required) to create a rich event guide on the back of the pass. If you do not have access to an NFC certificate, you should use links in the pass design to provide similar information.
     *
     * Generated from protobuf field <code>.event_tickets.EventUrls eventUrls = 11;</code>
     */
    protected $eventUrls = null;
    /**
     * Room where the event will take place (if applicable). Used only by Apple poster Event Tickets.
     *
     * Generated from protobuf field <code>string room = 12;</code>
     */
    protected $room = '';
    /**
     * The date the venue was created. Not writable.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 9 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     */
    protected $created = null;
    /**
     * The date the venue updated. Not writable.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     */
    protected $updated = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           PassKit generated venue id (22 characters).
     *     @type string $uid
     *           User generated venue id; unique within the user account.
     *     @type string $name
     *           The venue name.
     *     @type \Io\LocalizedString $localizedName
     *           Localized venue name.
     *     @type string $address
     *           The venue address.
     *     @type \Io\LocalizedString $localizedAddress
     *           Localized venue address.
     *     @type string $timezone
     *           Timezone applied for the event dates. e.g. America/New_York, Asia/Singapore, Europe/London.
     *     @type array<\Io\GPSLocation>|\Google\Protobuf\Internal\RepeatedField $gpsCoords
     *           Optional GPS location details of the venue. If provided will be embedded into the ticket as the first GPS location.
     *     @type \Event_tickets\EventUrls $eventUrls
     *           Event URLs integrate with Apple's poster event ticket (NFC and iCloud Binding required) to create a rich event guide on the back of the pass. If you do not have access to an NFC certificate, you should use links in the pass design to provide similar information.
     *     @type string $room
     *           Room where the event will take place (if applicable). Used only by Apple poster Event Tickets.
     *     @type \Google\Protobuf\Timestamp $created
     *           The date the venue was created. Not writable.
     *     @type \Google\Protobuf\Timestamp $updated
     *           The date the venue updated. Not writable.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\EventTickets\Venue::initOnce();
        parent::__construct($data);
    }

    /**
     * PassKit generated venue id (22 characters).
     *
     * Generated from protobuf field <code>string id = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * PassKit generated venue id (22 characters).
     *
     * Generated from protobuf field <code>string id = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * User generated venue id; unique within the user account.
     *
     * Generated from protobuf field <code>string uid = 2;</code>
     * @return string
     */
    public function getUid()
    {
        return $this->uid;
    }

    /**
     * User generated venue id; unique within the user account.
     *
     * Generated from protobuf field <code>string uid = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setUid($var)
    {
        GPBUtil::checkString($var, True);
        $this->uid = $var;

        return $this;
    }

    /**
     * The venue name.
     *
     * Generated from protobuf field <code>string name = 3;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * The venue name.
     *
     * Generated from protobuf field <code>string name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Localized venue name.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedName = 4;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedName()
    {
        return $this->localizedName;
    }

    public function hasLocalizedName()
    {
        return isset($this->localizedName);
    }

    public function clearLocalizedName()
    {
        unset($this->localizedName);
    }

    /**
     * Localized venue name.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedName = 4;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedName($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedName = $var;

        return $this;
    }

    /**
     * The venue address.
     *
     * Generated from protobuf field <code>string address = 5;</code>
     * @return string
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * The venue address.
     *
     * Generated from protobuf field <code>string address = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->address = $var;

        return $this;
    }

    /**
     * Localized venue address.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAddress = 6;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedAddress()
    {
        return $this->localizedAddress;
    }

    public function hasLocalizedAddress()
    {
        return isset($this->localizedAddress);
    }

    public function clearLocalizedAddress()
    {
        unset($this->localizedAddress);
    }

    /**
     * Localized venue address.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAddress = 6;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedAddress($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedAddress = $var;

        return $this;
    }

    /**
     * Timezone applied for the event dates. e.g. America/New_York, Asia/Singapore, Europe/London.
     *
     * Generated from protobuf field <code>string timezone = 7;</code>
     * @return string
     */
    public function getTimezone()
    {
        return $this->timezone;
    }

    /**
     * Timezone applied for the event dates. e.g. America/New_York, Asia/Singapore, Europe/London.
     *
     * Generated from protobuf field <code>string timezone = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setTimezone($var)
    {
        GPBUtil::checkString($var, True);
        $this->timezone = $var;

        return $this;
    }

    /**
     * Optional GPS location details of the venue. If provided will be embedded into the ticket as the first GPS location.
     *
     * Generated from protobuf field <code>repeated .io.GPSLocation gpsCoords = 8;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getGpsCoords()
    {
        return $this->gpsCoords;
    }

    /**
     * Optional GPS location details of the venue. If provided will be embedded into the ticket as the first GPS location.
     *
     * Generated from protobuf field <code>repeated .io.GPSLocation gpsCoords = 8;</code>
     * @param array<\Io\GPSLocation>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setGpsCoords($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Io\GPSLocation::class);
        $this->gpsCoords = $arr;

        return $this;
    }

    /**
     * Event URLs integrate with Apple's poster event ticket (NFC and iCloud Binding required) to create a rich event guide on the back of the pass. If you do not have access to an NFC certificate, you should use links in the pass design to provide similar information.
     *
     * Generated from protobuf field <code>.event_tickets.EventUrls eventUrls = 11;</code>
     * @return \Event_tickets\EventUrls|null
     */
    public function getEventUrls()
    {
        return $this->eventUrls;
    }

    public function hasEventUrls()
    {
        return isset($this->eventUrls);
    }

    public function clearEventUrls()
    {
        unset($this->eventUrls);
    }

    /**
     * Event URLs integrate with Apple's poster event ticket (NFC and iCloud Binding required) to create a rich event guide on the back of the pass. If you do not have access to an NFC certificate, you should use links in the pass design to provide similar information.
     *
     * Generated from protobuf field <code>.event_tickets.EventUrls eventUrls = 11;</code>
     * @param \Event_tickets\EventUrls $var
     * @return $this
     */
    public function setEventUrls($var)
    {
        GPBUtil::checkMessage($var, \Event_tickets\EventUrls::class);
        $this->eventUrls = $var;

        return $this;
    }

    /**
     * Room where the event will take place (if applicable). Used only by Apple poster Event Tickets.
     *
     * Generated from protobuf field <code>string room = 12;</code>
     * @return string
     */
    public function getRoom()
    {
        return $this->room;
    }

    /**
     * Room where the event will take place (if applicable). Used only by Apple poster Event Tickets.
     *
     * Generated from protobuf field <code>string room = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setRoom($var)
    {
        GPBUtil::checkString($var, True);
        $this->room = $var;

        return $this;
    }

    /**
     * The date the venue was created. Not writable.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 9 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreated()
    {
        return $this->created;
    }

    public function hasCreated()
    {
        return isset($this->created);
    }

    public function clearCreated()
    {
        unset($this->created);
    }

    /**
     * The date the venue was created. Not writable.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 9 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreated($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->created = $var;

        return $this;
    }

    /**
     * The date the venue updated. Not writable.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdated()
    {
        return $this->updated;
    }

    public function hasUpdated()
    {
        return isset($this->updated);
    }

    public function clearUpdated()
    {
        unset($this->updated);
    }

    /**
     * The date the venue updated. Not writable.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 10 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdated($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->updated = $var;

        return $this;
    }

}

