<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/event_tickets/ticket.proto

namespace Event_tickets;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>event_tickets.RedemptionDetails</code>
 */
class RedemptionDetails extends \Google\Protobuf\Internal\Message
{
    /**
     * The date the ticket was redeemed, auto set by the system when the redeem endpoint is called. Not writable.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp redemptionDate = 1;</code>
     */
    protected $redemptionDate = null;
    /**
     * Optional redemption lat.
     *
     * Generated from protobuf field <code>double lat = 2;</code>
     */
    protected $lat = 0.0;
    /**
     * Optional redemption lon.
     *
     * Generated from protobuf field <code>double lon = 3;</code>
     */
    protected $lon = 0.0;
    /**
     * Optional redemption alt.
     *
     * Generated from protobuf field <code>int32 alt = 4;</code>
     */
    protected $alt = 0;
    /**
     * Optional redemption user agent, can be used in case where a Merchant uses the PassKit scanning solution combined with their own scanning software and wants to differentiate the source of redemption.
     *
     * Generated from protobuf field <code>string redemptionSource = 6;</code>
     */
    protected $redemptionSource = '';
    /**
     * Optional redemption reference, can be used for staff name, username, scanner ID, location ID, etc.
     *
     * Generated from protobuf field <code>string redemptionReference = 7;</code>
     */
    protected $redemptionReference = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Timestamp $redemptionDate
     *           The date the ticket was redeemed, auto set by the system when the redeem endpoint is called. Not writable.
     *     @type float $lat
     *           Optional redemption lat.
     *     @type float $lon
     *           Optional redemption lon.
     *     @type int $alt
     *           Optional redemption alt.
     *     @type string $redemptionSource
     *           Optional redemption user agent, can be used in case where a Merchant uses the PassKit scanning solution combined with their own scanning software and wants to differentiate the source of redemption.
     *     @type string $redemptionReference
     *           Optional redemption reference, can be used for staff name, username, scanner ID, location ID, etc.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\EventTickets\Ticket::initOnce();
        parent::__construct($data);
    }

    /**
     * The date the ticket was redeemed, auto set by the system when the redeem endpoint is called. Not writable.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp redemptionDate = 1;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getRedemptionDate()
    {
        return isset($this->redemptionDate) ? $this->redemptionDate : null;
    }

    public function hasRedemptionDate()
    {
        return isset($this->redemptionDate);
    }

    public function clearRedemptionDate()
    {
        unset($this->redemptionDate);
    }

    /**
     * The date the ticket was redeemed, auto set by the system when the redeem endpoint is called. Not writable.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp redemptionDate = 1;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setRedemptionDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->redemptionDate = $var;

        return $this;
    }

    /**
     * Optional redemption lat.
     *
     * Generated from protobuf field <code>double lat = 2;</code>
     * @return float
     */
    public function getLat()
    {
        return $this->lat;
    }

    /**
     * Optional redemption lat.
     *
     * Generated from protobuf field <code>double lat = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setLat($var)
    {
        GPBUtil::checkDouble($var);
        $this->lat = $var;

        return $this;
    }

    /**
     * Optional redemption lon.
     *
     * Generated from protobuf field <code>double lon = 3;</code>
     * @return float
     */
    public function getLon()
    {
        return $this->lon;
    }

    /**
     * Optional redemption lon.
     *
     * Generated from protobuf field <code>double lon = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setLon($var)
    {
        GPBUtil::checkDouble($var);
        $this->lon = $var;

        return $this;
    }

    /**
     * Optional redemption alt.
     *
     * Generated from protobuf field <code>int32 alt = 4;</code>
     * @return int
     */
    public function getAlt()
    {
        return $this->alt;
    }

    /**
     * Optional redemption alt.
     *
     * Generated from protobuf field <code>int32 alt = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setAlt($var)
    {
        GPBUtil::checkInt32($var);
        $this->alt = $var;

        return $this;
    }

    /**
     * Optional redemption user agent, can be used in case where a Merchant uses the PassKit scanning solution combined with their own scanning software and wants to differentiate the source of redemption.
     *
     * Generated from protobuf field <code>string redemptionSource = 6;</code>
     * @return string
     */
    public function getRedemptionSource()
    {
        return $this->redemptionSource;
    }

    /**
     * Optional redemption user agent, can be used in case where a Merchant uses the PassKit scanning solution combined with their own scanning software and wants to differentiate the source of redemption.
     *
     * Generated from protobuf field <code>string redemptionSource = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setRedemptionSource($var)
    {
        GPBUtil::checkString($var, True);
        $this->redemptionSource = $var;

        return $this;
    }

    /**
     * Optional redemption reference, can be used for staff name, username, scanner ID, location ID, etc.
     *
     * Generated from protobuf field <code>string redemptionReference = 7;</code>
     * @return string
     */
    public function getRedemptionReference()
    {
        return $this->redemptionReference;
    }

    /**
     * Optional redemption reference, can be used for staff name, username, scanner ID, location ID, etc.
     *
     * Generated from protobuf field <code>string redemptionReference = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setRedemptionReference($var)
    {
        GPBUtil::checkString($var, True);
        $this->redemptionReference = $var;

        return $this;
    }

}

