<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/raw/project.proto

namespace Raw;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Pass Project holds the basic business logic of the Pass Project. It holds details on pass distribution, quotas, Apple certificate, integrations & hooks to use.
 *
 * Generated from protobuf message <code>raw.PassProject</code>
 */
class PassProject extends \Google\Protobuf\Internal\Message
{
    /**
     * PassKit generated project id (22 characters)
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * Name of the pass project; will be shown on the data collection page (if set) and as pass issuer name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     */
    protected $name = '';
    /**
     * Localized name of the pass project
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedName = 3;</code>
     */
    protected $localizedName = null;
    /**
     * The pass project status (bitmask of ProjectStatus). Defaults to io.ProjectStatus.PROJECT_ACTIVE_FOR_OBJECT_CREATION + io.ProjectStatus.PROJECT_DRAFT
     *
     * Generated from protobuf field <code>repeated .io.ProjectStatus status = 4;</code>
     */
    private $status;
    /**
     * The pass project quota
     *
     * Generated from protobuf field <code>.io.Quota quota = 5;</code>
     */
    protected $quota = null;
    /**
     * Leave empty for draft projects. Mandatory for projects where status contains PROJECT_PUBLISHED. Certificate to be used for signing the Apple passes.
     *
     * Generated from protobuf field <code>string passTypeIdentifier = 6;</code>
     */
    protected $passTypeIdentifier = '';
    /**
     * Contains the email & sms distribution settings for the project
     *
     * Generated from protobuf field <code>.io.DistributionSettings distributionSettings = 7;</code>
     */
    protected $distributionSettings = null;
    /**
     * The date the project was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 8;</code>
     */
    protected $created = null;
    /**
     * The date the project was updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 9;</code>
     */
    protected $updated = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           PassKit generated project id (22 characters)
     *     @type string $name
     *           Name of the pass project; will be shown on the data collection page (if set) and as pass issuer name.
     *     @type \Io\LocalizedString $localizedName
     *           Localized name of the pass project
     *     @type array<int>|\Google\Protobuf\Internal\RepeatedField $status
     *           The pass project status (bitmask of ProjectStatus). Defaults to io.ProjectStatus.PROJECT_ACTIVE_FOR_OBJECT_CREATION + io.ProjectStatus.PROJECT_DRAFT
     *     @type \Io\Quota $quota
     *           The pass project quota
     *     @type string $passTypeIdentifier
     *           Leave empty for draft projects. Mandatory for projects where status contains PROJECT_PUBLISHED. Certificate to be used for signing the Apple passes.
     *     @type \Io\DistributionSettings $distributionSettings
     *           Contains the email & sms distribution settings for the project
     *     @type \Google\Protobuf\Timestamp $created
     *           The date the project was created.
     *     @type \Google\Protobuf\Timestamp $updated
     *           The date the project was updated.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Raw\Project::initOnce();
        parent::__construct($data);
    }

    /**
     * PassKit generated project id (22 characters)
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * PassKit generated project id (22 characters)
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Name of the pass project; will be shown on the data collection page (if set) and as pass issuer name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Name of the pass project; will be shown on the data collection page (if set) and as pass issuer name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Localized name of the pass project
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedName = 3;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedName()
    {
        return $this->localizedName;
    }

    public function hasLocalizedName()
    {
        return isset($this->localizedName);
    }

    public function clearLocalizedName()
    {
        unset($this->localizedName);
    }

    /**
     * Localized name of the pass project
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedName = 3;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedName($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedName = $var;

        return $this;
    }

    /**
     * The pass project status (bitmask of ProjectStatus). Defaults to io.ProjectStatus.PROJECT_ACTIVE_FOR_OBJECT_CREATION + io.ProjectStatus.PROJECT_DRAFT
     *
     * Generated from protobuf field <code>repeated .io.ProjectStatus status = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * The pass project status (bitmask of ProjectStatus). Defaults to io.ProjectStatus.PROJECT_ACTIVE_FOR_OBJECT_CREATION + io.ProjectStatus.PROJECT_DRAFT
     *
     * Generated from protobuf field <code>repeated .io.ProjectStatus status = 4;</code>
     * @param array<int>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setStatus($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Io\ProjectStatus::class);
        $this->status = $arr;

        return $this;
    }

    /**
     * The pass project quota
     *
     * Generated from protobuf field <code>.io.Quota quota = 5;</code>
     * @return \Io\Quota|null
     */
    public function getQuota()
    {
        return $this->quota;
    }

    public function hasQuota()
    {
        return isset($this->quota);
    }

    public function clearQuota()
    {
        unset($this->quota);
    }

    /**
     * The pass project quota
     *
     * Generated from protobuf field <code>.io.Quota quota = 5;</code>
     * @param \Io\Quota $var
     * @return $this
     */
    public function setQuota($var)
    {
        GPBUtil::checkMessage($var, \Io\Quota::class);
        $this->quota = $var;

        return $this;
    }

    /**
     * Leave empty for draft projects. Mandatory for projects where status contains PROJECT_PUBLISHED. Certificate to be used for signing the Apple passes.
     *
     * Generated from protobuf field <code>string passTypeIdentifier = 6;</code>
     * @return string
     */
    public function getPassTypeIdentifier()
    {
        return $this->passTypeIdentifier;
    }

    /**
     * Leave empty for draft projects. Mandatory for projects where status contains PROJECT_PUBLISHED. Certificate to be used for signing the Apple passes.
     *
     * Generated from protobuf field <code>string passTypeIdentifier = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setPassTypeIdentifier($var)
    {
        GPBUtil::checkString($var, True);
        $this->passTypeIdentifier = $var;

        return $this;
    }

    /**
     * Contains the email & sms distribution settings for the project
     *
     * Generated from protobuf field <code>.io.DistributionSettings distributionSettings = 7;</code>
     * @return \Io\DistributionSettings|null
     */
    public function getDistributionSettings()
    {
        return $this->distributionSettings;
    }

    public function hasDistributionSettings()
    {
        return isset($this->distributionSettings);
    }

    public function clearDistributionSettings()
    {
        unset($this->distributionSettings);
    }

    /**
     * Contains the email & sms distribution settings for the project
     *
     * Generated from protobuf field <code>.io.DistributionSettings distributionSettings = 7;</code>
     * @param \Io\DistributionSettings $var
     * @return $this
     */
    public function setDistributionSettings($var)
    {
        GPBUtil::checkMessage($var, \Io\DistributionSettings::class);
        $this->distributionSettings = $var;

        return $this;
    }

    /**
     * The date the project was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 8;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreated()
    {
        return $this->created;
    }

    public function hasCreated()
    {
        return isset($this->created);
    }

    public function clearCreated()
    {
        unset($this->created);
    }

    /**
     * The date the project was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 8;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreated($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->created = $var;

        return $this;
    }

    /**
     * The date the project was updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 9;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdated()
    {
        return $this->updated;
    }

    public function hasUpdated()
    {
        return isset($this->updated);
    }

    public function clearUpdated()
    {
        unset($this->updated);
    }

    /**
     * The date the project was updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 9;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdated($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->updated = $var;

        return $this;
    }

}

