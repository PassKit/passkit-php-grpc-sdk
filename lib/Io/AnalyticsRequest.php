<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/common/reporting.proto

namespace Io;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>io.AnalyticsRequest</code>
 */
class AnalyticsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The protocol that you are requesting analytics for, i.e. MEMBERSHIP, SINGLE_USE_COUPON, EVENT_TICKETS, FLIGHTS, etc.
     *
     * Generated from protobuf field <code>.io.PassProtocol protocol = 1;</code>
     */
    protected $protocol = 0;
    /**
     * The ID of the highest level element in the protocol. For Membership this is the Program ID, for coupons this is the Campaign ID, For Event Tickets this is Production, For Flight this is CarrierCode.
     *
     * Generated from protobuf field <code>string classId = 2;</code>
     */
    protected $classId = '';
    /**
     * The Period to group the response data by: per DAY, MONTH or YEAR.
     *
     * Generated from protobuf field <code>.io.Period period = 3;</code>
     */
    protected $period = 0;
    /**
     * Start date sets the oldest date of the data to be shown.
     *
     * Generated from protobuf field <code>string startDate = 4;</code>
     */
    protected $startDate = '';
    /**
     * End date sets the latest date of the data to be shown.
     *
     * Generated from protobuf field <code>string endDate = 5;</code>
     */
    protected $endDate = '';
    /**
     * Timezone in IANA format; defaults to UTC if not provided.
     *
     * Generated from protobuf field <code>string timezone = 6;</code>
     */
    protected $timezone = '';
    protected $filter;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $protocol
     *           The protocol that you are requesting analytics for, i.e. MEMBERSHIP, SINGLE_USE_COUPON, EVENT_TICKETS, FLIGHTS, etc.
     *     @type string $classId
     *           The ID of the highest level element in the protocol. For Membership this is the Program ID, for coupons this is the Campaign ID, For Event Tickets this is Production, For Flight this is CarrierCode.
     *     @type int $period
     *           The Period to group the response data by: per DAY, MONTH or YEAR.
     *     @type string $startDate
     *           Start date sets the oldest date of the data to be shown.
     *     @type string $endDate
     *           End date sets the latest date of the data to be shown.
     *     @type string $timezone
     *           Timezone in IANA format; defaults to UTC if not provided.
     *     @type \Io\CouponAnalyticsFilter $coupon
     *     @type \Io\FlightAnalyticsFilter $flight
     *     @type \Io\EventTicketAnalyticsFilter $eventTicket
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Common\Reporting::initOnce();
        parent::__construct($data);
    }

    /**
     * The protocol that you are requesting analytics for, i.e. MEMBERSHIP, SINGLE_USE_COUPON, EVENT_TICKETS, FLIGHTS, etc.
     *
     * Generated from protobuf field <code>.io.PassProtocol protocol = 1;</code>
     * @return int
     */
    public function getProtocol()
    {
        return $this->protocol;
    }

    /**
     * The protocol that you are requesting analytics for, i.e. MEMBERSHIP, SINGLE_USE_COUPON, EVENT_TICKETS, FLIGHTS, etc.
     *
     * Generated from protobuf field <code>.io.PassProtocol protocol = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setProtocol($var)
    {
        GPBUtil::checkEnum($var, \Io\PassProtocol::class);
        $this->protocol = $var;

        return $this;
    }

    /**
     * The ID of the highest level element in the protocol. For Membership this is the Program ID, for coupons this is the Campaign ID, For Event Tickets this is Production, For Flight this is CarrierCode.
     *
     * Generated from protobuf field <code>string classId = 2;</code>
     * @return string
     */
    public function getClassId()
    {
        return $this->classId;
    }

    /**
     * The ID of the highest level element in the protocol. For Membership this is the Program ID, for coupons this is the Campaign ID, For Event Tickets this is Production, For Flight this is CarrierCode.
     *
     * Generated from protobuf field <code>string classId = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setClassId($var)
    {
        GPBUtil::checkString($var, True);
        $this->classId = $var;

        return $this;
    }

    /**
     * The Period to group the response data by: per DAY, MONTH or YEAR.
     *
     * Generated from protobuf field <code>.io.Period period = 3;</code>
     * @return int
     */
    public function getPeriod()
    {
        return $this->period;
    }

    /**
     * The Period to group the response data by: per DAY, MONTH or YEAR.
     *
     * Generated from protobuf field <code>.io.Period period = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setPeriod($var)
    {
        GPBUtil::checkEnum($var, \Io\Period::class);
        $this->period = $var;

        return $this;
    }

    /**
     * Start date sets the oldest date of the data to be shown.
     *
     * Generated from protobuf field <code>string startDate = 4;</code>
     * @return string
     */
    public function getStartDate()
    {
        return $this->startDate;
    }

    /**
     * Start date sets the oldest date of the data to be shown.
     *
     * Generated from protobuf field <code>string startDate = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setStartDate($var)
    {
        GPBUtil::checkString($var, True);
        $this->startDate = $var;

        return $this;
    }

    /**
     * End date sets the latest date of the data to be shown.
     *
     * Generated from protobuf field <code>string endDate = 5;</code>
     * @return string
     */
    public function getEndDate()
    {
        return $this->endDate;
    }

    /**
     * End date sets the latest date of the data to be shown.
     *
     * Generated from protobuf field <code>string endDate = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setEndDate($var)
    {
        GPBUtil::checkString($var, True);
        $this->endDate = $var;

        return $this;
    }

    /**
     * Timezone in IANA format; defaults to UTC if not provided.
     *
     * Generated from protobuf field <code>string timezone = 6;</code>
     * @return string
     */
    public function getTimezone()
    {
        return $this->timezone;
    }

    /**
     * Timezone in IANA format; defaults to UTC if not provided.
     *
     * Generated from protobuf field <code>string timezone = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setTimezone($var)
    {
        GPBUtil::checkString($var, True);
        $this->timezone = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.CouponAnalyticsFilter coupon = 15;</code>
     * @return \Io\CouponAnalyticsFilter
     */
    public function getCoupon()
    {
        return $this->readOneof(15);
    }

    public function hasCoupon()
    {
        return $this->hasOneof(15);
    }

    /**
     * Generated from protobuf field <code>.io.CouponAnalyticsFilter coupon = 15;</code>
     * @param \Io\CouponAnalyticsFilter $var
     * @return $this
     */
    public function setCoupon($var)
    {
        GPBUtil::checkMessage($var, \Io\CouponAnalyticsFilter::class);
        $this->writeOneof(15, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.FlightAnalyticsFilter flight = 16;</code>
     * @return \Io\FlightAnalyticsFilter
     */
    public function getFlight()
    {
        return $this->readOneof(16);
    }

    public function hasFlight()
    {
        return $this->hasOneof(16);
    }

    /**
     * Generated from protobuf field <code>.io.FlightAnalyticsFilter flight = 16;</code>
     * @param \Io\FlightAnalyticsFilter $var
     * @return $this
     */
    public function setFlight($var)
    {
        GPBUtil::checkMessage($var, \Io\FlightAnalyticsFilter::class);
        $this->writeOneof(16, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.EventTicketAnalyticsFilter eventTicket = 17;</code>
     * @return \Io\EventTicketAnalyticsFilter
     */
    public function getEventTicket()
    {
        return $this->readOneof(17);
    }

    public function hasEventTicket()
    {
        return $this->hasOneof(17);
    }

    /**
     * Generated from protobuf field <code>.io.EventTicketAnalyticsFilter eventTicket = 17;</code>
     * @param \Io\EventTicketAnalyticsFilter $var
     * @return $this
     */
    public function setEventTicket($var)
    {
        GPBUtil::checkMessage($var, \Io\EventTicketAnalyticsFilter::class);
        $this->writeOneof(17, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getFilter()
    {
        return $this->whichOneof("filter");
    }

}

