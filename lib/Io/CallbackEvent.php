<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/common/callback.proto

namespace Io;

use UnexpectedValueException;

/**
 * Protobuf type <code>io.CallbackEvent</code>
 */
class CallbackEvent
{
    /**
     * Object related events; for when protocol 'objects' are created / updated /removed in our system: i.e. member enrolled, boarding pass updated
     *
     * Generated from protobuf enum <code>CALLBACK_OBJECT_CREATED = 0;</code>
     */
    const CALLBACK_OBJECT_CREATED = 0;
    /**
     * Generated from protobuf enum <code>CALLBACK_OBJECT_UPDATED = 1;</code>
     */
    const CALLBACK_OBJECT_UPDATED = 1;
    /**
     * Generated from protobuf enum <code>CALLBACK_OBJECT_REMOVED = 2;</code>
     */
    const CALLBACK_OBJECT_REMOVED = 2;
    /**
     * Pass related events; relating to wallet activity.
     *
     * Generated from protobuf enum <code>CALLBACK_PASS_ISSUED = 3;</code>
     */
    const CALLBACK_PASS_ISSUED = 3;
    /**
     * Generated from protobuf enum <code>CALLBACK_PASS_INSTALLED = 4;</code>
     */
    const CALLBACK_PASS_INSTALLED = 4;
    /**
     * Generated from protobuf enum <code>CALLBACK_PASS_UPDATED = 5;</code>
     */
    const CALLBACK_PASS_UPDATED = 5;
    /**
     * Generated from protobuf enum <code>CALLBACK_PASS_REMOVED = 6;</code>
     */
    const CALLBACK_PASS_REMOVED = 6;
    /**
     * Other events
     *
     * Generated from protobuf enum <code>EMAIL_OPENED = 7;</code>
     */
    const EMAIL_OPENED = 7;
    /**
     * for when enrolment / issue link in an email sms or elsewhere (QR scan, FB link click) is visited.
     *
     * Generated from protobuf enum <code>LINK_VISITED = 8;</code>
     */
    const LINK_VISITED = 8;

    private static $valueToName = [
        self::CALLBACK_OBJECT_CREATED => 'CALLBACK_OBJECT_CREATED',
        self::CALLBACK_OBJECT_UPDATED => 'CALLBACK_OBJECT_UPDATED',
        self::CALLBACK_OBJECT_REMOVED => 'CALLBACK_OBJECT_REMOVED',
        self::CALLBACK_PASS_ISSUED => 'CALLBACK_PASS_ISSUED',
        self::CALLBACK_PASS_INSTALLED => 'CALLBACK_PASS_INSTALLED',
        self::CALLBACK_PASS_UPDATED => 'CALLBACK_PASS_UPDATED',
        self::CALLBACK_PASS_REMOVED => 'CALLBACK_PASS_REMOVED',
        self::EMAIL_OPENED => 'EMAIL_OPENED',
        self::LINK_VISITED => 'LINK_VISITED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

