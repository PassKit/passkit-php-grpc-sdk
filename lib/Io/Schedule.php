<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/common/job.proto

namespace Io;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>io.Schedule</code>
 */
class Schedule extends \Google\Protobuf\Internal\Message
{
    /**
     * Defines the recurrence of the job in cronTab format.
     *
     * Generated from protobuf field <code>string cronTabSchedule = 1;</code>
     */
    protected $cronTabSchedule = '';
    /**
     * If the job repeats.
     *
     * Generated from protobuf field <code>bool repeating = 2;</code>
     */
    protected $repeating = false;
    /**
     * Generated from protobuf field <code>string timezone = 3;</code>
     */
    protected $timezone = '';
    /**
     * The time the job should start.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp startTime = 4;</code>
     */
    protected $startTime = null;
    /**
     * Optional time when the job will stop.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp runUntil = 5;</code>
     */
    protected $runUntil = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $cronTabSchedule
     *           Defines the recurrence of the job in cronTab format.
     *     @type bool $repeating
     *           If the job repeats.
     *     @type string $timezone
     *     @type \Google\Protobuf\Timestamp $startTime
     *           The time the job should start.
     *     @type \Google\Protobuf\Timestamp $runUntil
     *           Optional time when the job will stop.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Common\Job::initOnce();
        parent::__construct($data);
    }

    /**
     * Defines the recurrence of the job in cronTab format.
     *
     * Generated from protobuf field <code>string cronTabSchedule = 1;</code>
     * @return string
     */
    public function getCronTabSchedule()
    {
        return $this->cronTabSchedule;
    }

    /**
     * Defines the recurrence of the job in cronTab format.
     *
     * Generated from protobuf field <code>string cronTabSchedule = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCronTabSchedule($var)
    {
        GPBUtil::checkString($var, True);
        $this->cronTabSchedule = $var;

        return $this;
    }

    /**
     * If the job repeats.
     *
     * Generated from protobuf field <code>bool repeating = 2;</code>
     * @return bool
     */
    public function getRepeating()
    {
        return $this->repeating;
    }

    /**
     * If the job repeats.
     *
     * Generated from protobuf field <code>bool repeating = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setRepeating($var)
    {
        GPBUtil::checkBool($var);
        $this->repeating = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string timezone = 3;</code>
     * @return string
     */
    public function getTimezone()
    {
        return $this->timezone;
    }

    /**
     * Generated from protobuf field <code>string timezone = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setTimezone($var)
    {
        GPBUtil::checkString($var, True);
        $this->timezone = $var;

        return $this;
    }

    /**
     * The time the job should start.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp startTime = 4;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getStartTime()
    {
        return isset($this->startTime) ? $this->startTime : null;
    }

    public function hasStartTime()
    {
        return isset($this->startTime);
    }

    public function clearStartTime()
    {
        unset($this->startTime);
    }

    /**
     * The time the job should start.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp startTime = 4;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setStartTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->startTime = $var;

        return $this;
    }

    /**
     * Optional time when the job will stop.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp runUntil = 5;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getRunUntil()
    {
        return isset($this->runUntil) ? $this->runUntil : null;
    }

    public function hasRunUntil()
    {
        return isset($this->runUntil);
    }

    public function clearRunUntil()
    {
        unset($this->runUntil);
    }

    /**
     * Optional time when the job will stop.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp runUntil = 5;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setRunUntil($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->runUntil = $var;

        return $this;
    }

}

