<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: io/common/template.proto

namespace Io;

use UnexpectedValueException;

/**
 * Indicates the type of data.
 * IMPOTANT: If string is changed, please update data collection page data-collection-page.html.tmpl if statements.
 *
 * Protobuf type <code>io.DataType</code>
 */
class DataType
{
    /**
     * Generated from protobuf enum <code>DATA_TYPE_NONE = 0;</code>
     */
    const DATA_TYPE_NONE = 0;
    /**
     * default
     *
     * Generated from protobuf enum <code>TEXT = 1;</code>
     */
    const TEXT = 1;
    /**
     * The only difference with TEXT is that TEXT_LONG renders textarea tag on the data collection landing page.
     *
     * Generated from protobuf enum <code>TEXT_LONG = 2;</code>
     */
    const TEXT_LONG = 2;
    /**
     * Date containing year, month and date. No style.
     *
     * Generated from protobuf enum <code>DATE_YYYYMMDD = 3;</code>
     */
    const DATE_YYYYMMDD = 3;
    /**
     * Date containing year and month. No style.
     *
     * Generated from protobuf enum <code>DATE_YYYYMM = 4;</code>
     */
    const DATE_YYYYMM = 4;
    /**
     * Date containing month and date. No style.
     *
     * Generated from protobuf enum <code>DATE_MMDD = 5;</code>
     */
    const DATE_MMDD = 5;
    /**
     * Generated from protobuf enum <code>TIME = 6;</code>
     */
    const TIME = 6;
    /**
     * Generated from protobuf enum <code>DATE_TIME = 7;</code>
     */
    const DATE_TIME = 7;
    /**
     * A number (No decimal support).
     *
     * Generated from protobuf enum <code>INT = 8;</code>
     */
    const INT = 8;
    /**
     * A number with decimal support.
     *
     * Generated from protobuf enum <code>NUMBER = 9;</code>
     */
    const NUMBER = 9;
    /**
     * Generated from protobuf enum <code>EMAIL = 10;</code>
     */
    const EMAIL = 10;
    /**
     * Generated from protobuf enum <code>URL = 11;</code>
     */
    const URL = 11;
    /**
     * Generated from protobuf enum <code>TEL = 12;</code>
     */
    const TEL = 12;
    /**
     * Generated from protobuf enum <code>ADDRESS = 13;</code>
     */
    const ADDRESS = 13;
    /**
     * IMAGE = 15; // we can comment out IMAGE when backend implement the string logic for uploaded image file.
     *
     * Generated from protobuf enum <code>IMAGE = 15;</code>
     */
    const IMAGE = 15;
    /**
     * A value of money amount in float (e.g. 5, 10.00, 40.95, 60.9333333333) .
     *
     * Generated from protobuf enum <code>CURRENCY = 16;</code>
     */
    const CURRENCY = 16;
    /**
     * Generated from protobuf enum <code>BOOLEAN = 17;</code>
     */
    const BOOLEAN = 17;
    /**
     * A list of key value pairs
     *
     * Generated from protobuf enum <code>OPTIONS = 18;</code>
     */
    const OPTIONS = 18;
    /**
     * Generated from protobuf enum <code>DATE_MM = 19;</code>
     */
    const DATE_MM = 19;

    private static $valueToName = [
        self::DATA_TYPE_NONE => 'DATA_TYPE_NONE',
        self::TEXT => 'TEXT',
        self::TEXT_LONG => 'TEXT_LONG',
        self::DATE_YYYYMMDD => 'DATE_YYYYMMDD',
        self::DATE_YYYYMM => 'DATE_YYYYMM',
        self::DATE_MMDD => 'DATE_MMDD',
        self::TIME => 'TIME',
        self::DATE_TIME => 'DATE_TIME',
        self::INT => 'INT',
        self::NUMBER => 'NUMBER',
        self::EMAIL => 'EMAIL',
        self::URL => 'URL',
        self::TEL => 'TEL',
        self::ADDRESS => 'ADDRESS',
        self::IMAGE => 'IMAGE',
        self::CURRENCY => 'CURRENCY',
        self::BOOLEAN => 'BOOLEAN',
        self::OPTIONS => 'OPTIONS',
        self::DATE_MM => 'DATE_MM',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

