<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/common/integration.proto

namespace Io;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>io.WebhookConfig</code>
 */
class WebhookConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * The destination url for PassKit backend to send the data to.
     *
     * Generated from protobuf field <code>string targetUrl = 1;</code>
     */
    protected $targetUrl = '';
    /**
     * Generated from protobuf field <code>.io.ActionMethod actionMethod = 2;</code>
     */
    protected $actionMethod = 0;
    /**
     * Set source fields (fields used within the PassKit platform) and destination fields (fields set on the third party app).
     *
     * Generated from protobuf field <code>.io.FieldMapping fieldMapping = 3;</code>
     */
    protected $fieldMapping = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $targetUrl
     *           The destination url for PassKit backend to send the data to.
     *     @type int $actionMethod
     *     @type \Io\FieldMapping $fieldMapping
     *           Set source fields (fields used within the PassKit platform) and destination fields (fields set on the third party app).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Common\Integration::initOnce();
        parent::__construct($data);
    }

    /**
     * The destination url for PassKit backend to send the data to.
     *
     * Generated from protobuf field <code>string targetUrl = 1;</code>
     * @return string
     */
    public function getTargetUrl()
    {
        return $this->targetUrl;
    }

    /**
     * The destination url for PassKit backend to send the data to.
     *
     * Generated from protobuf field <code>string targetUrl = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTargetUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->targetUrl = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.ActionMethod actionMethod = 2;</code>
     * @return int
     */
    public function getActionMethod()
    {
        return $this->actionMethod;
    }

    /**
     * Generated from protobuf field <code>.io.ActionMethod actionMethod = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setActionMethod($var)
    {
        GPBUtil::checkEnum($var, \Io\ActionMethod::class);
        $this->actionMethod = $var;

        return $this;
    }

    /**
     * Set source fields (fields used within the PassKit platform) and destination fields (fields set on the third party app).
     *
     * Generated from protobuf field <code>.io.FieldMapping fieldMapping = 3;</code>
     * @return \Io\FieldMapping|null
     */
    public function getFieldMapping()
    {
        return isset($this->fieldMapping) ? $this->fieldMapping : null;
    }

    public function hasFieldMapping()
    {
        return isset($this->fieldMapping);
    }

    public function clearFieldMapping()
    {
        unset($this->fieldMapping);
    }

    /**
     * Set source fields (fields used within the PassKit platform) and destination fields (fields set on the third party app).
     *
     * Generated from protobuf field <code>.io.FieldMapping fieldMapping = 3;</code>
     * @param \Io\FieldMapping $var
     * @return $this
     */
    public function setFieldMapping($var)
    {
        GPBUtil::checkMessage($var, \Io\FieldMapping::class);
        $this->fieldMapping = $var;

        return $this;
    }

}

