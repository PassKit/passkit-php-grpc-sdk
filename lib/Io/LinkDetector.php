<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: io/common/template.proto

namespace Io;

use UnexpectedValueException;

/**
 * Protobuf type <code>io.LinkDetector</code>
 */
class LinkDetector
{
    /**
     * Generated from protobuf enum <code>LINK_DETECTOR_DO_NOT_USE = 0;</code>
     */
    const LINK_DETECTOR_DO_NOT_USE = 0;
    /**
     * Generated from protobuf enum <code>LINK_DETECTOR_ADDRESS = 1;</code>
     */
    const LINK_DETECTOR_ADDRESS = 1;
    /**
     * Generated from protobuf enum <code>LINK_DETECTOR_DATE = 2;</code>
     */
    const LINK_DETECTOR_DATE = 2;
    /**
     * Generated from protobuf enum <code>LINK_DETECTOR_URL = 3;</code>
     */
    const LINK_DETECTOR_URL = 3;
    /**
     * Generated from protobuf enum <code>LINK_DETECTOR_PHONE = 4;</code>
     */
    const LINK_DETECTOR_PHONE = 4;

    private static $valueToName = [
        self::LINK_DETECTOR_DO_NOT_USE => 'LINK_DETECTOR_DO_NOT_USE',
        self::LINK_DETECTOR_ADDRESS => 'LINK_DETECTOR_ADDRESS',
        self::LINK_DETECTOR_DATE => 'LINK_DETECTOR_DATE',
        self::LINK_DETECTOR_URL => 'LINK_DETECTOR_URL',
        self::LINK_DETECTOR_PHONE => 'LINK_DETECTOR_PHONE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

