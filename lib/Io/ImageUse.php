<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/image/image.proto

namespace Io;

use UnexpectedValueException;

/**
 * Protobuf type <code>io.ImageUse</code>
 */
class ImageUse
{
    /**
     * Mandatory icon, used in Apple Wallet lock screen (87px x 87px).
     *
     * Generated from protobuf enum <code>icon = 0;</code>
     */
    const icon = 0;
    /**
     * Logo is circle-cropped by Google Pay, a 15% safety margin is recommended (660px x 660px).
     *
     * Generated from protobuf enum <code>logo = 1;</code>
     */
    const logo = 1;
    /**
     * Apple logo can be used where a rectangular design is preferred for Apple Passes only.  If omitted, the square
     * logo image will be used.  (<=480px x 150px).
     *
     * Generated from protobuf enum <code>appleLogo = 2;</code>
     */
    const appleLogo = 2;
    /**
     * Hero is the Google Pay strip and is also used in the dialog box when installing (1032px x 336px).
     *
     * Generated from protobuf enum <code>hero = 3;</code>
     */
    const hero = 3;
    /**
     * Apple Wallet strip image for EventTicket pass types (1125px x 294px).
     *
     * Generated from protobuf enum <code>eventStrip = 4;</code>
     */
    const eventStrip = 4;
    /**
     * Apple Wallet strip image for other pass types with a  strip image (1125px x 432px).
     *
     * Generated from protobuf enum <code>strip = 5;</code>
     */
    const strip = 5;
    /**
     * Used on Membership passes and Apple event tickets with a background image
     * (>=320 x >=320 in a ratio range of 2:3-3:2).
     *
     * Generated from protobuf enum <code>thumbnail = 6;</code>
     */
    const thumbnail = 6;
    /**
     * used only be Apple Event Ticket designs, this image is blurred to form a background and so can be a low quality
     * image.  Note it may also be slightly cropped on some devices (180px x 220px).
     *
     * Generated from protobuf enum <code>background = 7;</code>
     */
    const background = 7;
    /**
     * displays above the barcode for Apple Wallet Boarding pass tickets (858px x 45px).
     *
     * Generated from protobuf enum <code>footer = 8;</code>
     */
    const footer = 8;
    /**
     * Google Pay - used to denote a security program on boarding pass types (E.g. TSA PreCheckÂ®).  Width of 1600px is.
     * shared with the boarding privilege logo (<=1600px x 80px).
     *
     * Generated from protobuf enum <code>security = 9;</code>
     */
    const security = 9;
    /**
     * Google Pay - used to denote a boarding privilege.  Width of 1600px is shared with the security program logo.
     * (<=1600px x 80px)
     *
     * Generated from protobuf enum <code>privilege = 10;</code>
     */
    const privilege = 10;
    /**
     * Google Pay - used to denote airline alliance on boarding pass types (<=1600px x 80px).
     *
     * Generated from protobuf enum <code>airlineAlliance = 11;</code>
     */
    const airlineAlliance = 11;
    /**
     * For Apple Pay NFC passes whitelisted for personalization. Image is displayed after terms are presented
     * (<=450px x 120px).
     *
     * Generated from protobuf enum <code>personalization = 12;</code>
     */
    const personalization = 12;
    /**
     * used on a landing page or email.  Image has no size constraints and will be treated as &#64;2x pixel density.
     *
     * Generated from protobuf enum <code>banner = 13;</code>
     */
    const banner = 13;
    /**
     * used for Google Pay in wallet promotional messages - for Apple Pay, the message will be rendered on a mobile
     * website (1860px x <=930px).
     *
     * Generated from protobuf enum <code>message = 14;</code>
     */
    const message = 14;
    /**
     * used for user Profile images (300px x 300px).
     *
     * Generated from protobuf enum <code>profile = 15;</code>
     */
    const profile = 15;
    /**
     * used for user App images in Google Pay (Google approval required, 300px x 300px).
     *
     * Generated from protobuf enum <code>appImage = 16;</code>
     */
    const appImage = 16;

    private static $valueToName = [
        self::icon => 'icon',
        self::logo => 'logo',
        self::appleLogo => 'appleLogo',
        self::hero => 'hero',
        self::eventStrip => 'eventStrip',
        self::strip => 'strip',
        self::thumbnail => 'thumbnail',
        self::background => 'background',
        self::footer => 'footer',
        self::security => 'security',
        self::privilege => 'privilege',
        self::airlineAlliance => 'airlineAlliance',
        self::personalization => 'personalization',
        self::banner => 'banner',
        self::message => 'message',
        self::profile => 'profile',
        self::appImage => 'appImage',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

