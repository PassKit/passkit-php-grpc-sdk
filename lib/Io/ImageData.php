<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: io/image/image.proto

namespace Io;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Images strings can be either a base64 image or a url. See image 'Use' enum for descriptions and sizes.
 *
 * Generated from protobuf message <code>io.ImageData</code>
 */
class ImageData extends \Google\Protobuf\Internal\Message
{
    /**
     * Mandatory icon, used in Apple Wallet lock screen (87px x 87px).
     *
     * Generated from protobuf field <code>string icon = 1;</code>
     */
    protected $icon = '';
    /**
     * Logo is circle-cropped by Google Pay, a 15% safety margin is recommended (660px x 660px).
     *
     * Generated from protobuf field <code>string logo = 2;</code>
     */
    protected $logo = '';
    /**
     * Apple logo can be used where a rectangular design is preferred for Apple Passes only.  If ommitted, the square logo image will be used.  (<=480px x 150px).
     *
     * Generated from protobuf field <code>string appleLogo = 3;</code>
     */
    protected $appleLogo = '';
    /**
     * Hero is the Google Pay strip and is also used in the dialog box when installing (1032px x 336px).
     *
     * Generated from protobuf field <code>string hero = 4;</code>
     */
    protected $hero = '';
    /**
     * Apple Wallet strip image for EventTicket pass types (1125px x 294px).
     *
     * Generated from protobuf field <code>string eventStrip = 5;</code>
     */
    protected $eventStrip = '';
    /**
     * Apple Wallet strip image for other pass types with a  strip image (1125px x 432px).
     *
     * Generated from protobuf field <code>string strip = 6;</code>
     */
    protected $strip = '';
    /**
     * Used on Membership passes and Apple event tickets with a background image (>=270px x >=270px in a ratio range of 2:3-3:2).
     *
     * Generated from protobuf field <code>string thumbnail = 7;</code>
     */
    protected $thumbnail = '';
    /**
     * Used only be Apple Event Ticket designs, this image is blurred to form a background and so can be a low quality image.  Note it may also be slightly cropped on some devices (180px x 220px).
     *
     * Generated from protobuf field <code>string background = 8;</code>
     */
    protected $background = '';
    /**
     * Displays above the barcode for Apple Wallet Boarding pass tickets (858px x 45px)
     *
     * Generated from protobuf field <code>string footer = 9;</code>
     */
    protected $footer = '';
    /**
     * Google Pay - used to denote a security program on boarding pass types (E.g. TSA PreCheckÂ®).  Width of 1600px is shared with the boarding privilege logo (<=1600px x 80px).
     *
     * Generated from protobuf field <code>string security = 10;</code>
     */
    protected $security = '';
    /**
     * Google Pay - used to denote a boarding privilege.  Width of 1600px is shared with the security program logo (<=1600px x 80px).
     *
     * Generated from protobuf field <code>string privilege = 11;</code>
     */
    protected $privilege = '';
    /**
     * Google Pay - used to denote airline alliance on boarding pass types (<=1600px x 80px).
     *
     * Generated from protobuf field <code>string airlineAlliance = 12;</code>
     */
    protected $airlineAlliance = '';
    /**
     * For Apple Pay NFC passes whitelisted for personalization. Image is displayed after terms are presented (<=450px x 120px).
     *
     * Generated from protobuf field <code>string personalization = 13;</code>
     */
    protected $personalization = '';
    /**
     * Used on a landing page or email.  Image has no size constraints and will be treated as \@2x pixel density.
     *
     * Generated from protobuf field <code>string banner = 14;</code>
     */
    protected $banner = '';
    /**
     * Used for Google Pay in wallet promotional messages - for Apple Pay, the message will be rendered on a mobile website (1860px x <=930px).
     *
     * Generated from protobuf field <code>string message = 15;</code>
     */
    protected $message = '';
    /**
     * Used for user Profile images (300px x 300px). Cannot be localized.
     *
     * Generated from protobuf field <code>string profile = 16;</code>
     */
    protected $profile = '';
    /**
     * Used for user app images in Google Pay Passes (300px x 300px). Cannot be localized.
     *
     * Generated from protobuf field <code>string appImage = 17;</code>
     */
    protected $appImage = '';
    /**
     * Used for stamp and unstamped images for use with stamp/punch cards. Cannot be localized.
     *
     * Generated from protobuf field <code>string stampedImage = 18;</code>
     */
    protected $stampedImage = '';
    /**
     * Used for stamp and unstamped images for use with stamp/punch cards. Cannot be localized.
     *
     * Generated from protobuf field <code>string unstampedImage = 19;</code>
     */
    protected $unstampedImage = '';
    /**
     * Spec for a stamp image. Cannot be localized.
     *
     * Generated from protobuf field <code>.io.StampImageConfig stampConfig = 20;</code>
     */
    protected $stampConfig = null;
    /**
     * Used for rectangular Google Wallet pass header image (1280px x 400px).
     *
     * Generated from protobuf field <code>string wideLogo = 21;</code>
     */
    protected $wideLogo = '';
    /**
     * Used in the bottom right hand footer inset of an Apple poster Event Ticket (<=405px x 36px).
     *
     * Generated from protobuf field <code>string secondaryLogo = 22;</code>
     */
    protected $secondaryLogo = '';
    /**
     * Used in the background of Apple poster Event Tickets. Image should be a compelling visual representation of the event (1074px x 1344px).
     *
     * Generated from protobuf field <code>string artwork = 23;</code>
     */
    protected $artwork = '';
    /**
     * Used in the top left hand corner for Apple poster style Event tickets (<=378px x 90px)
     *
     * Generated from protobuf field <code>string posterLogo = 24;</code>
     */
    protected $posterLogo = '';
    /**
     * Used to present a venue map for an Apple poster style Event Ticket.  Width should be Ratio should be at least 1320px wide and have a 16:9 or 4:5 to avoid cropping.
     *
     * Generated from protobuf field <code>string venueMap = 25;</code>
     */
    protected $venueMap = '';
    /**
     * Sets different icon images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedIcon = 31;</code>
     */
    protected $localizedIcon = null;
    /**
     * Sets different logo images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedLogo = 32;</code>
     */
    protected $localizedLogo = null;
    /**
     * Sets different Apple Logo images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAppleLogo = 33;</code>
     */
    protected $localizedAppleLogo = null;
    /**
     * Sets different hero images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedHero = 34;</code>
     */
    protected $localizedHero = null;
    /**
     * Sets different event strip images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedEventStrip = 35;</code>
     */
    protected $localizedEventStrip = null;
    /**
     * Sets different strip images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedStrip = 36;</code>
     */
    protected $localizedStrip = null;
    /**
     * Sets different thumbnail images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedThumbnail = 37;</code>
     */
    protected $localizedThumbnail = null;
    /**
     * Sets different background images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedBackground = 38;</code>
     */
    protected $localizedBackground = null;
    /**
     * Sets different footer images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedFooter = 39;</code>
     */
    protected $localizedFooter = null;
    /**
     * Sets different security images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedSecurity = 40;</code>
     */
    protected $localizedSecurity = null;
    /**
     * Sets different privilege images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedPrivilege = 41;</code>
     */
    protected $localizedPrivilege = null;
    /**
     * Sets different airline alliance images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAirlineAlliance = 42;</code>
     */
    protected $localizedAirlineAlliance = null;
    /**
     * Sets different personalized images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedPersonalization = 43;</code>
     */
    protected $localizedPersonalization = null;
    /**
     * Sets different banner images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedBanner = 44;</code>
     */
    protected $localizedBanner = null;
    /**
     * Sets different message images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedMessage = 45;</code>
     */
    protected $localizedMessage = null;
    /**
     * Sets different wideLogo images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedWideLogo = 46;</code>
     */
    protected $localizedWideLogo = null;
    /**
     * Sets different secondaryLogo images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedSecondaryLogo = 47;</code>
     */
    protected $localizedSecondaryLogo = null;
    /**
     * Sets different artwork images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedArtwork = 48;</code>
     */
    protected $localizedArtwork = null;
    /**
     * Sets different posterLogo images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedPosterLogo = 49;</code>
     */
    protected $localizedPosterLogo = null;
    /**
     * Sets different venueMap images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedVenueMap = 50;</code>
     */
    protected $localizedVenueMap = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $icon
     *           Mandatory icon, used in Apple Wallet lock screen (87px x 87px).
     *     @type string $logo
     *           Logo is circle-cropped by Google Pay, a 15% safety margin is recommended (660px x 660px).
     *     @type string $appleLogo
     *           Apple logo can be used where a rectangular design is preferred for Apple Passes only.  If ommitted, the square logo image will be used.  (<=480px x 150px).
     *     @type string $hero
     *           Hero is the Google Pay strip and is also used in the dialog box when installing (1032px x 336px).
     *     @type string $eventStrip
     *           Apple Wallet strip image for EventTicket pass types (1125px x 294px).
     *     @type string $strip
     *           Apple Wallet strip image for other pass types with a  strip image (1125px x 432px).
     *     @type string $thumbnail
     *           Used on Membership passes and Apple event tickets with a background image (>=270px x >=270px in a ratio range of 2:3-3:2).
     *     @type string $background
     *           Used only be Apple Event Ticket designs, this image is blurred to form a background and so can be a low quality image.  Note it may also be slightly cropped on some devices (180px x 220px).
     *     @type string $footer
     *           Displays above the barcode for Apple Wallet Boarding pass tickets (858px x 45px)
     *     @type string $security
     *           Google Pay - used to denote a security program on boarding pass types (E.g. TSA PreCheckÂ®).  Width of 1600px is shared with the boarding privilege logo (<=1600px x 80px).
     *     @type string $privilege
     *           Google Pay - used to denote a boarding privilege.  Width of 1600px is shared with the security program logo (<=1600px x 80px).
     *     @type string $airlineAlliance
     *           Google Pay - used to denote airline alliance on boarding pass types (<=1600px x 80px).
     *     @type string $personalization
     *           For Apple Pay NFC passes whitelisted for personalization. Image is displayed after terms are presented (<=450px x 120px).
     *     @type string $banner
     *           Used on a landing page or email.  Image has no size constraints and will be treated as \@2x pixel density.
     *     @type string $message
     *           Used for Google Pay in wallet promotional messages - for Apple Pay, the message will be rendered on a mobile website (1860px x <=930px).
     *     @type string $profile
     *           Used for user Profile images (300px x 300px). Cannot be localized.
     *     @type string $appImage
     *           Used for user app images in Google Pay Passes (300px x 300px). Cannot be localized.
     *     @type string $stampedImage
     *           Used for stamp and unstamped images for use with stamp/punch cards. Cannot be localized.
     *     @type string $unstampedImage
     *           Used for stamp and unstamped images for use with stamp/punch cards. Cannot be localized.
     *     @type \Io\StampImageConfig $stampConfig
     *           Spec for a stamp image. Cannot be localized.
     *     @type string $wideLogo
     *           Used for rectangular Google Wallet pass header image (1280px x 400px).
     *     @type string $secondaryLogo
     *           Used in the bottom right hand footer inset of an Apple poster Event Ticket (<=405px x 36px).
     *     @type string $artwork
     *           Used in the background of Apple poster Event Tickets. Image should be a compelling visual representation of the event (1074px x 1344px).
     *     @type string $posterLogo
     *           Used in the top left hand corner for Apple poster style Event tickets (<=378px x 90px)
     *     @type string $venueMap
     *           Used to present a venue map for an Apple poster style Event Ticket.  Width should be Ratio should be at least 1320px wide and have a 16:9 or 4:5 to avoid cropping.
     *     @type \Io\LocalizedString $localizedIcon
     *           Sets different icon images for non-default languages.
     *     @type \Io\LocalizedString $localizedLogo
     *           Sets different logo images for non-default languages.
     *     @type \Io\LocalizedString $localizedAppleLogo
     *           Sets different Apple Logo images for non-default languages.
     *     @type \Io\LocalizedString $localizedHero
     *           Sets different hero images for non-default languages.
     *     @type \Io\LocalizedString $localizedEventStrip
     *           Sets different event strip images for non-default languages.
     *     @type \Io\LocalizedString $localizedStrip
     *           Sets different strip images for non-default languages.
     *     @type \Io\LocalizedString $localizedThumbnail
     *           Sets different thumbnail images for non-default languages.
     *     @type \Io\LocalizedString $localizedBackground
     *           Sets different background images for non-default languages.
     *     @type \Io\LocalizedString $localizedFooter
     *           Sets different footer images for non-default languages.
     *     @type \Io\LocalizedString $localizedSecurity
     *           Sets different security images for non-default languages.
     *     @type \Io\LocalizedString $localizedPrivilege
     *           Sets different privilege images for non-default languages.
     *     @type \Io\LocalizedString $localizedAirlineAlliance
     *           Sets different airline alliance images for non-default languages.
     *     @type \Io\LocalizedString $localizedPersonalization
     *           Sets different personalized images for non-default languages.
     *     @type \Io\LocalizedString $localizedBanner
     *           Sets different banner images for non-default languages.
     *     @type \Io\LocalizedString $localizedMessage
     *           Sets different message images for non-default languages.
     *     @type \Io\LocalizedString $localizedWideLogo
     *           Sets different wideLogo images for non-default languages.
     *     @type \Io\LocalizedString $localizedSecondaryLogo
     *           Sets different secondaryLogo images for non-default languages.
     *     @type \Io\LocalizedString $localizedArtwork
     *           Sets different artwork images for non-default languages.
     *     @type \Io\LocalizedString $localizedPosterLogo
     *           Sets different posterLogo images for non-default languages.
     *     @type \Io\LocalizedString $localizedVenueMap
     *           Sets different venueMap images for non-default languages.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Image\Image::initOnce();
        parent::__construct($data);
    }

    /**
     * Mandatory icon, used in Apple Wallet lock screen (87px x 87px).
     *
     * Generated from protobuf field <code>string icon = 1;</code>
     * @return string
     */
    public function getIcon()
    {
        return $this->icon;
    }

    /**
     * Mandatory icon, used in Apple Wallet lock screen (87px x 87px).
     *
     * Generated from protobuf field <code>string icon = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setIcon($var)
    {
        GPBUtil::checkString($var, True);
        $this->icon = $var;

        return $this;
    }

    /**
     * Logo is circle-cropped by Google Pay, a 15% safety margin is recommended (660px x 660px).
     *
     * Generated from protobuf field <code>string logo = 2;</code>
     * @return string
     */
    public function getLogo()
    {
        return $this->logo;
    }

    /**
     * Logo is circle-cropped by Google Pay, a 15% safety margin is recommended (660px x 660px).
     *
     * Generated from protobuf field <code>string logo = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setLogo($var)
    {
        GPBUtil::checkString($var, True);
        $this->logo = $var;

        return $this;
    }

    /**
     * Apple logo can be used where a rectangular design is preferred for Apple Passes only.  If ommitted, the square logo image will be used.  (<=480px x 150px).
     *
     * Generated from protobuf field <code>string appleLogo = 3;</code>
     * @return string
     */
    public function getAppleLogo()
    {
        return $this->appleLogo;
    }

    /**
     * Apple logo can be used where a rectangular design is preferred for Apple Passes only.  If ommitted, the square logo image will be used.  (<=480px x 150px).
     *
     * Generated from protobuf field <code>string appleLogo = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setAppleLogo($var)
    {
        GPBUtil::checkString($var, True);
        $this->appleLogo = $var;

        return $this;
    }

    /**
     * Hero is the Google Pay strip and is also used in the dialog box when installing (1032px x 336px).
     *
     * Generated from protobuf field <code>string hero = 4;</code>
     * @return string
     */
    public function getHero()
    {
        return $this->hero;
    }

    /**
     * Hero is the Google Pay strip and is also used in the dialog box when installing (1032px x 336px).
     *
     * Generated from protobuf field <code>string hero = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setHero($var)
    {
        GPBUtil::checkString($var, True);
        $this->hero = $var;

        return $this;
    }

    /**
     * Apple Wallet strip image for EventTicket pass types (1125px x 294px).
     *
     * Generated from protobuf field <code>string eventStrip = 5;</code>
     * @return string
     */
    public function getEventStrip()
    {
        return $this->eventStrip;
    }

    /**
     * Apple Wallet strip image for EventTicket pass types (1125px x 294px).
     *
     * Generated from protobuf field <code>string eventStrip = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setEventStrip($var)
    {
        GPBUtil::checkString($var, True);
        $this->eventStrip = $var;

        return $this;
    }

    /**
     * Apple Wallet strip image for other pass types with a  strip image (1125px x 432px).
     *
     * Generated from protobuf field <code>string strip = 6;</code>
     * @return string
     */
    public function getStrip()
    {
        return $this->strip;
    }

    /**
     * Apple Wallet strip image for other pass types with a  strip image (1125px x 432px).
     *
     * Generated from protobuf field <code>string strip = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setStrip($var)
    {
        GPBUtil::checkString($var, True);
        $this->strip = $var;

        return $this;
    }

    /**
     * Used on Membership passes and Apple event tickets with a background image (>=270px x >=270px in a ratio range of 2:3-3:2).
     *
     * Generated from protobuf field <code>string thumbnail = 7;</code>
     * @return string
     */
    public function getThumbnail()
    {
        return $this->thumbnail;
    }

    /**
     * Used on Membership passes and Apple event tickets with a background image (>=270px x >=270px in a ratio range of 2:3-3:2).
     *
     * Generated from protobuf field <code>string thumbnail = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setThumbnail($var)
    {
        GPBUtil::checkString($var, True);
        $this->thumbnail = $var;

        return $this;
    }

    /**
     * Used only be Apple Event Ticket designs, this image is blurred to form a background and so can be a low quality image.  Note it may also be slightly cropped on some devices (180px x 220px).
     *
     * Generated from protobuf field <code>string background = 8;</code>
     * @return string
     */
    public function getBackground()
    {
        return $this->background;
    }

    /**
     * Used only be Apple Event Ticket designs, this image is blurred to form a background and so can be a low quality image.  Note it may also be slightly cropped on some devices (180px x 220px).
     *
     * Generated from protobuf field <code>string background = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setBackground($var)
    {
        GPBUtil::checkString($var, True);
        $this->background = $var;

        return $this;
    }

    /**
     * Displays above the barcode for Apple Wallet Boarding pass tickets (858px x 45px)
     *
     * Generated from protobuf field <code>string footer = 9;</code>
     * @return string
     */
    public function getFooter()
    {
        return $this->footer;
    }

    /**
     * Displays above the barcode for Apple Wallet Boarding pass tickets (858px x 45px)
     *
     * Generated from protobuf field <code>string footer = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setFooter($var)
    {
        GPBUtil::checkString($var, True);
        $this->footer = $var;

        return $this;
    }

    /**
     * Google Pay - used to denote a security program on boarding pass types (E.g. TSA PreCheckÂ®).  Width of 1600px is shared with the boarding privilege logo (<=1600px x 80px).
     *
     * Generated from protobuf field <code>string security = 10;</code>
     * @return string
     */
    public function getSecurity()
    {
        return $this->security;
    }

    /**
     * Google Pay - used to denote a security program on boarding pass types (E.g. TSA PreCheckÂ®).  Width of 1600px is shared with the boarding privilege logo (<=1600px x 80px).
     *
     * Generated from protobuf field <code>string security = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setSecurity($var)
    {
        GPBUtil::checkString($var, True);
        $this->security = $var;

        return $this;
    }

    /**
     * Google Pay - used to denote a boarding privilege.  Width of 1600px is shared with the security program logo (<=1600px x 80px).
     *
     * Generated from protobuf field <code>string privilege = 11;</code>
     * @return string
     */
    public function getPrivilege()
    {
        return $this->privilege;
    }

    /**
     * Google Pay - used to denote a boarding privilege.  Width of 1600px is shared with the security program logo (<=1600px x 80px).
     *
     * Generated from protobuf field <code>string privilege = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setPrivilege($var)
    {
        GPBUtil::checkString($var, True);
        $this->privilege = $var;

        return $this;
    }

    /**
     * Google Pay - used to denote airline alliance on boarding pass types (<=1600px x 80px).
     *
     * Generated from protobuf field <code>string airlineAlliance = 12;</code>
     * @return string
     */
    public function getAirlineAlliance()
    {
        return $this->airlineAlliance;
    }

    /**
     * Google Pay - used to denote airline alliance on boarding pass types (<=1600px x 80px).
     *
     * Generated from protobuf field <code>string airlineAlliance = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setAirlineAlliance($var)
    {
        GPBUtil::checkString($var, True);
        $this->airlineAlliance = $var;

        return $this;
    }

    /**
     * For Apple Pay NFC passes whitelisted for personalization. Image is displayed after terms are presented (<=450px x 120px).
     *
     * Generated from protobuf field <code>string personalization = 13;</code>
     * @return string
     */
    public function getPersonalization()
    {
        return $this->personalization;
    }

    /**
     * For Apple Pay NFC passes whitelisted for personalization. Image is displayed after terms are presented (<=450px x 120px).
     *
     * Generated from protobuf field <code>string personalization = 13;</code>
     * @param string $var
     * @return $this
     */
    public function setPersonalization($var)
    {
        GPBUtil::checkString($var, True);
        $this->personalization = $var;

        return $this;
    }

    /**
     * Used on a landing page or email.  Image has no size constraints and will be treated as \@2x pixel density.
     *
     * Generated from protobuf field <code>string banner = 14;</code>
     * @return string
     */
    public function getBanner()
    {
        return $this->banner;
    }

    /**
     * Used on a landing page or email.  Image has no size constraints and will be treated as \@2x pixel density.
     *
     * Generated from protobuf field <code>string banner = 14;</code>
     * @param string $var
     * @return $this
     */
    public function setBanner($var)
    {
        GPBUtil::checkString($var, True);
        $this->banner = $var;

        return $this;
    }

    /**
     * Used for Google Pay in wallet promotional messages - for Apple Pay, the message will be rendered on a mobile website (1860px x <=930px).
     *
     * Generated from protobuf field <code>string message = 15;</code>
     * @return string
     */
    public function getMessage()
    {
        return $this->message;
    }

    /**
     * Used for Google Pay in wallet promotional messages - for Apple Pay, the message will be rendered on a mobile website (1860px x <=930px).
     *
     * Generated from protobuf field <code>string message = 15;</code>
     * @param string $var
     * @return $this
     */
    public function setMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->message = $var;

        return $this;
    }

    /**
     * Used for user Profile images (300px x 300px). Cannot be localized.
     *
     * Generated from protobuf field <code>string profile = 16;</code>
     * @return string
     */
    public function getProfile()
    {
        return $this->profile;
    }

    /**
     * Used for user Profile images (300px x 300px). Cannot be localized.
     *
     * Generated from protobuf field <code>string profile = 16;</code>
     * @param string $var
     * @return $this
     */
    public function setProfile($var)
    {
        GPBUtil::checkString($var, True);
        $this->profile = $var;

        return $this;
    }

    /**
     * Used for user app images in Google Pay Passes (300px x 300px). Cannot be localized.
     *
     * Generated from protobuf field <code>string appImage = 17;</code>
     * @return string
     */
    public function getAppImage()
    {
        return $this->appImage;
    }

    /**
     * Used for user app images in Google Pay Passes (300px x 300px). Cannot be localized.
     *
     * Generated from protobuf field <code>string appImage = 17;</code>
     * @param string $var
     * @return $this
     */
    public function setAppImage($var)
    {
        GPBUtil::checkString($var, True);
        $this->appImage = $var;

        return $this;
    }

    /**
     * Used for stamp and unstamped images for use with stamp/punch cards. Cannot be localized.
     *
     * Generated from protobuf field <code>string stampedImage = 18;</code>
     * @return string
     */
    public function getStampedImage()
    {
        return $this->stampedImage;
    }

    /**
     * Used for stamp and unstamped images for use with stamp/punch cards. Cannot be localized.
     *
     * Generated from protobuf field <code>string stampedImage = 18;</code>
     * @param string $var
     * @return $this
     */
    public function setStampedImage($var)
    {
        GPBUtil::checkString($var, True);
        $this->stampedImage = $var;

        return $this;
    }

    /**
     * Used for stamp and unstamped images for use with stamp/punch cards. Cannot be localized.
     *
     * Generated from protobuf field <code>string unstampedImage = 19;</code>
     * @return string
     */
    public function getUnstampedImage()
    {
        return $this->unstampedImage;
    }

    /**
     * Used for stamp and unstamped images for use with stamp/punch cards. Cannot be localized.
     *
     * Generated from protobuf field <code>string unstampedImage = 19;</code>
     * @param string $var
     * @return $this
     */
    public function setUnstampedImage($var)
    {
        GPBUtil::checkString($var, True);
        $this->unstampedImage = $var;

        return $this;
    }

    /**
     * Spec for a stamp image. Cannot be localized.
     *
     * Generated from protobuf field <code>.io.StampImageConfig stampConfig = 20;</code>
     * @return \Io\StampImageConfig|null
     */
    public function getStampConfig()
    {
        return $this->stampConfig;
    }

    public function hasStampConfig()
    {
        return isset($this->stampConfig);
    }

    public function clearStampConfig()
    {
        unset($this->stampConfig);
    }

    /**
     * Spec for a stamp image. Cannot be localized.
     *
     * Generated from protobuf field <code>.io.StampImageConfig stampConfig = 20;</code>
     * @param \Io\StampImageConfig $var
     * @return $this
     */
    public function setStampConfig($var)
    {
        GPBUtil::checkMessage($var, \Io\StampImageConfig::class);
        $this->stampConfig = $var;

        return $this;
    }

    /**
     * Used for rectangular Google Wallet pass header image (1280px x 400px).
     *
     * Generated from protobuf field <code>string wideLogo = 21;</code>
     * @return string
     */
    public function getWideLogo()
    {
        return $this->wideLogo;
    }

    /**
     * Used for rectangular Google Wallet pass header image (1280px x 400px).
     *
     * Generated from protobuf field <code>string wideLogo = 21;</code>
     * @param string $var
     * @return $this
     */
    public function setWideLogo($var)
    {
        GPBUtil::checkString($var, True);
        $this->wideLogo = $var;

        return $this;
    }

    /**
     * Used in the bottom right hand footer inset of an Apple poster Event Ticket (<=405px x 36px).
     *
     * Generated from protobuf field <code>string secondaryLogo = 22;</code>
     * @return string
     */
    public function getSecondaryLogo()
    {
        return $this->secondaryLogo;
    }

    /**
     * Used in the bottom right hand footer inset of an Apple poster Event Ticket (<=405px x 36px).
     *
     * Generated from protobuf field <code>string secondaryLogo = 22;</code>
     * @param string $var
     * @return $this
     */
    public function setSecondaryLogo($var)
    {
        GPBUtil::checkString($var, True);
        $this->secondaryLogo = $var;

        return $this;
    }

    /**
     * Used in the background of Apple poster Event Tickets. Image should be a compelling visual representation of the event (1074px x 1344px).
     *
     * Generated from protobuf field <code>string artwork = 23;</code>
     * @return string
     */
    public function getArtwork()
    {
        return $this->artwork;
    }

    /**
     * Used in the background of Apple poster Event Tickets. Image should be a compelling visual representation of the event (1074px x 1344px).
     *
     * Generated from protobuf field <code>string artwork = 23;</code>
     * @param string $var
     * @return $this
     */
    public function setArtwork($var)
    {
        GPBUtil::checkString($var, True);
        $this->artwork = $var;

        return $this;
    }

    /**
     * Used in the top left hand corner for Apple poster style Event tickets (<=378px x 90px)
     *
     * Generated from protobuf field <code>string posterLogo = 24;</code>
     * @return string
     */
    public function getPosterLogo()
    {
        return $this->posterLogo;
    }

    /**
     * Used in the top left hand corner for Apple poster style Event tickets (<=378px x 90px)
     *
     * Generated from protobuf field <code>string posterLogo = 24;</code>
     * @param string $var
     * @return $this
     */
    public function setPosterLogo($var)
    {
        GPBUtil::checkString($var, True);
        $this->posterLogo = $var;

        return $this;
    }

    /**
     * Used to present a venue map for an Apple poster style Event Ticket.  Width should be Ratio should be at least 1320px wide and have a 16:9 or 4:5 to avoid cropping.
     *
     * Generated from protobuf field <code>string venueMap = 25;</code>
     * @return string
     */
    public function getVenueMap()
    {
        return $this->venueMap;
    }

    /**
     * Used to present a venue map for an Apple poster style Event Ticket.  Width should be Ratio should be at least 1320px wide and have a 16:9 or 4:5 to avoid cropping.
     *
     * Generated from protobuf field <code>string venueMap = 25;</code>
     * @param string $var
     * @return $this
     */
    public function setVenueMap($var)
    {
        GPBUtil::checkString($var, True);
        $this->venueMap = $var;

        return $this;
    }

    /**
     * Sets different icon images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedIcon = 31;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedIcon()
    {
        return $this->localizedIcon;
    }

    public function hasLocalizedIcon()
    {
        return isset($this->localizedIcon);
    }

    public function clearLocalizedIcon()
    {
        unset($this->localizedIcon);
    }

    /**
     * Sets different icon images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedIcon = 31;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedIcon($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedIcon = $var;

        return $this;
    }

    /**
     * Sets different logo images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedLogo = 32;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedLogo()
    {
        return $this->localizedLogo;
    }

    public function hasLocalizedLogo()
    {
        return isset($this->localizedLogo);
    }

    public function clearLocalizedLogo()
    {
        unset($this->localizedLogo);
    }

    /**
     * Sets different logo images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedLogo = 32;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedLogo($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedLogo = $var;

        return $this;
    }

    /**
     * Sets different Apple Logo images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAppleLogo = 33;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedAppleLogo()
    {
        return $this->localizedAppleLogo;
    }

    public function hasLocalizedAppleLogo()
    {
        return isset($this->localizedAppleLogo);
    }

    public function clearLocalizedAppleLogo()
    {
        unset($this->localizedAppleLogo);
    }

    /**
     * Sets different Apple Logo images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAppleLogo = 33;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedAppleLogo($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedAppleLogo = $var;

        return $this;
    }

    /**
     * Sets different hero images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedHero = 34;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedHero()
    {
        return $this->localizedHero;
    }

    public function hasLocalizedHero()
    {
        return isset($this->localizedHero);
    }

    public function clearLocalizedHero()
    {
        unset($this->localizedHero);
    }

    /**
     * Sets different hero images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedHero = 34;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedHero($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedHero = $var;

        return $this;
    }

    /**
     * Sets different event strip images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedEventStrip = 35;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedEventStrip()
    {
        return $this->localizedEventStrip;
    }

    public function hasLocalizedEventStrip()
    {
        return isset($this->localizedEventStrip);
    }

    public function clearLocalizedEventStrip()
    {
        unset($this->localizedEventStrip);
    }

    /**
     * Sets different event strip images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedEventStrip = 35;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedEventStrip($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedEventStrip = $var;

        return $this;
    }

    /**
     * Sets different strip images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedStrip = 36;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedStrip()
    {
        return $this->localizedStrip;
    }

    public function hasLocalizedStrip()
    {
        return isset($this->localizedStrip);
    }

    public function clearLocalizedStrip()
    {
        unset($this->localizedStrip);
    }

    /**
     * Sets different strip images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedStrip = 36;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedStrip($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedStrip = $var;

        return $this;
    }

    /**
     * Sets different thumbnail images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedThumbnail = 37;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedThumbnail()
    {
        return $this->localizedThumbnail;
    }

    public function hasLocalizedThumbnail()
    {
        return isset($this->localizedThumbnail);
    }

    public function clearLocalizedThumbnail()
    {
        unset($this->localizedThumbnail);
    }

    /**
     * Sets different thumbnail images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedThumbnail = 37;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedThumbnail($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedThumbnail = $var;

        return $this;
    }

    /**
     * Sets different background images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedBackground = 38;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedBackground()
    {
        return $this->localizedBackground;
    }

    public function hasLocalizedBackground()
    {
        return isset($this->localizedBackground);
    }

    public function clearLocalizedBackground()
    {
        unset($this->localizedBackground);
    }

    /**
     * Sets different background images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedBackground = 38;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedBackground($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedBackground = $var;

        return $this;
    }

    /**
     * Sets different footer images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedFooter = 39;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedFooter()
    {
        return $this->localizedFooter;
    }

    public function hasLocalizedFooter()
    {
        return isset($this->localizedFooter);
    }

    public function clearLocalizedFooter()
    {
        unset($this->localizedFooter);
    }

    /**
     * Sets different footer images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedFooter = 39;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedFooter($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedFooter = $var;

        return $this;
    }

    /**
     * Sets different security images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedSecurity = 40;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedSecurity()
    {
        return $this->localizedSecurity;
    }

    public function hasLocalizedSecurity()
    {
        return isset($this->localizedSecurity);
    }

    public function clearLocalizedSecurity()
    {
        unset($this->localizedSecurity);
    }

    /**
     * Sets different security images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedSecurity = 40;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedSecurity($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedSecurity = $var;

        return $this;
    }

    /**
     * Sets different privilege images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedPrivilege = 41;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedPrivilege()
    {
        return $this->localizedPrivilege;
    }

    public function hasLocalizedPrivilege()
    {
        return isset($this->localizedPrivilege);
    }

    public function clearLocalizedPrivilege()
    {
        unset($this->localizedPrivilege);
    }

    /**
     * Sets different privilege images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedPrivilege = 41;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedPrivilege($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedPrivilege = $var;

        return $this;
    }

    /**
     * Sets different airline alliance images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAirlineAlliance = 42;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedAirlineAlliance()
    {
        return $this->localizedAirlineAlliance;
    }

    public function hasLocalizedAirlineAlliance()
    {
        return isset($this->localizedAirlineAlliance);
    }

    public function clearLocalizedAirlineAlliance()
    {
        unset($this->localizedAirlineAlliance);
    }

    /**
     * Sets different airline alliance images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedAirlineAlliance = 42;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedAirlineAlliance($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedAirlineAlliance = $var;

        return $this;
    }

    /**
     * Sets different personalized images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedPersonalization = 43;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedPersonalization()
    {
        return $this->localizedPersonalization;
    }

    public function hasLocalizedPersonalization()
    {
        return isset($this->localizedPersonalization);
    }

    public function clearLocalizedPersonalization()
    {
        unset($this->localizedPersonalization);
    }

    /**
     * Sets different personalized images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedPersonalization = 43;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedPersonalization($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedPersonalization = $var;

        return $this;
    }

    /**
     * Sets different banner images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedBanner = 44;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedBanner()
    {
        return $this->localizedBanner;
    }

    public function hasLocalizedBanner()
    {
        return isset($this->localizedBanner);
    }

    public function clearLocalizedBanner()
    {
        unset($this->localizedBanner);
    }

    /**
     * Sets different banner images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedBanner = 44;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedBanner($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedBanner = $var;

        return $this;
    }

    /**
     * Sets different message images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedMessage = 45;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedMessage()
    {
        return $this->localizedMessage;
    }

    public function hasLocalizedMessage()
    {
        return isset($this->localizedMessage);
    }

    public function clearLocalizedMessage()
    {
        unset($this->localizedMessage);
    }

    /**
     * Sets different message images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedMessage = 45;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedMessage($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedMessage = $var;

        return $this;
    }

    /**
     * Sets different wideLogo images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedWideLogo = 46;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedWideLogo()
    {
        return $this->localizedWideLogo;
    }

    public function hasLocalizedWideLogo()
    {
        return isset($this->localizedWideLogo);
    }

    public function clearLocalizedWideLogo()
    {
        unset($this->localizedWideLogo);
    }

    /**
     * Sets different wideLogo images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedWideLogo = 46;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedWideLogo($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedWideLogo = $var;

        return $this;
    }

    /**
     * Sets different secondaryLogo images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedSecondaryLogo = 47;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedSecondaryLogo()
    {
        return $this->localizedSecondaryLogo;
    }

    public function hasLocalizedSecondaryLogo()
    {
        return isset($this->localizedSecondaryLogo);
    }

    public function clearLocalizedSecondaryLogo()
    {
        unset($this->localizedSecondaryLogo);
    }

    /**
     * Sets different secondaryLogo images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedSecondaryLogo = 47;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedSecondaryLogo($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedSecondaryLogo = $var;

        return $this;
    }

    /**
     * Sets different artwork images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedArtwork = 48;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedArtwork()
    {
        return $this->localizedArtwork;
    }

    public function hasLocalizedArtwork()
    {
        return isset($this->localizedArtwork);
    }

    public function clearLocalizedArtwork()
    {
        unset($this->localizedArtwork);
    }

    /**
     * Sets different artwork images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedArtwork = 48;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedArtwork($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedArtwork = $var;

        return $this;
    }

    /**
     * Sets different posterLogo images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedPosterLogo = 49;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedPosterLogo()
    {
        return $this->localizedPosterLogo;
    }

    public function hasLocalizedPosterLogo()
    {
        return isset($this->localizedPosterLogo);
    }

    public function clearLocalizedPosterLogo()
    {
        unset($this->localizedPosterLogo);
    }

    /**
     * Sets different posterLogo images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedPosterLogo = 49;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedPosterLogo($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedPosterLogo = $var;

        return $this;
    }

    /**
     * Sets different venueMap images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedVenueMap = 50;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedVenueMap()
    {
        return $this->localizedVenueMap;
    }

    public function hasLocalizedVenueMap()
    {
        return isset($this->localizedVenueMap);
    }

    public function clearLocalizedVenueMap()
    {
        unset($this->localizedVenueMap);
    }

    /**
     * Sets different venueMap images for non-default languages.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedVenueMap = 50;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedVenueMap($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedVenueMap = $var;

        return $this;
    }

}

