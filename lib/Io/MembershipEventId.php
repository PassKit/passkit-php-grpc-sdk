<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/common/integration.proto

namespace Io;

use UnexpectedValueException;

/**
 * Protocol specific events for the Membership protocol.
 *
 * Protobuf type <code>io.MembershipEventId</code>
 */
class MembershipEventId
{
    /**
     * Generated from protobuf enum <code>MEMBER_EVENT_NONE = 0;</code>
     */
    const MEMBER_EVENT_NONE = 0;
    /**
     * The member payload will be sent to destination when member record is created.
     *
     * Generated from protobuf enum <code>MEMBER_EVENT_ENROLLED = 1;</code>
     */
    const MEMBER_EVENT_ENROLLED = 1;
    /**
     * The member payload will be sent to destination when any of member field is updated.
     *
     * Generated from protobuf enum <code>MEMBER_EVENT_UPDATED = 2;</code>
     */
    const MEMBER_EVENT_UPDATED = 2;

    private static $valueToName = [
        self::MEMBER_EVENT_NONE => 'MEMBER_EVENT_NONE',
        self::MEMBER_EVENT_ENROLLED => 'MEMBER_EVENT_ENROLLED',
        self::MEMBER_EVENT_UPDATED => 'MEMBER_EVENT_UPDATED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

