<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: io/common/semantics.proto

namespace Io;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>io.EventSemanticTags</code>
 */
class EventSemanticTags extends \Google\Protobuf\Internal\Message
{
    /**
     * The Apple ID(s) for the artists featuring in an event. If the ID is not known or provided for a given artist, the ID can be found in the iTunes share URL.
     *
     * Generated from protobuf field <code>repeated string artistIds = 1;</code>
     */
    private $artistIds;
    /**
     * On tickets leveraging the team sports template, the logo text is hardcoded to be HOME TEAM ABBREVIATION vs AWAY TEAM ABBREVIATION. The abbreviations are fetched from the homeTeamAbbreviation and awayTeamAbbreviation semantic tags respectively.
     *
     * Generated from protobuf field <code>string awayTeamAbbreviation = 2;</code>
     */
    protected $awayTeamAbbreviation = '';
    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedAwayTeamAbbreviation = 3;</code>
     */
    protected $localizedAwayTeamAbbreviation = null;
    /**
     * The home location of the away team. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string awayTeamLocation = 4;</code>
     */
    protected $awayTeamLocation = '';
    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedAwayTeamLocation = 5;</code>
     */
    protected $localizedAwayTeamLocation = null;
    /**
     * The name of the away team. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string awayTeamName = 6;</code>
     */
    protected $awayTeamName = '';
    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedAwayTeamName = 7;</code>
     */
    protected $localizedAwayTeamName = null;
    /**
     * The date and time the event ends. Use this key for any type of event ticket. If not provided, the end date value from the event object will be used.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp eventEndDate = 8;</code>
     */
    protected $eventEndDate = null;
    /**
     * The full name of the event, such as the title of a movie. Use this key for any type of event ticket.  Use if the event name requires localization, otherwise the production name will be used.
     *
     * Generated from protobuf field <code>string eventName = 9;</code>
     */
    protected $eventName = '';
    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedEventName = 10;</code>
     */
    protected $localizedEventName = null;
    /**
     *  // The date and time the event starts. Use this key for any type of event ticket. If not provided, the scheduled or actual start date value from the event object will be used.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp eventStartDate = 11;</code>
     */
    protected $eventStartDate = null;
    /**
     * The genre of the performance, such as “Classical”. Use this key for any type of event ticket.
     *
     * Generated from protobuf field <code>string genre = 12;</code>
     */
    protected $genre = '';
    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedGenre = 13;</code>
     */
    protected $localizedGenre = null;
    /**
     * On tickets leveraging the team sports template, the logo text is hardcoded to be HOME TEAM ABBREVIATION vs AWAY TEAM ABBREVIATION. The abbreviations are fetched from the homeTeamAbbreviation and awayTeamAbbreviation semantic tags respectively.
     *
     * Generated from protobuf field <code>string homeTeamAbbreviation = 14;</code>
     */
    protected $homeTeamAbbreviation = '';
    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedHomeTeamAbbreviation = 15;</code>
     */
    protected $localizedHomeTeamAbbreviation = null;
    /**
     * The home location of the home team. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string homeTeamLocation = 16;</code>
     */
    protected $homeTeamLocation = '';
    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedHomeTeamLocation = 17;</code>
     */
    protected $localizedHomeTeamLocation = null;
    /**
     * The name of the home team. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string homeTeamName = 18;</code>
     */
    protected $homeTeamName = '';
    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedHomeTeamName = 19;</code>
     */
    protected $localizedHomeTeamName = null;
    /**
     * The abbreviated league name for a sports event. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string leagueAbbreviation = 20;</code>
     */
    protected $leagueAbbreviation = '';
    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedLeagueAbbreviation = 21;</code>
     */
    protected $localizedLeagueAbbreviation = null;
    /**
     * The full league name for a sports event. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string leagueName = 22;</code>
     */
    protected $leagueName = '';
    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedLeagueName = 23;</code>
     */
    protected $localizedLeagueName = null;
    /**
     * An array of the full names of the performers and opening acts at the event, in decreasing order of significance.
     *
     * Generated from protobuf field <code>repeated string performerNames = 24;</code>
     */
    private $performerNames;
    /**
     * A Boolean value that determines whether the user’s device remains silent during an event or transit journey. The system may override the key and determine the length of the period of silence.
     *
     * Generated from protobuf field <code>bool silenceRequested = 25;</code>
     */
    protected $silenceRequested = false;
    /**
     * The commonly used name of the sport. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string sportName = 26;</code>
     */
    protected $sportName = '';
    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedSportName = 27;</code>
     */
    protected $localizedSportName = null;
    /**
     * An object that represents the geographic coordinates of the venue.
     *
     * Generated from protobuf field <code>.io.SemanticLocation venueLocation = 28;</code>
     */
    protected $venueLocation = null;
    /**
     * The phone number for enquiries about the venue’s ticketed event.
     *
     * Generated from protobuf field <code>string venuePhoneNumber = 29;</code>
     */
    protected $venuePhoneNumber = '';
    /**
     * The full name of the room where the ticketed event is to take place. If a room is provided in the seat information, this value will be overwritten.
     *
     * Generated from protobuf field <code>string venueRoom = 30;</code>
     */
    protected $venueRoom = '';
    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedVenueRoom = 31;</code>
     */
    protected $localizedVenueRoom = null;
    /**
     * An array of objects that represent the WiFi networks associated with the event; for example, the network name and password associated with a developer conference.
     *
     * Generated from protobuf field <code>repeated .io.SemanticWifiNetwork wifiAccess = 32;</code>
     */
    private $wifiAccess;
    /**
     * The name of the city or hosting region of the venue.
     *
     * Generated from protobuf field <code>string venueRegionName = 33;</code>
     */
    protected $venueRegionName = '';
    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedVenueRegionName = 34;</code>
     */
    protected $localizedVenueRegionName = null;
    /**
     * Boolean value indicating that whether tailgating is allowed at the venue.
     *
     * Generated from protobuf field <code>bool tailgatingAllowed = 35;</code>
     */
    protected $tailgatingAllowed = false;
    /**
     * Details of the entrance if further information is required.
     *
     * Generated from protobuf field <code>string entranceDescription = 36;</code>
     */
    protected $entranceDescription = '';
    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedEntranceDescription = 37;</code>
     */
    protected $localizedEntranceDescription = null;
    /**
     * Time the gates to the venue open.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueGatesOpenDate = 38;</code>
     */
    protected $venueGatesOpenDate = null;
    /**
     * Time the fan zone opens.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueFanZoneOpenDate = 39;</code>
     */
    protected $venueFanZoneOpenDate = null;
    /**
     * Time the parking lots open.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueParkingLotsOpenDate = 40;</code>
     */
    protected $venueParkingLotsOpenDate = null;
    /**
     * Time when the box office opens.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueBoxOfficeOpenDate = 41;</code>
     */
    protected $venueBoxOfficeOpenDate = null;
    /**
     * Time when the venue opens. Use if none of the more specific values above apply.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueOpenDate = 42;</code>
     */
    protected $venueOpenDate = null;
    /**
     * Time when the venue closes.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueCloseDate = 43;</code>
     */
    protected $venueCloseDate = null;
    /**
     * The Apple ID(s) for playlists applicable to the event. If the ID is not known or provided for a given playlist, the ID can be found in the iTunes share URL.
     *
     * Generated from protobuf field <code>repeated string playlistIds = 44;</code>
     */
    private $playlistIds;
    /**
     * The Apple ID(s) for the albums for artists featuring in an event. If the ID is not known or provided for a given album, the ID can be found in the iTunes share URL.
     *
     * Generated from protobuf field <code>repeated string albumIds = 45;</code>
     */
    private $albumIds;
    /**
     * Additional information for the start date of the event.
     *
     * Generated from protobuf field <code>.io.SemanticEventDateInfo eventStartDateInfo = 46;</code>
     */
    protected $eventStartDateInfo = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $artistIds
     *           The Apple ID(s) for the artists featuring in an event. If the ID is not known or provided for a given artist, the ID can be found in the iTunes share URL.
     *     @type string $awayTeamAbbreviation
     *           On tickets leveraging the team sports template, the logo text is hardcoded to be HOME TEAM ABBREVIATION vs AWAY TEAM ABBREVIATION. The abbreviations are fetched from the homeTeamAbbreviation and awayTeamAbbreviation semantic tags respectively.
     *     @type \Io\LocalizedString $localizedAwayTeamAbbreviation
     *     @type string $awayTeamLocation
     *           The home location of the away team. Use this key only for a sports event ticket.
     *     @type \Io\LocalizedString $localizedAwayTeamLocation
     *     @type string $awayTeamName
     *           The name of the away team. Use this key only for a sports event ticket.
     *     @type \Io\LocalizedString $localizedAwayTeamName
     *     @type \Google\Protobuf\Timestamp $eventEndDate
     *           The date and time the event ends. Use this key for any type of event ticket. If not provided, the end date value from the event object will be used.
     *     @type string $eventName
     *           The full name of the event, such as the title of a movie. Use this key for any type of event ticket.  Use if the event name requires localization, otherwise the production name will be used.
     *     @type \Io\LocalizedString $localizedEventName
     *     @type \Google\Protobuf\Timestamp $eventStartDate
     *            // The date and time the event starts. Use this key for any type of event ticket. If not provided, the scheduled or actual start date value from the event object will be used.
     *     @type string $genre
     *           The genre of the performance, such as “Classical”. Use this key for any type of event ticket.
     *     @type \Io\LocalizedString $localizedGenre
     *     @type string $homeTeamAbbreviation
     *           On tickets leveraging the team sports template, the logo text is hardcoded to be HOME TEAM ABBREVIATION vs AWAY TEAM ABBREVIATION. The abbreviations are fetched from the homeTeamAbbreviation and awayTeamAbbreviation semantic tags respectively.
     *     @type \Io\LocalizedString $localizedHomeTeamAbbreviation
     *     @type string $homeTeamLocation
     *           The home location of the home team. Use this key only for a sports event ticket.
     *     @type \Io\LocalizedString $localizedHomeTeamLocation
     *     @type string $homeTeamName
     *           The name of the home team. Use this key only for a sports event ticket.
     *     @type \Io\LocalizedString $localizedHomeTeamName
     *     @type string $leagueAbbreviation
     *           The abbreviated league name for a sports event. Use this key only for a sports event ticket.
     *     @type \Io\LocalizedString $localizedLeagueAbbreviation
     *     @type string $leagueName
     *           The full league name for a sports event. Use this key only for a sports event ticket.
     *     @type \Io\LocalizedString $localizedLeagueName
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $performerNames
     *           An array of the full names of the performers and opening acts at the event, in decreasing order of significance.
     *     @type bool $silenceRequested
     *           A Boolean value that determines whether the user’s device remains silent during an event or transit journey. The system may override the key and determine the length of the period of silence.
     *     @type string $sportName
     *           The commonly used name of the sport. Use this key only for a sports event ticket.
     *     @type \Io\LocalizedString $localizedSportName
     *     @type \Io\SemanticLocation $venueLocation
     *           An object that represents the geographic coordinates of the venue.
     *     @type string $venuePhoneNumber
     *           The phone number for enquiries about the venue’s ticketed event.
     *     @type string $venueRoom
     *           The full name of the room where the ticketed event is to take place. If a room is provided in the seat information, this value will be overwritten.
     *     @type \Io\LocalizedString $localizedVenueRoom
     *     @type array<\Io\SemanticWifiNetwork>|\Google\Protobuf\Internal\RepeatedField $wifiAccess
     *           An array of objects that represent the WiFi networks associated with the event; for example, the network name and password associated with a developer conference.
     *     @type string $venueRegionName
     *           The name of the city or hosting region of the venue.
     *     @type \Io\LocalizedString $localizedVenueRegionName
     *     @type bool $tailgatingAllowed
     *           Boolean value indicating that whether tailgating is allowed at the venue.
     *     @type string $entranceDescription
     *           Details of the entrance if further information is required.
     *     @type \Io\LocalizedString $localizedEntranceDescription
     *     @type \Google\Protobuf\Timestamp $venueGatesOpenDate
     *           Time the gates to the venue open.
     *     @type \Google\Protobuf\Timestamp $venueFanZoneOpenDate
     *           Time the fan zone opens.
     *     @type \Google\Protobuf\Timestamp $venueParkingLotsOpenDate
     *           Time the parking lots open.
     *     @type \Google\Protobuf\Timestamp $venueBoxOfficeOpenDate
     *           Time when the box office opens.
     *     @type \Google\Protobuf\Timestamp $venueOpenDate
     *           Time when the venue opens. Use if none of the more specific values above apply.
     *     @type \Google\Protobuf\Timestamp $venueCloseDate
     *           Time when the venue closes.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $playlistIds
     *           The Apple ID(s) for playlists applicable to the event. If the ID is not known or provided for a given playlist, the ID can be found in the iTunes share URL.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $albumIds
     *           The Apple ID(s) for the albums for artists featuring in an event. If the ID is not known or provided for a given album, the ID can be found in the iTunes share URL.
     *     @type \Io\SemanticEventDateInfo $eventStartDateInfo
     *           Additional information for the start date of the event.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Common\Semantics::initOnce();
        parent::__construct($data);
    }

    /**
     * The Apple ID(s) for the artists featuring in an event. If the ID is not known or provided for a given artist, the ID can be found in the iTunes share URL.
     *
     * Generated from protobuf field <code>repeated string artistIds = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getArtistIds()
    {
        return $this->artistIds;
    }

    /**
     * The Apple ID(s) for the artists featuring in an event. If the ID is not known or provided for a given artist, the ID can be found in the iTunes share URL.
     *
     * Generated from protobuf field <code>repeated string artistIds = 1;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setArtistIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->artistIds = $arr;

        return $this;
    }

    /**
     * On tickets leveraging the team sports template, the logo text is hardcoded to be HOME TEAM ABBREVIATION vs AWAY TEAM ABBREVIATION. The abbreviations are fetched from the homeTeamAbbreviation and awayTeamAbbreviation semantic tags respectively.
     *
     * Generated from protobuf field <code>string awayTeamAbbreviation = 2;</code>
     * @return string
     */
    public function getAwayTeamAbbreviation()
    {
        return $this->awayTeamAbbreviation;
    }

    /**
     * On tickets leveraging the team sports template, the logo text is hardcoded to be HOME TEAM ABBREVIATION vs AWAY TEAM ABBREVIATION. The abbreviations are fetched from the homeTeamAbbreviation and awayTeamAbbreviation semantic tags respectively.
     *
     * Generated from protobuf field <code>string awayTeamAbbreviation = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setAwayTeamAbbreviation($var)
    {
        GPBUtil::checkString($var, True);
        $this->awayTeamAbbreviation = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedAwayTeamAbbreviation = 3;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedAwayTeamAbbreviation()
    {
        return $this->localizedAwayTeamAbbreviation;
    }

    public function hasLocalizedAwayTeamAbbreviation()
    {
        return isset($this->localizedAwayTeamAbbreviation);
    }

    public function clearLocalizedAwayTeamAbbreviation()
    {
        unset($this->localizedAwayTeamAbbreviation);
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedAwayTeamAbbreviation = 3;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedAwayTeamAbbreviation($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedAwayTeamAbbreviation = $var;

        return $this;
    }

    /**
     * The home location of the away team. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string awayTeamLocation = 4;</code>
     * @return string
     */
    public function getAwayTeamLocation()
    {
        return $this->awayTeamLocation;
    }

    /**
     * The home location of the away team. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string awayTeamLocation = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setAwayTeamLocation($var)
    {
        GPBUtil::checkString($var, True);
        $this->awayTeamLocation = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedAwayTeamLocation = 5;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedAwayTeamLocation()
    {
        return $this->localizedAwayTeamLocation;
    }

    public function hasLocalizedAwayTeamLocation()
    {
        return isset($this->localizedAwayTeamLocation);
    }

    public function clearLocalizedAwayTeamLocation()
    {
        unset($this->localizedAwayTeamLocation);
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedAwayTeamLocation = 5;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedAwayTeamLocation($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedAwayTeamLocation = $var;

        return $this;
    }

    /**
     * The name of the away team. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string awayTeamName = 6;</code>
     * @return string
     */
    public function getAwayTeamName()
    {
        return $this->awayTeamName;
    }

    /**
     * The name of the away team. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string awayTeamName = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setAwayTeamName($var)
    {
        GPBUtil::checkString($var, True);
        $this->awayTeamName = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedAwayTeamName = 7;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedAwayTeamName()
    {
        return $this->localizedAwayTeamName;
    }

    public function hasLocalizedAwayTeamName()
    {
        return isset($this->localizedAwayTeamName);
    }

    public function clearLocalizedAwayTeamName()
    {
        unset($this->localizedAwayTeamName);
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedAwayTeamName = 7;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedAwayTeamName($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedAwayTeamName = $var;

        return $this;
    }

    /**
     * The date and time the event ends. Use this key for any type of event ticket. If not provided, the end date value from the event object will be used.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp eventEndDate = 8;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getEventEndDate()
    {
        return $this->eventEndDate;
    }

    public function hasEventEndDate()
    {
        return isset($this->eventEndDate);
    }

    public function clearEventEndDate()
    {
        unset($this->eventEndDate);
    }

    /**
     * The date and time the event ends. Use this key for any type of event ticket. If not provided, the end date value from the event object will be used.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp eventEndDate = 8;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setEventEndDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->eventEndDate = $var;

        return $this;
    }

    /**
     * The full name of the event, such as the title of a movie. Use this key for any type of event ticket.  Use if the event name requires localization, otherwise the production name will be used.
     *
     * Generated from protobuf field <code>string eventName = 9;</code>
     * @return string
     */
    public function getEventName()
    {
        return $this->eventName;
    }

    /**
     * The full name of the event, such as the title of a movie. Use this key for any type of event ticket.  Use if the event name requires localization, otherwise the production name will be used.
     *
     * Generated from protobuf field <code>string eventName = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setEventName($var)
    {
        GPBUtil::checkString($var, True);
        $this->eventName = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedEventName = 10;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedEventName()
    {
        return $this->localizedEventName;
    }

    public function hasLocalizedEventName()
    {
        return isset($this->localizedEventName);
    }

    public function clearLocalizedEventName()
    {
        unset($this->localizedEventName);
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedEventName = 10;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedEventName($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedEventName = $var;

        return $this;
    }

    /**
     *  // The date and time the event starts. Use this key for any type of event ticket. If not provided, the scheduled or actual start date value from the event object will be used.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp eventStartDate = 11;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getEventStartDate()
    {
        return $this->eventStartDate;
    }

    public function hasEventStartDate()
    {
        return isset($this->eventStartDate);
    }

    public function clearEventStartDate()
    {
        unset($this->eventStartDate);
    }

    /**
     *  // The date and time the event starts. Use this key for any type of event ticket. If not provided, the scheduled or actual start date value from the event object will be used.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp eventStartDate = 11;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setEventStartDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->eventStartDate = $var;

        return $this;
    }

    /**
     * The genre of the performance, such as “Classical”. Use this key for any type of event ticket.
     *
     * Generated from protobuf field <code>string genre = 12;</code>
     * @return string
     */
    public function getGenre()
    {
        return $this->genre;
    }

    /**
     * The genre of the performance, such as “Classical”. Use this key for any type of event ticket.
     *
     * Generated from protobuf field <code>string genre = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setGenre($var)
    {
        GPBUtil::checkString($var, True);
        $this->genre = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedGenre = 13;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedGenre()
    {
        return $this->localizedGenre;
    }

    public function hasLocalizedGenre()
    {
        return isset($this->localizedGenre);
    }

    public function clearLocalizedGenre()
    {
        unset($this->localizedGenre);
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedGenre = 13;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedGenre($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedGenre = $var;

        return $this;
    }

    /**
     * On tickets leveraging the team sports template, the logo text is hardcoded to be HOME TEAM ABBREVIATION vs AWAY TEAM ABBREVIATION. The abbreviations are fetched from the homeTeamAbbreviation and awayTeamAbbreviation semantic tags respectively.
     *
     * Generated from protobuf field <code>string homeTeamAbbreviation = 14;</code>
     * @return string
     */
    public function getHomeTeamAbbreviation()
    {
        return $this->homeTeamAbbreviation;
    }

    /**
     * On tickets leveraging the team sports template, the logo text is hardcoded to be HOME TEAM ABBREVIATION vs AWAY TEAM ABBREVIATION. The abbreviations are fetched from the homeTeamAbbreviation and awayTeamAbbreviation semantic tags respectively.
     *
     * Generated from protobuf field <code>string homeTeamAbbreviation = 14;</code>
     * @param string $var
     * @return $this
     */
    public function setHomeTeamAbbreviation($var)
    {
        GPBUtil::checkString($var, True);
        $this->homeTeamAbbreviation = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedHomeTeamAbbreviation = 15;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedHomeTeamAbbreviation()
    {
        return $this->localizedHomeTeamAbbreviation;
    }

    public function hasLocalizedHomeTeamAbbreviation()
    {
        return isset($this->localizedHomeTeamAbbreviation);
    }

    public function clearLocalizedHomeTeamAbbreviation()
    {
        unset($this->localizedHomeTeamAbbreviation);
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedHomeTeamAbbreviation = 15;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedHomeTeamAbbreviation($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedHomeTeamAbbreviation = $var;

        return $this;
    }

    /**
     * The home location of the home team. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string homeTeamLocation = 16;</code>
     * @return string
     */
    public function getHomeTeamLocation()
    {
        return $this->homeTeamLocation;
    }

    /**
     * The home location of the home team. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string homeTeamLocation = 16;</code>
     * @param string $var
     * @return $this
     */
    public function setHomeTeamLocation($var)
    {
        GPBUtil::checkString($var, True);
        $this->homeTeamLocation = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedHomeTeamLocation = 17;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedHomeTeamLocation()
    {
        return $this->localizedHomeTeamLocation;
    }

    public function hasLocalizedHomeTeamLocation()
    {
        return isset($this->localizedHomeTeamLocation);
    }

    public function clearLocalizedHomeTeamLocation()
    {
        unset($this->localizedHomeTeamLocation);
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedHomeTeamLocation = 17;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedHomeTeamLocation($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedHomeTeamLocation = $var;

        return $this;
    }

    /**
     * The name of the home team. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string homeTeamName = 18;</code>
     * @return string
     */
    public function getHomeTeamName()
    {
        return $this->homeTeamName;
    }

    /**
     * The name of the home team. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string homeTeamName = 18;</code>
     * @param string $var
     * @return $this
     */
    public function setHomeTeamName($var)
    {
        GPBUtil::checkString($var, True);
        $this->homeTeamName = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedHomeTeamName = 19;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedHomeTeamName()
    {
        return $this->localizedHomeTeamName;
    }

    public function hasLocalizedHomeTeamName()
    {
        return isset($this->localizedHomeTeamName);
    }

    public function clearLocalizedHomeTeamName()
    {
        unset($this->localizedHomeTeamName);
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedHomeTeamName = 19;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedHomeTeamName($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedHomeTeamName = $var;

        return $this;
    }

    /**
     * The abbreviated league name for a sports event. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string leagueAbbreviation = 20;</code>
     * @return string
     */
    public function getLeagueAbbreviation()
    {
        return $this->leagueAbbreviation;
    }

    /**
     * The abbreviated league name for a sports event. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string leagueAbbreviation = 20;</code>
     * @param string $var
     * @return $this
     */
    public function setLeagueAbbreviation($var)
    {
        GPBUtil::checkString($var, True);
        $this->leagueAbbreviation = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedLeagueAbbreviation = 21;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedLeagueAbbreviation()
    {
        return $this->localizedLeagueAbbreviation;
    }

    public function hasLocalizedLeagueAbbreviation()
    {
        return isset($this->localizedLeagueAbbreviation);
    }

    public function clearLocalizedLeagueAbbreviation()
    {
        unset($this->localizedLeagueAbbreviation);
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedLeagueAbbreviation = 21;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedLeagueAbbreviation($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedLeagueAbbreviation = $var;

        return $this;
    }

    /**
     * The full league name for a sports event. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string leagueName = 22;</code>
     * @return string
     */
    public function getLeagueName()
    {
        return $this->leagueName;
    }

    /**
     * The full league name for a sports event. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string leagueName = 22;</code>
     * @param string $var
     * @return $this
     */
    public function setLeagueName($var)
    {
        GPBUtil::checkString($var, True);
        $this->leagueName = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedLeagueName = 23;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedLeagueName()
    {
        return $this->localizedLeagueName;
    }

    public function hasLocalizedLeagueName()
    {
        return isset($this->localizedLeagueName);
    }

    public function clearLocalizedLeagueName()
    {
        unset($this->localizedLeagueName);
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedLeagueName = 23;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedLeagueName($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedLeagueName = $var;

        return $this;
    }

    /**
     * An array of the full names of the performers and opening acts at the event, in decreasing order of significance.
     *
     * Generated from protobuf field <code>repeated string performerNames = 24;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPerformerNames()
    {
        return $this->performerNames;
    }

    /**
     * An array of the full names of the performers and opening acts at the event, in decreasing order of significance.
     *
     * Generated from protobuf field <code>repeated string performerNames = 24;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPerformerNames($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->performerNames = $arr;

        return $this;
    }

    /**
     * A Boolean value that determines whether the user’s device remains silent during an event or transit journey. The system may override the key and determine the length of the period of silence.
     *
     * Generated from protobuf field <code>bool silenceRequested = 25;</code>
     * @return bool
     */
    public function getSilenceRequested()
    {
        return $this->silenceRequested;
    }

    /**
     * A Boolean value that determines whether the user’s device remains silent during an event or transit journey. The system may override the key and determine the length of the period of silence.
     *
     * Generated from protobuf field <code>bool silenceRequested = 25;</code>
     * @param bool $var
     * @return $this
     */
    public function setSilenceRequested($var)
    {
        GPBUtil::checkBool($var);
        $this->silenceRequested = $var;

        return $this;
    }

    /**
     * The commonly used name of the sport. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string sportName = 26;</code>
     * @return string
     */
    public function getSportName()
    {
        return $this->sportName;
    }

    /**
     * The commonly used name of the sport. Use this key only for a sports event ticket.
     *
     * Generated from protobuf field <code>string sportName = 26;</code>
     * @param string $var
     * @return $this
     */
    public function setSportName($var)
    {
        GPBUtil::checkString($var, True);
        $this->sportName = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedSportName = 27;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedSportName()
    {
        return $this->localizedSportName;
    }

    public function hasLocalizedSportName()
    {
        return isset($this->localizedSportName);
    }

    public function clearLocalizedSportName()
    {
        unset($this->localizedSportName);
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedSportName = 27;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedSportName($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedSportName = $var;

        return $this;
    }

    /**
     * An object that represents the geographic coordinates of the venue.
     *
     * Generated from protobuf field <code>.io.SemanticLocation venueLocation = 28;</code>
     * @return \Io\SemanticLocation|null
     */
    public function getVenueLocation()
    {
        return $this->venueLocation;
    }

    public function hasVenueLocation()
    {
        return isset($this->venueLocation);
    }

    public function clearVenueLocation()
    {
        unset($this->venueLocation);
    }

    /**
     * An object that represents the geographic coordinates of the venue.
     *
     * Generated from protobuf field <code>.io.SemanticLocation venueLocation = 28;</code>
     * @param \Io\SemanticLocation $var
     * @return $this
     */
    public function setVenueLocation($var)
    {
        GPBUtil::checkMessage($var, \Io\SemanticLocation::class);
        $this->venueLocation = $var;

        return $this;
    }

    /**
     * The phone number for enquiries about the venue’s ticketed event.
     *
     * Generated from protobuf field <code>string venuePhoneNumber = 29;</code>
     * @return string
     */
    public function getVenuePhoneNumber()
    {
        return $this->venuePhoneNumber;
    }

    /**
     * The phone number for enquiries about the venue’s ticketed event.
     *
     * Generated from protobuf field <code>string venuePhoneNumber = 29;</code>
     * @param string $var
     * @return $this
     */
    public function setVenuePhoneNumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->venuePhoneNumber = $var;

        return $this;
    }

    /**
     * The full name of the room where the ticketed event is to take place. If a room is provided in the seat information, this value will be overwritten.
     *
     * Generated from protobuf field <code>string venueRoom = 30;</code>
     * @return string
     */
    public function getVenueRoom()
    {
        return $this->venueRoom;
    }

    /**
     * The full name of the room where the ticketed event is to take place. If a room is provided in the seat information, this value will be overwritten.
     *
     * Generated from protobuf field <code>string venueRoom = 30;</code>
     * @param string $var
     * @return $this
     */
    public function setVenueRoom($var)
    {
        GPBUtil::checkString($var, True);
        $this->venueRoom = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedVenueRoom = 31;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedVenueRoom()
    {
        return $this->localizedVenueRoom;
    }

    public function hasLocalizedVenueRoom()
    {
        return isset($this->localizedVenueRoom);
    }

    public function clearLocalizedVenueRoom()
    {
        unset($this->localizedVenueRoom);
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedVenueRoom = 31;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedVenueRoom($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedVenueRoom = $var;

        return $this;
    }

    /**
     * An array of objects that represent the WiFi networks associated with the event; for example, the network name and password associated with a developer conference.
     *
     * Generated from protobuf field <code>repeated .io.SemanticWifiNetwork wifiAccess = 32;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getWifiAccess()
    {
        return $this->wifiAccess;
    }

    /**
     * An array of objects that represent the WiFi networks associated with the event; for example, the network name and password associated with a developer conference.
     *
     * Generated from protobuf field <code>repeated .io.SemanticWifiNetwork wifiAccess = 32;</code>
     * @param array<\Io\SemanticWifiNetwork>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setWifiAccess($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Io\SemanticWifiNetwork::class);
        $this->wifiAccess = $arr;

        return $this;
    }

    /**
     * The name of the city or hosting region of the venue.
     *
     * Generated from protobuf field <code>string venueRegionName = 33;</code>
     * @return string
     */
    public function getVenueRegionName()
    {
        return $this->venueRegionName;
    }

    /**
     * The name of the city or hosting region of the venue.
     *
     * Generated from protobuf field <code>string venueRegionName = 33;</code>
     * @param string $var
     * @return $this
     */
    public function setVenueRegionName($var)
    {
        GPBUtil::checkString($var, True);
        $this->venueRegionName = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedVenueRegionName = 34;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedVenueRegionName()
    {
        return $this->localizedVenueRegionName;
    }

    public function hasLocalizedVenueRegionName()
    {
        return isset($this->localizedVenueRegionName);
    }

    public function clearLocalizedVenueRegionName()
    {
        unset($this->localizedVenueRegionName);
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedVenueRegionName = 34;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedVenueRegionName($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedVenueRegionName = $var;

        return $this;
    }

    /**
     * Boolean value indicating that whether tailgating is allowed at the venue.
     *
     * Generated from protobuf field <code>bool tailgatingAllowed = 35;</code>
     * @return bool
     */
    public function getTailgatingAllowed()
    {
        return $this->tailgatingAllowed;
    }

    /**
     * Boolean value indicating that whether tailgating is allowed at the venue.
     *
     * Generated from protobuf field <code>bool tailgatingAllowed = 35;</code>
     * @param bool $var
     * @return $this
     */
    public function setTailgatingAllowed($var)
    {
        GPBUtil::checkBool($var);
        $this->tailgatingAllowed = $var;

        return $this;
    }

    /**
     * Details of the entrance if further information is required.
     *
     * Generated from protobuf field <code>string entranceDescription = 36;</code>
     * @return string
     */
    public function getEntranceDescription()
    {
        return $this->entranceDescription;
    }

    /**
     * Details of the entrance if further information is required.
     *
     * Generated from protobuf field <code>string entranceDescription = 36;</code>
     * @param string $var
     * @return $this
     */
    public function setEntranceDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->entranceDescription = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedEntranceDescription = 37;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedEntranceDescription()
    {
        return $this->localizedEntranceDescription;
    }

    public function hasLocalizedEntranceDescription()
    {
        return isset($this->localizedEntranceDescription);
    }

    public function clearLocalizedEntranceDescription()
    {
        unset($this->localizedEntranceDescription);
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedEntranceDescription = 37;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedEntranceDescription($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedEntranceDescription = $var;

        return $this;
    }

    /**
     * Time the gates to the venue open.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueGatesOpenDate = 38;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getVenueGatesOpenDate()
    {
        return $this->venueGatesOpenDate;
    }

    public function hasVenueGatesOpenDate()
    {
        return isset($this->venueGatesOpenDate);
    }

    public function clearVenueGatesOpenDate()
    {
        unset($this->venueGatesOpenDate);
    }

    /**
     * Time the gates to the venue open.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueGatesOpenDate = 38;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setVenueGatesOpenDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->venueGatesOpenDate = $var;

        return $this;
    }

    /**
     * Time the fan zone opens.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueFanZoneOpenDate = 39;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getVenueFanZoneOpenDate()
    {
        return $this->venueFanZoneOpenDate;
    }

    public function hasVenueFanZoneOpenDate()
    {
        return isset($this->venueFanZoneOpenDate);
    }

    public function clearVenueFanZoneOpenDate()
    {
        unset($this->venueFanZoneOpenDate);
    }

    /**
     * Time the fan zone opens.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueFanZoneOpenDate = 39;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setVenueFanZoneOpenDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->venueFanZoneOpenDate = $var;

        return $this;
    }

    /**
     * Time the parking lots open.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueParkingLotsOpenDate = 40;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getVenueParkingLotsOpenDate()
    {
        return $this->venueParkingLotsOpenDate;
    }

    public function hasVenueParkingLotsOpenDate()
    {
        return isset($this->venueParkingLotsOpenDate);
    }

    public function clearVenueParkingLotsOpenDate()
    {
        unset($this->venueParkingLotsOpenDate);
    }

    /**
     * Time the parking lots open.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueParkingLotsOpenDate = 40;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setVenueParkingLotsOpenDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->venueParkingLotsOpenDate = $var;

        return $this;
    }

    /**
     * Time when the box office opens.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueBoxOfficeOpenDate = 41;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getVenueBoxOfficeOpenDate()
    {
        return $this->venueBoxOfficeOpenDate;
    }

    public function hasVenueBoxOfficeOpenDate()
    {
        return isset($this->venueBoxOfficeOpenDate);
    }

    public function clearVenueBoxOfficeOpenDate()
    {
        unset($this->venueBoxOfficeOpenDate);
    }

    /**
     * Time when the box office opens.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueBoxOfficeOpenDate = 41;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setVenueBoxOfficeOpenDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->venueBoxOfficeOpenDate = $var;

        return $this;
    }

    /**
     * Time when the venue opens. Use if none of the more specific values above apply.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueOpenDate = 42;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getVenueOpenDate()
    {
        return $this->venueOpenDate;
    }

    public function hasVenueOpenDate()
    {
        return isset($this->venueOpenDate);
    }

    public function clearVenueOpenDate()
    {
        unset($this->venueOpenDate);
    }

    /**
     * Time when the venue opens. Use if none of the more specific values above apply.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueOpenDate = 42;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setVenueOpenDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->venueOpenDate = $var;

        return $this;
    }

    /**
     * Time when the venue closes.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueCloseDate = 43;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getVenueCloseDate()
    {
        return $this->venueCloseDate;
    }

    public function hasVenueCloseDate()
    {
        return isset($this->venueCloseDate);
    }

    public function clearVenueCloseDate()
    {
        unset($this->venueCloseDate);
    }

    /**
     * Time when the venue closes.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp venueCloseDate = 43;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setVenueCloseDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->venueCloseDate = $var;

        return $this;
    }

    /**
     * The Apple ID(s) for playlists applicable to the event. If the ID is not known or provided for a given playlist, the ID can be found in the iTunes share URL.
     *
     * Generated from protobuf field <code>repeated string playlistIds = 44;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPlaylistIds()
    {
        return $this->playlistIds;
    }

    /**
     * The Apple ID(s) for playlists applicable to the event. If the ID is not known or provided for a given playlist, the ID can be found in the iTunes share URL.
     *
     * Generated from protobuf field <code>repeated string playlistIds = 44;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPlaylistIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->playlistIds = $arr;

        return $this;
    }

    /**
     * The Apple ID(s) for the albums for artists featuring in an event. If the ID is not known or provided for a given album, the ID can be found in the iTunes share URL.
     *
     * Generated from protobuf field <code>repeated string albumIds = 45;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAlbumIds()
    {
        return $this->albumIds;
    }

    /**
     * The Apple ID(s) for the albums for artists featuring in an event. If the ID is not known or provided for a given album, the ID can be found in the iTunes share URL.
     *
     * Generated from protobuf field <code>repeated string albumIds = 45;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAlbumIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->albumIds = $arr;

        return $this;
    }

    /**
     * Additional information for the start date of the event.
     *
     * Generated from protobuf field <code>.io.SemanticEventDateInfo eventStartDateInfo = 46;</code>
     * @return \Io\SemanticEventDateInfo|null
     */
    public function getEventStartDateInfo()
    {
        return $this->eventStartDateInfo;
    }

    public function hasEventStartDateInfo()
    {
        return isset($this->eventStartDateInfo);
    }

    public function clearEventStartDateInfo()
    {
        unset($this->eventStartDateInfo);
    }

    /**
     * Additional information for the start date of the event.
     *
     * Generated from protobuf field <code>.io.SemanticEventDateInfo eventStartDateInfo = 46;</code>
     * @param \Io\SemanticEventDateInfo $var
     * @return $this
     */
    public function setEventStartDateInfo($var)
    {
        GPBUtil::checkMessage($var, \Io\SemanticEventDateInfo::class);
        $this->eventStartDateInfo = $var;

        return $this;
    }

}

