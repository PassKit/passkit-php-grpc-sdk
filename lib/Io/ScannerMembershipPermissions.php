<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: io/user/user.proto

namespace Io;

use UnexpectedValueException;

/**
 * ScannerMembershipPermissions enum determines what membership related actions a user can perform in the scanning app.
 *
 * Protobuf type <code>io.ScannerMembershipPermissions</code>
 */
class ScannerMembershipPermissions
{
    /**
     * Zero based enum, don't use 0.
     *
     * Generated from protobuf enum <code>MEMBERSHIP_PERMISSION_NONE = 0;</code>
     */
    const MEMBERSHIP_PERMISSION_NONE = 0;
    /**
     * Set for users who can view all details about a member.
     *
     * Generated from protobuf enum <code>MEMBERSHIP_PERMISSION_VIEW_MEMBER = 1;</code>
     */
    const MEMBERSHIP_PERMISSION_VIEW_MEMBER = 1;
    /**
     * Set for users who can edit details about a member.
     *
     * Generated from protobuf enum <code>MEMBERSHIP_PERMISSION_EDIT_MEMBER = 2;</code>
     */
    const MEMBERSHIP_PERMISSION_EDIT_MEMBER = 2;
    /**
     * Set for users who can give points to a member.
     *
     * Generated from protobuf enum <code>MEMBERSHIP_PERMISSION_EARN_POINTS = 4;</code>
     */
    const MEMBERSHIP_PERMISSION_EARN_POINTS = 4;
    /**
     * Set for users who can subtract points from a member.
     *
     * Generated from protobuf enum <code>MEMBERSHIP_PERMISSION_BURN_POINTS = 8;</code>
     */
    const MEMBERSHIP_PERMISSION_BURN_POINTS = 8;
    /**
     * Set for users who can set a members points to a specific value.
     *
     * Generated from protobuf enum <code>MEMBERSHIP_PERMISSION_SET_POINTS = 16;</code>
     */
    const MEMBERSHIP_PERMISSION_SET_POINTS = 16;
    /**
     * Set for users who can change a members tier.
     *
     * Generated from protobuf enum <code>MEMBERSHIP_PERMISSION_CHANGE_TIER = 32;</code>
     */
    const MEMBERSHIP_PERMISSION_CHANGE_TIER = 32;
    /**
     * Set for users who can view previous events the member has committed.
     *
     * Generated from protobuf enum <code>MEMBERSHIP_PERMISSION_VIEW_EVENTS = 64;</code>
     */
    const MEMBERSHIP_PERMISSION_VIEW_EVENTS = 64;
    /**
     * Set for users who can change the expiry date of a member.
     *
     * Generated from protobuf enum <code>MEMBERSHIP_PERMISSION_CHANGE_EXPIRY = 128;</code>
     */
    const MEMBERSHIP_PERMISSION_CHANGE_EXPIRY = 128;
    /**
     * Set for users who can check members in and out.
     *
     * Generated from protobuf enum <code>MEMBERSHIP_PERMISSION_CHECK_IN_OUT = 256;</code>
     */
    const MEMBERSHIP_PERMISSION_CHECK_IN_OUT = 256;
    /**
     * Set for users who can verify a members status.
     *
     * Generated from protobuf enum <code>MEMBERSHIP_PERMISSION_VALIDATE = 512;</code>
     */
    const MEMBERSHIP_PERMISSION_VALIDATE = 512;

    private static $valueToName = [
        self::MEMBERSHIP_PERMISSION_NONE => 'MEMBERSHIP_PERMISSION_NONE',
        self::MEMBERSHIP_PERMISSION_VIEW_MEMBER => 'MEMBERSHIP_PERMISSION_VIEW_MEMBER',
        self::MEMBERSHIP_PERMISSION_EDIT_MEMBER => 'MEMBERSHIP_PERMISSION_EDIT_MEMBER',
        self::MEMBERSHIP_PERMISSION_EARN_POINTS => 'MEMBERSHIP_PERMISSION_EARN_POINTS',
        self::MEMBERSHIP_PERMISSION_BURN_POINTS => 'MEMBERSHIP_PERMISSION_BURN_POINTS',
        self::MEMBERSHIP_PERMISSION_SET_POINTS => 'MEMBERSHIP_PERMISSION_SET_POINTS',
        self::MEMBERSHIP_PERMISSION_CHANGE_TIER => 'MEMBERSHIP_PERMISSION_CHANGE_TIER',
        self::MEMBERSHIP_PERMISSION_VIEW_EVENTS => 'MEMBERSHIP_PERMISSION_VIEW_EVENTS',
        self::MEMBERSHIP_PERMISSION_CHANGE_EXPIRY => 'MEMBERSHIP_PERMISSION_CHANGE_EXPIRY',
        self::MEMBERSHIP_PERMISSION_CHECK_IN_OUT => 'MEMBERSHIP_PERMISSION_CHECK_IN_OUT',
        self::MEMBERSHIP_PERMISSION_VALIDATE => 'MEMBERSHIP_PERMISSION_VALIDATE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

