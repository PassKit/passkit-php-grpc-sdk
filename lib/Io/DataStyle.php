<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/common/template.proto

namespace Io;

use UnexpectedValueException;

/**
 * Data style controls how value will be rendered on the pass.
 *
 * Protobuf type <code>io.DataStyle</code>
 */
class DataStyle
{
    /**
     * Generated from protobuf enum <code>NO_STYLE = 0;</code>
     */
    const NO_STYLE = 0;
    /**
     * Date containing year, month and date. Numeric only (e.g. 11/23/37).
     *
     * Generated from protobuf enum <code>DATE_SHORT = 1;</code>
     */
    const DATE_SHORT = 1;
    /**
     * Date containing year, month and date. With abbreviated text (e.g. Nov 23, 1937).
     *
     * Generated from protobuf enum <code>DATE_MEDIUM = 2;</code>
     */
    const DATE_MEDIUM = 2;
    /**
     * Date containing year, month and date. With full text (e.g. November 23, 1937).
     *
     * Generated from protobuf enum <code>DATE_LONG = 3;</code>
     */
    const DATE_LONG = 3;
    /**
     * Date containing year, month and date. With complete details (e.g. Tuesday, April 12, 1952 AD).
     *
     * Generated from protobuf enum <code>DATE_FULL = 4;</code>
     */
    const DATE_FULL = 4;
    /**
     * Date containing year, month and date. Numeric only (e.g. 3:30 PM).
     *
     * Generated from protobuf enum <code>TIME_SHORT = 5;</code>
     */
    const TIME_SHORT = 5;
    /**
     * Date containing year, month and date. With abbreviated text (e.g. 3:30:32 PM).
     *
     * Generated from protobuf enum <code>TIME_MEDIUM = 6;</code>
     */
    const TIME_MEDIUM = 6;
    /**
     * Date containing year, month and date. With full text (e.g. 3:30:32 PM PST).
     *
     * Generated from protobuf enum <code>TIME_LONG = 7;</code>
     */
    const TIME_LONG = 7;
    /**
     * Date containing year, month and date. With complete details (e.g. 3:30:42 PM Pacific Standard Time).
     *
     * Generated from protobuf enum <code>TIME_FULL = 8;</code>
     */
    const TIME_FULL = 8;
    /**
     * Date containing year, month and date. Numeric only (e.g. 11/23/37 3:30 PM).
     *
     * Generated from protobuf enum <code>DATE_TIME_SHORT = 9;</code>
     */
    const DATE_TIME_SHORT = 9;
    /**
     * Date containing year, month and date. With abbreviated text (e.g. Nov 23, 1937 3:30:32 PM).
     *
     * Generated from protobuf enum <code>DATE_TIME_MEDIUM = 10;</code>
     */
    const DATE_TIME_MEDIUM = 10;
    /**
     * Date containing year, month and date. With full text (e.g. November 23, 1937 3:30:32 PM PST).
     *
     * Generated from protobuf enum <code>DATE_TIME_LONG = 11;</code>
     */
    const DATE_TIME_LONG = 11;
    /**
     * Date containing year, month and date. With complete details (e.g. Tuesday, April 12, 1952 AD 3:30:42 PM Pacific Standard Time).
     *
     * Generated from protobuf enum <code>DATE_TIME_FULL = 12;</code>
     */
    const DATE_TIME_FULL = 12;
    /**
     * Generated from protobuf enum <code>NUMBER_DECIMAL = 13;</code>
     */
    const NUMBER_DECIMAL = 13;

    private static $valueToName = [
        self::NO_STYLE => 'NO_STYLE',
        self::DATE_SHORT => 'DATE_SHORT',
        self::DATE_MEDIUM => 'DATE_MEDIUM',
        self::DATE_LONG => 'DATE_LONG',
        self::DATE_FULL => 'DATE_FULL',
        self::TIME_SHORT => 'TIME_SHORT',
        self::TIME_MEDIUM => 'TIME_MEDIUM',
        self::TIME_LONG => 'TIME_LONG',
        self::TIME_FULL => 'TIME_FULL',
        self::DATE_TIME_SHORT => 'DATE_TIME_SHORT',
        self::DATE_TIME_MEDIUM => 'DATE_TIME_MEDIUM',
        self::DATE_TIME_LONG => 'DATE_TIME_LONG',
        self::DATE_TIME_FULL => 'DATE_TIME_FULL',
        self::NUMBER_DECIMAL => 'NUMBER_DECIMAL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

