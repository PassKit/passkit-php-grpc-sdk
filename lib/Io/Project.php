<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/common/project.proto

namespace Io;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>io.Project</code>
 */
class Project extends \Google\Protobuf\Internal\Message
{
    /**
     * The PassProtocol the project implements.
     *
     * Generated from protobuf field <code>.io.PassProtocol protocol = 1;</code>
     */
    protected $protocol = 0;
    /**
     * The class ID that the projects refers to (highest level protocol object; i.e. member program id, coupon campaign id, etc).
     *
     * Generated from protobuf field <code>string classId = 2;</code>
     */
    protected $classId = '';
    /**
     * The project name.
     *
     * Generated from protobuf field <code>string name = 3;</code>
     */
    protected $name = '';
    /**
     * The project short-code; used for creating public project URL's.
     *
     * Generated from protobuf field <code>string shortCode = 4;</code>
     */
    protected $shortCode = '';
    /**
     * The timestamp when the project was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 5;</code>
     */
    protected $created = null;
    /**
     * A shared secret used for creating signed links.
     *
     * Generated from protobuf field <code>string secret = 6;</code>
     */
    protected $secret = '';
    /**
     * A key used to create encrypted, signed links.
     *
     * Generated from protobuf field <code>string key = 7;</code>
     */
    protected $key = '';
    /**
     * Encrypted class ID. Can be used in integrations where the Class ID needs to be publicly exposed.
     *
     * Generated from protobuf field <code>string encryptedClassId = 9;</code>
     */
    protected $encryptedClassId = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $protocol
     *           The PassProtocol the project implements.
     *     @type string $classId
     *           The class ID that the projects refers to (highest level protocol object; i.e. member program id, coupon campaign id, etc).
     *     @type string $name
     *           The project name.
     *     @type string $shortCode
     *           The project short-code; used for creating public project URL's.
     *     @type \Google\Protobuf\Timestamp $created
     *           The timestamp when the project was created.
     *     @type string $secret
     *           A shared secret used for creating signed links.
     *     @type string $key
     *           A key used to create encrypted, signed links.
     *     @type string $encryptedClassId
     *           Encrypted class ID. Can be used in integrations where the Class ID needs to be publicly exposed.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Common\Project::initOnce();
        parent::__construct($data);
    }

    /**
     * The PassProtocol the project implements.
     *
     * Generated from protobuf field <code>.io.PassProtocol protocol = 1;</code>
     * @return int
     */
    public function getProtocol()
    {
        return $this->protocol;
    }

    /**
     * The PassProtocol the project implements.
     *
     * Generated from protobuf field <code>.io.PassProtocol protocol = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setProtocol($var)
    {
        GPBUtil::checkEnum($var, \Io\PassProtocol::class);
        $this->protocol = $var;

        return $this;
    }

    /**
     * The class ID that the projects refers to (highest level protocol object; i.e. member program id, coupon campaign id, etc).
     *
     * Generated from protobuf field <code>string classId = 2;</code>
     * @return string
     */
    public function getClassId()
    {
        return $this->classId;
    }

    /**
     * The class ID that the projects refers to (highest level protocol object; i.e. member program id, coupon campaign id, etc).
     *
     * Generated from protobuf field <code>string classId = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setClassId($var)
    {
        GPBUtil::checkString($var, True);
        $this->classId = $var;

        return $this;
    }

    /**
     * The project name.
     *
     * Generated from protobuf field <code>string name = 3;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * The project name.
     *
     * Generated from protobuf field <code>string name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * The project short-code; used for creating public project URL's.
     *
     * Generated from protobuf field <code>string shortCode = 4;</code>
     * @return string
     */
    public function getShortCode()
    {
        return $this->shortCode;
    }

    /**
     * The project short-code; used for creating public project URL's.
     *
     * Generated from protobuf field <code>string shortCode = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setShortCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->shortCode = $var;

        return $this;
    }

    /**
     * The timestamp when the project was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 5;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreated()
    {
        return isset($this->created) ? $this->created : null;
    }

    public function hasCreated()
    {
        return isset($this->created);
    }

    public function clearCreated()
    {
        unset($this->created);
    }

    /**
     * The timestamp when the project was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 5;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreated($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->created = $var;

        return $this;
    }

    /**
     * A shared secret used for creating signed links.
     *
     * Generated from protobuf field <code>string secret = 6;</code>
     * @return string
     */
    public function getSecret()
    {
        return $this->secret;
    }

    /**
     * A shared secret used for creating signed links.
     *
     * Generated from protobuf field <code>string secret = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setSecret($var)
    {
        GPBUtil::checkString($var, True);
        $this->secret = $var;

        return $this;
    }

    /**
     * A key used to create encrypted, signed links.
     *
     * Generated from protobuf field <code>string key = 7;</code>
     * @return string
     */
    public function getKey()
    {
        return $this->key;
    }

    /**
     * A key used to create encrypted, signed links.
     *
     * Generated from protobuf field <code>string key = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->key = $var;

        return $this;
    }

    /**
     * Encrypted class ID. Can be used in integrations where the Class ID needs to be publicly exposed.
     *
     * Generated from protobuf field <code>string encryptedClassId = 9;</code>
     * @return string
     */
    public function getEncryptedClassId()
    {
        return $this->encryptedClassId;
    }

    /**
     * Encrypted class ID. Can be used in integrations where the Class ID needs to be publicly exposed.
     *
     * Generated from protobuf field <code>string encryptedClassId = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setEncryptedClassId($var)
    {
        GPBUtil::checkString($var, True);
        $this->encryptedClassId = $var;

        return $this;
    }

}

