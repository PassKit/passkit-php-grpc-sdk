<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/common/distribution.proto

namespace Io;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>io.EmailConfiguration</code>
 */
class EmailConfiguration extends \Google\Protobuf\Internal\Message
{
    /**
     * Sender's email address.
     *
     * Generated from protobuf field <code>string emailFrom = 1;</code>
     */
    protected $emailFrom = '';
    /**
     * Sender's company / organization name.
     *
     * Generated from protobuf field <code>string emailFromName = 2;</code>
     */
    protected $emailFromName = '';
    /**
     * Indicates that PassKit is authorized to send from the emailFrom address (either via AWS or Google Cloud)
     *
     * Generated from protobuf field <code>bool EmailFromVerifiedForSending = 3;</code>
     */
    protected $EmailFromVerifiedForSending = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $emailFrom
     *           Sender's email address.
     *     @type string $emailFromName
     *           Sender's company / organization name.
     *     @type bool $EmailFromVerifiedForSending
     *           Indicates that PassKit is authorized to send from the emailFrom address (either via AWS or Google Cloud)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Common\Distribution::initOnce();
        parent::__construct($data);
    }

    /**
     * Sender's email address.
     *
     * Generated from protobuf field <code>string emailFrom = 1;</code>
     * @return string
     */
    public function getEmailFrom()
    {
        return $this->emailFrom;
    }

    /**
     * Sender's email address.
     *
     * Generated from protobuf field <code>string emailFrom = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setEmailFrom($var)
    {
        GPBUtil::checkString($var, True);
        $this->emailFrom = $var;

        return $this;
    }

    /**
     * Sender's company / organization name.
     *
     * Generated from protobuf field <code>string emailFromName = 2;</code>
     * @return string
     */
    public function getEmailFromName()
    {
        return $this->emailFromName;
    }

    /**
     * Sender's company / organization name.
     *
     * Generated from protobuf field <code>string emailFromName = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setEmailFromName($var)
    {
        GPBUtil::checkString($var, True);
        $this->emailFromName = $var;

        return $this;
    }

    /**
     * Indicates that PassKit is authorized to send from the emailFrom address (either via AWS or Google Cloud)
     *
     * Generated from protobuf field <code>bool EmailFromVerifiedForSending = 3;</code>
     * @return bool
     */
    public function getEmailFromVerifiedForSending()
    {
        return $this->EmailFromVerifiedForSending;
    }

    /**
     * Indicates that PassKit is authorized to send from the emailFrom address (either via AWS or Google Cloud)
     *
     * Generated from protobuf field <code>bool EmailFromVerifiedForSending = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setEmailFromVerifiedForSending($var)
    {
        GPBUtil::checkBool($var);
        $this->EmailFromVerifiedForSending = $var;

        return $this;
    }

}

