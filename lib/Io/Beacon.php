<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/common/proximity.proto

namespace Io;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Beacons allow you to display subtle messages to your users when they are in close proximity.
 *
 * Generated from protobuf message <code>io.Beacon</code>
 */
class Beacon extends \Google\Protobuf\Internal\Message
{
    /**
     * System generated unique identifier for your beacon
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * A valid UUID that is being broadcast from your beacon.
     *
     * Generated from protobuf field <code>string uuid = 2;</code>
     */
    protected $uuid = '';
    /**
     * A friendly name used to display the beacon in the admin portal
     *
     * Generated from protobuf field <code>string name = 3;</code>
     */
    protected $name = '';
    /**
     * Major indicator.
     *
     * Generated from protobuf field <code>uint32 major = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     */
    protected $major = 0;
    /**
     * Minor indicator.
     *
     * Generated from protobuf field <code>uint32 minor = 5 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     */
    protected $minor = 0;
    /**
     * Message to be displayed on lock screen when user is in proximity of the beacon (iOS only).
     *
     * Generated from protobuf field <code>string lockScreenMessage = 6;</code>
     */
    protected $lockScreenMessage = '';
    /**
     * Localized lock screen message.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedLockScreenMessage = 7;</code>
     */
    protected $localizedLockScreenMessage = null;
    /**
     * Beacons will be added in order of their position, from lowest to highest. Position can be any value, E.g. 3 Beacons with positions 30, 10, 20 would be added 10 first, 20 second and 30 third.  If no position is provided and the number of beacons exceeds 10, there is no guarantee which beacon(s) would be excluded from the pass.
     *
     * Generated from protobuf field <code>uint32 position = 8;</code>
     */
    protected $position = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           System generated unique identifier for your beacon
     *     @type string $uuid
     *           A valid UUID that is being broadcast from your beacon.
     *     @type string $name
     *           A friendly name used to display the beacon in the admin portal
     *     @type int $major
     *           Major indicator.
     *     @type int $minor
     *           Minor indicator.
     *     @type string $lockScreenMessage
     *           Message to be displayed on lock screen when user is in proximity of the beacon (iOS only).
     *     @type \Io\LocalizedString $localizedLockScreenMessage
     *           Localized lock screen message.
     *     @type int $position
     *           Beacons will be added in order of their position, from lowest to highest. Position can be any value, E.g. 3 Beacons with positions 30, 10, 20 would be added 10 first, 20 second and 30 third.  If no position is provided and the number of beacons exceeds 10, there is no guarantee which beacon(s) would be excluded from the pass.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Common\Proximity::initOnce();
        parent::__construct($data);
    }

    /**
     * System generated unique identifier for your beacon
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * System generated unique identifier for your beacon
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * A valid UUID that is being broadcast from your beacon.
     *
     * Generated from protobuf field <code>string uuid = 2;</code>
     * @return string
     */
    public function getUuid()
    {
        return $this->uuid;
    }

    /**
     * A valid UUID that is being broadcast from your beacon.
     *
     * Generated from protobuf field <code>string uuid = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setUuid($var)
    {
        GPBUtil::checkString($var, True);
        $this->uuid = $var;

        return $this;
    }

    /**
     * A friendly name used to display the beacon in the admin portal
     *
     * Generated from protobuf field <code>string name = 3;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * A friendly name used to display the beacon in the admin portal
     *
     * Generated from protobuf field <code>string name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Major indicator.
     *
     * Generated from protobuf field <code>uint32 major = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @return int
     */
    public function getMajor()
    {
        return $this->major;
    }

    /**
     * Major indicator.
     *
     * Generated from protobuf field <code>uint32 major = 4 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @param int $var
     * @return $this
     */
    public function setMajor($var)
    {
        GPBUtil::checkUint32($var);
        $this->major = $var;

        return $this;
    }

    /**
     * Minor indicator.
     *
     * Generated from protobuf field <code>uint32 minor = 5 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @return int
     */
    public function getMinor()
    {
        return $this->minor;
    }

    /**
     * Minor indicator.
     *
     * Generated from protobuf field <code>uint32 minor = 5 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {</code>
     * @param int $var
     * @return $this
     */
    public function setMinor($var)
    {
        GPBUtil::checkUint32($var);
        $this->minor = $var;

        return $this;
    }

    /**
     * Message to be displayed on lock screen when user is in proximity of the beacon (iOS only).
     *
     * Generated from protobuf field <code>string lockScreenMessage = 6;</code>
     * @return string
     */
    public function getLockScreenMessage()
    {
        return $this->lockScreenMessage;
    }

    /**
     * Message to be displayed on lock screen when user is in proximity of the beacon (iOS only).
     *
     * Generated from protobuf field <code>string lockScreenMessage = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setLockScreenMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->lockScreenMessage = $var;

        return $this;
    }

    /**
     * Localized lock screen message.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedLockScreenMessage = 7;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedLockScreenMessage()
    {
        return isset($this->localizedLockScreenMessage) ? $this->localizedLockScreenMessage : null;
    }

    public function hasLocalizedLockScreenMessage()
    {
        return isset($this->localizedLockScreenMessage);
    }

    public function clearLocalizedLockScreenMessage()
    {
        unset($this->localizedLockScreenMessage);
    }

    /**
     * Localized lock screen message.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedLockScreenMessage = 7;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedLockScreenMessage($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedLockScreenMessage = $var;

        return $this;
    }

    /**
     * Beacons will be added in order of their position, from lowest to highest. Position can be any value, E.g. 3 Beacons with positions 30, 10, 20 would be added 10 first, 20 second and 30 third.  If no position is provided and the number of beacons exceeds 10, there is no guarantee which beacon(s) would be excluded from the pass.
     *
     * Generated from protobuf field <code>uint32 position = 8;</code>
     * @return int
     */
    public function getPosition()
    {
        return $this->position;
    }

    /**
     * Beacons will be added in order of their position, from lowest to highest. Position can be any value, E.g. 3 Beacons with positions 30, 10, 20 would be added 10 first, 20 second and 30 third.  If no position is provided and the number of beacons exceeds 10, there is no guarantee which beacon(s) would be excluded from the pass.
     *
     * Generated from protobuf field <code>uint32 position = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setPosition($var)
    {
        GPBUtil::checkUint32($var);
        $this->position = $var;

        return $this;
    }

}

