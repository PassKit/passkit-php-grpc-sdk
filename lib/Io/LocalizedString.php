<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: io/common/localization.proto

namespace Io;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Localized strings are optionally used to provide translated values for each of supported language.
 *
 * Generated from protobuf message <code>io.LocalizedString</code>
 */
class LocalizedString extends \Google\Protobuf\Internal\Message
{
    /**
     * Translations key is a valid LanguageCode. The value represents the translated string.
     *
     * Generated from protobuf field <code>map<string, string> translations = 1;</code>
     */
    private $translations;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array|\Google\Protobuf\Internal\MapField $translations
     *           Translations key is a valid LanguageCode. The value represents the translated string.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Common\Localization::initOnce();
        parent::__construct($data);
    }

    /**
     * Translations key is a valid LanguageCode. The value represents the translated string.
     *
     * Generated from protobuf field <code>map<string, string> translations = 1;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getTranslations()
    {
        return $this->translations;
    }

    /**
     * Translations key is a valid LanguageCode. The value represents the translated string.
     *
     * Generated from protobuf field <code>map<string, string> translations = 1;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setTranslations($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->translations = $arr;

        return $this;
    }

}

