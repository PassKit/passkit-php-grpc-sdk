<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/common/metrics.proto

namespace Io;

use UnexpectedValueException;

/**
 * Status is the best determined status of the pass.
 *
 * Protobuf type <code>io.Status</code>
 */
class Status
{
    /**
     * Pass has been issued.
     *
     * Generated from protobuf enum <code>PASS_ISSUED = 0;</code>
     */
    const PASS_ISSUED = 0;
    /**
     * Pass has been installed in a wallet.
     *
     * Generated from protobuf enum <code>PASS_INSTALLED = 1;</code>
     */
    const PASS_INSTALLED = 1;
    /**
     * Pass has been uninstalled (possibly deleted) from a wallet.
     *
     * Generated from protobuf enum <code>PASS_UNINSTALLED = 2;</code>
     */
    const PASS_UNINSTALLED = 2;
    /**
     * Pass has been invalidated.
     *
     * Generated from protobuf enum <code>PASS_INVALIDATED = 3;</code>
     */
    const PASS_INVALIDATED = 3;

    private static $valueToName = [
        self::PASS_ISSUED => 'PASS_ISSUED',
        self::PASS_INSTALLED => 'PASS_INSTALLED',
        self::PASS_UNINSTALLED => 'PASS_UNINSTALLED',
        self::PASS_INVALIDATED => 'PASS_INVALIDATED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

