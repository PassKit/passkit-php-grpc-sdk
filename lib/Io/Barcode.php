<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/common/template.proto

namespace Io;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>io.Barcode</code>
 */
class Barcode extends \Google\Protobuf\Internal\Message
{
    /**
     * Data to be encoded into the barcode.
     *
     * Generated from protobuf field <code>string payload = 1;</code>
     */
    protected $payload = '';
    /**
     * Generated from protobuf field <code>.io.BarcodeType format = 2;</code>
     */
    protected $format = 0;
    /**
     * Text to display underneath the barcode.
     *
     * Generated from protobuf field <code>string altText = 3;</code>
     */
    protected $altText = '';
    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedAltText = 4;</code>
     */
    protected $localizedAltText = null;
    /**
     * Generated from protobuf field <code>string messageEncoding = 5;</code>
     */
    protected $messageEncoding = '';
    /**
     * Set to true if you do not wish Google Pay passes to display the security shimmer animation.
     *
     * Generated from protobuf field <code>bool suppressSecurity = 6;</code>
     */
    protected $suppressSecurity = false;
    /**
     * Set to true to enable TOTP rotating barcode support to Google Pay Passes.
     *
     * Generated from protobuf field <code>bool rotatingBarcode = 7;</code>
     */
    protected $rotatingBarcode = false;
    /**
     * Optional TOTP parameters. Note that if custom parameters are provided, the PassKit Pass Scanner App will not be able to validate the pass and the user will be responsible for implementing their own validation.
     *
     * Generated from protobuf field <code>.io.TOPTParameters totpParameters = 8;</code>
     */
    protected $totpParameters = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $payload
     *           Data to be encoded into the barcode.
     *     @type int $format
     *     @type string $altText
     *           Text to display underneath the barcode.
     *     @type \Io\LocalizedString $localizedAltText
     *     @type string $messageEncoding
     *     @type bool $suppressSecurity
     *           Set to true if you do not wish Google Pay passes to display the security shimmer animation.
     *     @type bool $rotatingBarcode
     *           Set to true to enable TOTP rotating barcode support to Google Pay Passes.
     *     @type \Io\TOPTParameters $totpParameters
     *           Optional TOTP parameters. Note that if custom parameters are provided, the PassKit Pass Scanner App will not be able to validate the pass and the user will be responsible for implementing their own validation.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Common\Template::initOnce();
        parent::__construct($data);
    }

    /**
     * Data to be encoded into the barcode.
     *
     * Generated from protobuf field <code>string payload = 1;</code>
     * @return string
     */
    public function getPayload()
    {
        return $this->payload;
    }

    /**
     * Data to be encoded into the barcode.
     *
     * Generated from protobuf field <code>string payload = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setPayload($var)
    {
        GPBUtil::checkString($var, True);
        $this->payload = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.BarcodeType format = 2;</code>
     * @return int
     */
    public function getFormat()
    {
        return $this->format;
    }

    /**
     * Generated from protobuf field <code>.io.BarcodeType format = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setFormat($var)
    {
        GPBUtil::checkEnum($var, \Io\BarcodeType::class);
        $this->format = $var;

        return $this;
    }

    /**
     * Text to display underneath the barcode.
     *
     * Generated from protobuf field <code>string altText = 3;</code>
     * @return string
     */
    public function getAltText()
    {
        return $this->altText;
    }

    /**
     * Text to display underneath the barcode.
     *
     * Generated from protobuf field <code>string altText = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setAltText($var)
    {
        GPBUtil::checkString($var, True);
        $this->altText = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedAltText = 4;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedAltText()
    {
        return $this->localizedAltText;
    }

    public function hasLocalizedAltText()
    {
        return isset($this->localizedAltText);
    }

    public function clearLocalizedAltText()
    {
        unset($this->localizedAltText);
    }

    /**
     * Generated from protobuf field <code>.io.LocalizedString localizedAltText = 4;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedAltText($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedAltText = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string messageEncoding = 5;</code>
     * @return string
     */
    public function getMessageEncoding()
    {
        return $this->messageEncoding;
    }

    /**
     * Generated from protobuf field <code>string messageEncoding = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setMessageEncoding($var)
    {
        GPBUtil::checkString($var, True);
        $this->messageEncoding = $var;

        return $this;
    }

    /**
     * Set to true if you do not wish Google Pay passes to display the security shimmer animation.
     *
     * Generated from protobuf field <code>bool suppressSecurity = 6;</code>
     * @return bool
     */
    public function getSuppressSecurity()
    {
        return $this->suppressSecurity;
    }

    /**
     * Set to true if you do not wish Google Pay passes to display the security shimmer animation.
     *
     * Generated from protobuf field <code>bool suppressSecurity = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setSuppressSecurity($var)
    {
        GPBUtil::checkBool($var);
        $this->suppressSecurity = $var;

        return $this;
    }

    /**
     * Set to true to enable TOTP rotating barcode support to Google Pay Passes.
     *
     * Generated from protobuf field <code>bool rotatingBarcode = 7;</code>
     * @return bool
     */
    public function getRotatingBarcode()
    {
        return $this->rotatingBarcode;
    }

    /**
     * Set to true to enable TOTP rotating barcode support to Google Pay Passes.
     *
     * Generated from protobuf field <code>bool rotatingBarcode = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setRotatingBarcode($var)
    {
        GPBUtil::checkBool($var);
        $this->rotatingBarcode = $var;

        return $this;
    }

    /**
     * Optional TOTP parameters. Note that if custom parameters are provided, the PassKit Pass Scanner App will not be able to validate the pass and the user will be responsible for implementing their own validation.
     *
     * Generated from protobuf field <code>.io.TOPTParameters totpParameters = 8;</code>
     * @return \Io\TOPTParameters|null
     */
    public function getTotpParameters()
    {
        return $this->totpParameters;
    }

    public function hasTotpParameters()
    {
        return isset($this->totpParameters);
    }

    public function clearTotpParameters()
    {
        unset($this->totpParameters);
    }

    /**
     * Optional TOTP parameters. Note that if custom parameters are provided, the PassKit Pass Scanner App will not be able to validate the pass and the user will be responsible for implementing their own validation.
     *
     * Generated from protobuf field <code>.io.TOPTParameters totpParameters = 8;</code>
     * @param \Io\TOPTParameters $var
     * @return $this
     */
    public function setTotpParameters($var)
    {
        GPBUtil::checkMessage($var, \Io\TOPTParameters::class);
        $this->totpParameters = $var;

        return $this;
    }

}

