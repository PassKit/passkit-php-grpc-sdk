<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/member/program.proto

namespace Members;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * PassRecoverySettings details the logic for recovering a pass.
 *
 * Generated from protobuf message <code>members.PassRecoverySettings</code>
 */
class PassRecoverySettings extends \Google\Protobuf\Internal\Message
{
    /**
     * Determines if users can recover passes.
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     */
    protected $enabled = false;
    /**
     * Determines the medium that the pass is delivered to the user.
     *
     * Generated from protobuf field <code>.members.RecoverPassDelivery delivery = 2;</code>
     */
    protected $delivery = 0;
    /**
     * The header text for the error page.
     *
     * Generated from protobuf field <code>string errorPageHeader = 3;</code>
     */
    protected $errorPageHeader = '';
    /**
     * The body text for the error page.
     *
     * Generated from protobuf field <code>string errorPageBody = 4;</code>
     */
    protected $errorPageBody = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $enabled
     *           Determines if users can recover passes.
     *     @type int $delivery
     *           Determines the medium that the pass is delivered to the user.
     *     @type string $errorPageHeader
     *           The header text for the error page.
     *     @type string $errorPageBody
     *           The body text for the error page.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Member\Program::initOnce();
        parent::__construct($data);
    }

    /**
     * Determines if users can recover passes.
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     * @return bool
     */
    public function getEnabled()
    {
        return $this->enabled;
    }

    /**
     * Determines if users can recover passes.
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->enabled = $var;

        return $this;
    }

    /**
     * Determines the medium that the pass is delivered to the user.
     *
     * Generated from protobuf field <code>.members.RecoverPassDelivery delivery = 2;</code>
     * @return int
     */
    public function getDelivery()
    {
        return $this->delivery;
    }

    /**
     * Determines the medium that the pass is delivered to the user.
     *
     * Generated from protobuf field <code>.members.RecoverPassDelivery delivery = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setDelivery($var)
    {
        GPBUtil::checkEnum($var, \Members\RecoverPassDelivery::class);
        $this->delivery = $var;

        return $this;
    }

    /**
     * The header text for the error page.
     *
     * Generated from protobuf field <code>string errorPageHeader = 3;</code>
     * @return string
     */
    public function getErrorPageHeader()
    {
        return $this->errorPageHeader;
    }

    /**
     * The header text for the error page.
     *
     * Generated from protobuf field <code>string errorPageHeader = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setErrorPageHeader($var)
    {
        GPBUtil::checkString($var, True);
        $this->errorPageHeader = $var;

        return $this;
    }

    /**
     * The body text for the error page.
     *
     * Generated from protobuf field <code>string errorPageBody = 4;</code>
     * @return string
     */
    public function getErrorPageBody()
    {
        return $this->errorPageBody;
    }

    /**
     * The body text for the error page.
     *
     * Generated from protobuf field <code>string errorPageBody = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setErrorPageBody($var)
    {
        GPBUtil::checkString($var, True);
        $this->errorPageBody = $var;

        return $this;
    }

}

