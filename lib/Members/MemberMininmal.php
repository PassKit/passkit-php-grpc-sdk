<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: io/member/member_events.proto

namespace Members;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>members.MemberMininmal</code>
 */
class MemberMininmal extends \Google\Protobuf\Internal\Message
{
    /**
     * Id assigned by PassKit to represent the member record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * This can be used to set the 'external' ID of the member (i.e. the member ID as it's being used in your system). If provided then this can be used to query & update members. This field will be treated as unique within the program, and cannot be updated at a later stage.
     *
     * Generated from protobuf field <code>string externalId = 2;</code>
     */
    protected $externalId = '';
    /**
     * Grouping Identifier can be used to group members under the same membership (i.e. couple).
     *
     * Generated from protobuf field <code>string groupingIdentifier = 3;</code>
     */
    protected $groupingIdentifier = '';
    /**
     * Indicates the ID of the tier this member is in.
     *
     * Generated from protobuf field <code>string tierId = 4;</code>
     */
    protected $tierId = '';
    /**
     * Indicates the ID of the program this member is in.
     *
     * Generated from protobuf field <code>string programId = 5;</code>
     */
    protected $programId = '';
    /**
     * Personal details of the member.
     *
     * Generated from protobuf field <code>.io.Person person = 6;</code>
     */
    protected $person = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           Id assigned by PassKit to represent the member record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
     *     @type string $externalId
     *           This can be used to set the 'external' ID of the member (i.e. the member ID as it's being used in your system). If provided then this can be used to query & update members. This field will be treated as unique within the program, and cannot be updated at a later stage.
     *     @type string $groupingIdentifier
     *           Grouping Identifier can be used to group members under the same membership (i.e. couple).
     *     @type string $tierId
     *           Indicates the ID of the tier this member is in.
     *     @type string $programId
     *           Indicates the ID of the program this member is in.
     *     @type \Io\Person $person
     *           Personal details of the member.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Member\MemberEvents::initOnce();
        parent::__construct($data);
    }

    /**
     * Id assigned by PassKit to represent the member record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Id assigned by PassKit to represent the member record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * This can be used to set the 'external' ID of the member (i.e. the member ID as it's being used in your system). If provided then this can be used to query & update members. This field will be treated as unique within the program, and cannot be updated at a later stage.
     *
     * Generated from protobuf field <code>string externalId = 2;</code>
     * @return string
     */
    public function getExternalId()
    {
        return $this->externalId;
    }

    /**
     * This can be used to set the 'external' ID of the member (i.e. the member ID as it's being used in your system). If provided then this can be used to query & update members. This field will be treated as unique within the program, and cannot be updated at a later stage.
     *
     * Generated from protobuf field <code>string externalId = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setExternalId($var)
    {
        GPBUtil::checkString($var, True);
        $this->externalId = $var;

        return $this;
    }

    /**
     * Grouping Identifier can be used to group members under the same membership (i.e. couple).
     *
     * Generated from protobuf field <code>string groupingIdentifier = 3;</code>
     * @return string
     */
    public function getGroupingIdentifier()
    {
        return $this->groupingIdentifier;
    }

    /**
     * Grouping Identifier can be used to group members under the same membership (i.e. couple).
     *
     * Generated from protobuf field <code>string groupingIdentifier = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setGroupingIdentifier($var)
    {
        GPBUtil::checkString($var, True);
        $this->groupingIdentifier = $var;

        return $this;
    }

    /**
     * Indicates the ID of the tier this member is in.
     *
     * Generated from protobuf field <code>string tierId = 4;</code>
     * @return string
     */
    public function getTierId()
    {
        return $this->tierId;
    }

    /**
     * Indicates the ID of the tier this member is in.
     *
     * Generated from protobuf field <code>string tierId = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setTierId($var)
    {
        GPBUtil::checkString($var, True);
        $this->tierId = $var;

        return $this;
    }

    /**
     * Indicates the ID of the program this member is in.
     *
     * Generated from protobuf field <code>string programId = 5;</code>
     * @return string
     */
    public function getProgramId()
    {
        return $this->programId;
    }

    /**
     * Indicates the ID of the program this member is in.
     *
     * Generated from protobuf field <code>string programId = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setProgramId($var)
    {
        GPBUtil::checkString($var, True);
        $this->programId = $var;

        return $this;
    }

    /**
     * Personal details of the member.
     *
     * Generated from protobuf field <code>.io.Person person = 6;</code>
     * @return \Io\Person|null
     */
    public function getPerson()
    {
        return $this->person;
    }

    public function hasPerson()
    {
        return isset($this->person);
    }

    public function clearPerson()
    {
        unset($this->person);
    }

    /**
     * Personal details of the member.
     *
     * Generated from protobuf field <code>.io.Person person = 6;</code>
     * @param \Io\Person $var
     * @return $this
     */
    public function setPerson($var)
    {
        GPBUtil::checkMessage($var, \Io\Person::class);
        $this->person = $var;

        return $this;
    }

}

