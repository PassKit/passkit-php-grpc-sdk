<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/member/program.proto

namespace Members;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The Program Details
 *
 * Generated from protobuf message <code>members.Program</code>
 */
class Program extends \Google\Protobuf\Internal\Message
{
    /**
     * PassKit generated program id (22 characters).
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * Name of the membership programs; will be shown on the enrolment page (if set) and issuer name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     */
    protected $name = '';
    /**
     * Localized name of the membership program.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedName = 3;</code>
     */
    protected $localizedName = null;
    /**
     * The program status (bitmask of ProjectStatus). Defaults to io.ProjectStatus.PROJECT_ACTIVE_FOR_OBJECT_CREATION + io.ProjectStatus.PROJECT_DRAFT.
     *
     * Generated from protobuf field <code>repeated .io.ProjectStatus status = 4;</code>
     */
    private $status;
    /**
     * The project quota.
     *
     * Generated from protobuf field <code>.io.Quota quota = 5;</code>
     */
    protected $quota = null;
    /**
     * Leave empty for draft programs. Needs to be set for programs where status contains PROJECT_PUBLISHED.
     *
     * Generated from protobuf field <code>string passTypeIdentifier = 6;</code>
     */
    protected $passTypeIdentifier = '';
    /**
     * Contains the email & sms distribution settings for the program.
     *
     * Generated from protobuf field <code>.io.DistributionSettings distributionSettings = 7;</code>
     */
    protected $distributionSettings = null;
    /**
     * Auto deletes the member after `autoDeleteDaysAfterExpiry` days.
     *
     * Generated from protobuf field <code>uint32 autoDeleteDaysAfterExpiry = 8;</code>
     */
    protected $autoDeleteDaysAfterExpiry = 0;
    /**
     * Sets how many days before expiry to send a reminder lockscreen message to the member.
     *
     * Generated from protobuf field <code>uint32 autoReminderDaysBeforeExpiry = 9;</code>
     */
    protected $autoReminderDaysBeforeExpiry = 0;
    /**
     * The message to send to the user `autoReminderDaysBeforeExpiry` days before expiry.
     *
     * Generated from protobuf field <code>string expiryMessage = 10;</code>
     */
    protected $expiryMessage = '';
    /**
     * Localized expiry message.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedExpiryMessage = 11;</code>
     */
    protected $localizedExpiryMessage = null;
    /**
     * Auto deletes the member `autoDeleteDaysAfterNotInstalling` days after the card has not been installed.
     *
     * Generated from protobuf field <code>uint32 autoDeleteDaysAfterNotInstalling = 12;</code>
     */
    protected $autoDeleteDaysAfterNotInstalling = 0;
    /**
     * Points format for primary points.
     *
     * Generated from protobuf field <code>.members.PointsType pointsType = 16;</code>
     */
    protected $pointsType = null;
    /**
     * Points format for secondary points.
     *
     * Generated from protobuf field <code>.members.PointsType secondaryPointsType = 17;</code>
     */
    protected $secondaryPointsType = null;
    /**
     * Issued, installed, uninstalled and invalidated counts. Metrics are not writable.
     *
     * Generated from protobuf field <code>.io.Metrics metrics = 19;</code>
     */
    protected $metrics = null;
    /**
     * A list of dynamic fields which can be used to filter members.
     *
     * Generated from protobuf field <code>repeated string metaFieldsList = 20;</code>
     */
    private $metaFieldsList;
    /**
     * The date the program was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 21;</code>
     */
    protected $created = null;
    /**
     * The date the program was updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 22;</code>
     */
    protected $updated = null;
    /**
     * Indicates if the program requires member profile images on enrol.
     *
     * Generated from protobuf field <code>.members.ProfileImageSetting profileImageSettings = 23;</code>
     */
    protected $profileImageSettings = 0;
    /**
     * Auto generate the external id from member object field. e.g. if you set person.emailAddress, then member's email address will be used as a value of external id.
     *
     * Generated from protobuf field <code>.members.CustomExternalId applyFieldToExternalIdOnEnrol = 24;</code>
     */
    protected $applyFieldToExternalIdOnEnrol = null;
    /**
     * Event settings for the program. Can be used if the program captures member events.
     *
     * Generated from protobuf field <code>.members.EventCaptureSettings eventCaptureSettings = 25;</code>
     */
    protected $eventCaptureSettings = null;
    /**
     * Settings for how users can recover passes.
     *
     * Generated from protobuf field <code>.members.PassRecoverySettings passRecoverySettings = 26;</code>
     */
    protected $passRecoverySettings = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           PassKit generated program id (22 characters).
     *     @type string $name
     *           Name of the membership programs; will be shown on the enrolment page (if set) and issuer name.
     *     @type \Io\LocalizedString $localizedName
     *           Localized name of the membership program.
     *     @type int[]|\Google\Protobuf\Internal\RepeatedField $status
     *           The program status (bitmask of ProjectStatus). Defaults to io.ProjectStatus.PROJECT_ACTIVE_FOR_OBJECT_CREATION + io.ProjectStatus.PROJECT_DRAFT.
     *     @type \Io\Quota $quota
     *           The project quota.
     *     @type string $passTypeIdentifier
     *           Leave empty for draft programs. Needs to be set for programs where status contains PROJECT_PUBLISHED.
     *     @type \Io\DistributionSettings $distributionSettings
     *           Contains the email & sms distribution settings for the program.
     *     @type int $autoDeleteDaysAfterExpiry
     *           Auto deletes the member after `autoDeleteDaysAfterExpiry` days.
     *     @type int $autoReminderDaysBeforeExpiry
     *           Sets how many days before expiry to send a reminder lockscreen message to the member.
     *     @type string $expiryMessage
     *           The message to send to the user `autoReminderDaysBeforeExpiry` days before expiry.
     *     @type \Io\LocalizedString $localizedExpiryMessage
     *           Localized expiry message.
     *     @type int $autoDeleteDaysAfterNotInstalling
     *           Auto deletes the member `autoDeleteDaysAfterNotInstalling` days after the card has not been installed.
     *     @type \Members\PointsType $pointsType
     *           Points format for primary points.
     *     @type \Members\PointsType $secondaryPointsType
     *           Points format for secondary points.
     *     @type \Io\Metrics $metrics
     *           Issued, installed, uninstalled and invalidated counts. Metrics are not writable.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $metaFieldsList
     *           A list of dynamic fields which can be used to filter members.
     *     @type \Google\Protobuf\Timestamp $created
     *           The date the program was created.
     *     @type \Google\Protobuf\Timestamp $updated
     *           The date the program was updated.
     *     @type int $profileImageSettings
     *           Indicates if the program requires member profile images on enrol.
     *     @type \Members\CustomExternalId $applyFieldToExternalIdOnEnrol
     *           Auto generate the external id from member object field. e.g. if you set person.emailAddress, then member's email address will be used as a value of external id.
     *     @type \Members\EventCaptureSettings $eventCaptureSettings
     *           Event settings for the program. Can be used if the program captures member events.
     *     @type \Members\PassRecoverySettings $passRecoverySettings
     *           Settings for how users can recover passes.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Member\Program::initOnce();
        parent::__construct($data);
    }

    /**
     * PassKit generated program id (22 characters).
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * PassKit generated program id (22 characters).
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Name of the membership programs; will be shown on the enrolment page (if set) and issuer name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Name of the membership programs; will be shown on the enrolment page (if set) and issuer name.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Localized name of the membership program.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedName = 3;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedName()
    {
        return isset($this->localizedName) ? $this->localizedName : null;
    }

    public function hasLocalizedName()
    {
        return isset($this->localizedName);
    }

    public function clearLocalizedName()
    {
        unset($this->localizedName);
    }

    /**
     * Localized name of the membership program.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedName = 3;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedName($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedName = $var;

        return $this;
    }

    /**
     * The program status (bitmask of ProjectStatus). Defaults to io.ProjectStatus.PROJECT_ACTIVE_FOR_OBJECT_CREATION + io.ProjectStatus.PROJECT_DRAFT.
     *
     * Generated from protobuf field <code>repeated .io.ProjectStatus status = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * The program status (bitmask of ProjectStatus). Defaults to io.ProjectStatus.PROJECT_ACTIVE_FOR_OBJECT_CREATION + io.ProjectStatus.PROJECT_DRAFT.
     *
     * Generated from protobuf field <code>repeated .io.ProjectStatus status = 4;</code>
     * @param int[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setStatus($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Io\ProjectStatus::class);
        $this->status = $arr;

        return $this;
    }

    /**
     * The project quota.
     *
     * Generated from protobuf field <code>.io.Quota quota = 5;</code>
     * @return \Io\Quota|null
     */
    public function getQuota()
    {
        return isset($this->quota) ? $this->quota : null;
    }

    public function hasQuota()
    {
        return isset($this->quota);
    }

    public function clearQuota()
    {
        unset($this->quota);
    }

    /**
     * The project quota.
     *
     * Generated from protobuf field <code>.io.Quota quota = 5;</code>
     * @param \Io\Quota $var
     * @return $this
     */
    public function setQuota($var)
    {
        GPBUtil::checkMessage($var, \Io\Quota::class);
        $this->quota = $var;

        return $this;
    }

    /**
     * Leave empty for draft programs. Needs to be set for programs where status contains PROJECT_PUBLISHED.
     *
     * Generated from protobuf field <code>string passTypeIdentifier = 6;</code>
     * @return string
     */
    public function getPassTypeIdentifier()
    {
        return $this->passTypeIdentifier;
    }

    /**
     * Leave empty for draft programs. Needs to be set for programs where status contains PROJECT_PUBLISHED.
     *
     * Generated from protobuf field <code>string passTypeIdentifier = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setPassTypeIdentifier($var)
    {
        GPBUtil::checkString($var, True);
        $this->passTypeIdentifier = $var;

        return $this;
    }

    /**
     * Contains the email & sms distribution settings for the program.
     *
     * Generated from protobuf field <code>.io.DistributionSettings distributionSettings = 7;</code>
     * @return \Io\DistributionSettings|null
     */
    public function getDistributionSettings()
    {
        return isset($this->distributionSettings) ? $this->distributionSettings : null;
    }

    public function hasDistributionSettings()
    {
        return isset($this->distributionSettings);
    }

    public function clearDistributionSettings()
    {
        unset($this->distributionSettings);
    }

    /**
     * Contains the email & sms distribution settings for the program.
     *
     * Generated from protobuf field <code>.io.DistributionSettings distributionSettings = 7;</code>
     * @param \Io\DistributionSettings $var
     * @return $this
     */
    public function setDistributionSettings($var)
    {
        GPBUtil::checkMessage($var, \Io\DistributionSettings::class);
        $this->distributionSettings = $var;

        return $this;
    }

    /**
     * Auto deletes the member after `autoDeleteDaysAfterExpiry` days.
     *
     * Generated from protobuf field <code>uint32 autoDeleteDaysAfterExpiry = 8;</code>
     * @return int
     */
    public function getAutoDeleteDaysAfterExpiry()
    {
        return $this->autoDeleteDaysAfterExpiry;
    }

    /**
     * Auto deletes the member after `autoDeleteDaysAfterExpiry` days.
     *
     * Generated from protobuf field <code>uint32 autoDeleteDaysAfterExpiry = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setAutoDeleteDaysAfterExpiry($var)
    {
        GPBUtil::checkUint32($var);
        $this->autoDeleteDaysAfterExpiry = $var;

        return $this;
    }

    /**
     * Sets how many days before expiry to send a reminder lockscreen message to the member.
     *
     * Generated from protobuf field <code>uint32 autoReminderDaysBeforeExpiry = 9;</code>
     * @return int
     */
    public function getAutoReminderDaysBeforeExpiry()
    {
        return $this->autoReminderDaysBeforeExpiry;
    }

    /**
     * Sets how many days before expiry to send a reminder lockscreen message to the member.
     *
     * Generated from protobuf field <code>uint32 autoReminderDaysBeforeExpiry = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setAutoReminderDaysBeforeExpiry($var)
    {
        GPBUtil::checkUint32($var);
        $this->autoReminderDaysBeforeExpiry = $var;

        return $this;
    }

    /**
     * The message to send to the user `autoReminderDaysBeforeExpiry` days before expiry.
     *
     * Generated from protobuf field <code>string expiryMessage = 10;</code>
     * @return string
     */
    public function getExpiryMessage()
    {
        return $this->expiryMessage;
    }

    /**
     * The message to send to the user `autoReminderDaysBeforeExpiry` days before expiry.
     *
     * Generated from protobuf field <code>string expiryMessage = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setExpiryMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->expiryMessage = $var;

        return $this;
    }

    /**
     * Localized expiry message.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedExpiryMessage = 11;</code>
     * @return \Io\LocalizedString|null
     */
    public function getLocalizedExpiryMessage()
    {
        return isset($this->localizedExpiryMessage) ? $this->localizedExpiryMessage : null;
    }

    public function hasLocalizedExpiryMessage()
    {
        return isset($this->localizedExpiryMessage);
    }

    public function clearLocalizedExpiryMessage()
    {
        unset($this->localizedExpiryMessage);
    }

    /**
     * Localized expiry message.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedExpiryMessage = 11;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedExpiryMessage($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedExpiryMessage = $var;

        return $this;
    }

    /**
     * Auto deletes the member `autoDeleteDaysAfterNotInstalling` days after the card has not been installed.
     *
     * Generated from protobuf field <code>uint32 autoDeleteDaysAfterNotInstalling = 12;</code>
     * @return int
     */
    public function getAutoDeleteDaysAfterNotInstalling()
    {
        return $this->autoDeleteDaysAfterNotInstalling;
    }

    /**
     * Auto deletes the member `autoDeleteDaysAfterNotInstalling` days after the card has not been installed.
     *
     * Generated from protobuf field <code>uint32 autoDeleteDaysAfterNotInstalling = 12;</code>
     * @param int $var
     * @return $this
     */
    public function setAutoDeleteDaysAfterNotInstalling($var)
    {
        GPBUtil::checkUint32($var);
        $this->autoDeleteDaysAfterNotInstalling = $var;

        return $this;
    }

    /**
     * Points format for primary points.
     *
     * Generated from protobuf field <code>.members.PointsType pointsType = 16;</code>
     * @return \Members\PointsType|null
     */
    public function getPointsType()
    {
        return isset($this->pointsType) ? $this->pointsType : null;
    }

    public function hasPointsType()
    {
        return isset($this->pointsType);
    }

    public function clearPointsType()
    {
        unset($this->pointsType);
    }

    /**
     * Points format for primary points.
     *
     * Generated from protobuf field <code>.members.PointsType pointsType = 16;</code>
     * @param \Members\PointsType $var
     * @return $this
     */
    public function setPointsType($var)
    {
        GPBUtil::checkMessage($var, \Members\PointsType::class);
        $this->pointsType = $var;

        return $this;
    }

    /**
     * Points format for secondary points.
     *
     * Generated from protobuf field <code>.members.PointsType secondaryPointsType = 17;</code>
     * @return \Members\PointsType|null
     */
    public function getSecondaryPointsType()
    {
        return isset($this->secondaryPointsType) ? $this->secondaryPointsType : null;
    }

    public function hasSecondaryPointsType()
    {
        return isset($this->secondaryPointsType);
    }

    public function clearSecondaryPointsType()
    {
        unset($this->secondaryPointsType);
    }

    /**
     * Points format for secondary points.
     *
     * Generated from protobuf field <code>.members.PointsType secondaryPointsType = 17;</code>
     * @param \Members\PointsType $var
     * @return $this
     */
    public function setSecondaryPointsType($var)
    {
        GPBUtil::checkMessage($var, \Members\PointsType::class);
        $this->secondaryPointsType = $var;

        return $this;
    }

    /**
     * Issued, installed, uninstalled and invalidated counts. Metrics are not writable.
     *
     * Generated from protobuf field <code>.io.Metrics metrics = 19;</code>
     * @return \Io\Metrics|null
     */
    public function getMetrics()
    {
        return isset($this->metrics) ? $this->metrics : null;
    }

    public function hasMetrics()
    {
        return isset($this->metrics);
    }

    public function clearMetrics()
    {
        unset($this->metrics);
    }

    /**
     * Issued, installed, uninstalled and invalidated counts. Metrics are not writable.
     *
     * Generated from protobuf field <code>.io.Metrics metrics = 19;</code>
     * @param \Io\Metrics $var
     * @return $this
     */
    public function setMetrics($var)
    {
        GPBUtil::checkMessage($var, \Io\Metrics::class);
        $this->metrics = $var;

        return $this;
    }

    /**
     * A list of dynamic fields which can be used to filter members.
     *
     * Generated from protobuf field <code>repeated string metaFieldsList = 20;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMetaFieldsList()
    {
        return $this->metaFieldsList;
    }

    /**
     * A list of dynamic fields which can be used to filter members.
     *
     * Generated from protobuf field <code>repeated string metaFieldsList = 20;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMetaFieldsList($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->metaFieldsList = $arr;

        return $this;
    }

    /**
     * The date the program was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 21;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreated()
    {
        return isset($this->created) ? $this->created : null;
    }

    public function hasCreated()
    {
        return isset($this->created);
    }

    public function clearCreated()
    {
        unset($this->created);
    }

    /**
     * The date the program was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 21;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreated($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->created = $var;

        return $this;
    }

    /**
     * The date the program was updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 22;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdated()
    {
        return isset($this->updated) ? $this->updated : null;
    }

    public function hasUpdated()
    {
        return isset($this->updated);
    }

    public function clearUpdated()
    {
        unset($this->updated);
    }

    /**
     * The date the program was updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 22;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdated($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->updated = $var;

        return $this;
    }

    /**
     * Indicates if the program requires member profile images on enrol.
     *
     * Generated from protobuf field <code>.members.ProfileImageSetting profileImageSettings = 23;</code>
     * @return int
     */
    public function getProfileImageSettings()
    {
        return $this->profileImageSettings;
    }

    /**
     * Indicates if the program requires member profile images on enrol.
     *
     * Generated from protobuf field <code>.members.ProfileImageSetting profileImageSettings = 23;</code>
     * @param int $var
     * @return $this
     */
    public function setProfileImageSettings($var)
    {
        GPBUtil::checkEnum($var, \Members\ProfileImageSetting::class);
        $this->profileImageSettings = $var;

        return $this;
    }

    /**
     * Auto generate the external id from member object field. e.g. if you set person.emailAddress, then member's email address will be used as a value of external id.
     *
     * Generated from protobuf field <code>.members.CustomExternalId applyFieldToExternalIdOnEnrol = 24;</code>
     * @return \Members\CustomExternalId|null
     */
    public function getApplyFieldToExternalIdOnEnrol()
    {
        return isset($this->applyFieldToExternalIdOnEnrol) ? $this->applyFieldToExternalIdOnEnrol : null;
    }

    public function hasApplyFieldToExternalIdOnEnrol()
    {
        return isset($this->applyFieldToExternalIdOnEnrol);
    }

    public function clearApplyFieldToExternalIdOnEnrol()
    {
        unset($this->applyFieldToExternalIdOnEnrol);
    }

    /**
     * Auto generate the external id from member object field. e.g. if you set person.emailAddress, then member's email address will be used as a value of external id.
     *
     * Generated from protobuf field <code>.members.CustomExternalId applyFieldToExternalIdOnEnrol = 24;</code>
     * @param \Members\CustomExternalId $var
     * @return $this
     */
    public function setApplyFieldToExternalIdOnEnrol($var)
    {
        GPBUtil::checkMessage($var, \Members\CustomExternalId::class);
        $this->applyFieldToExternalIdOnEnrol = $var;

        return $this;
    }

    /**
     * Event settings for the program. Can be used if the program captures member events.
     *
     * Generated from protobuf field <code>.members.EventCaptureSettings eventCaptureSettings = 25;</code>
     * @return \Members\EventCaptureSettings|null
     */
    public function getEventCaptureSettings()
    {
        return isset($this->eventCaptureSettings) ? $this->eventCaptureSettings : null;
    }

    public function hasEventCaptureSettings()
    {
        return isset($this->eventCaptureSettings);
    }

    public function clearEventCaptureSettings()
    {
        unset($this->eventCaptureSettings);
    }

    /**
     * Event settings for the program. Can be used if the program captures member events.
     *
     * Generated from protobuf field <code>.members.EventCaptureSettings eventCaptureSettings = 25;</code>
     * @param \Members\EventCaptureSettings $var
     * @return $this
     */
    public function setEventCaptureSettings($var)
    {
        GPBUtil::checkMessage($var, \Members\EventCaptureSettings::class);
        $this->eventCaptureSettings = $var;

        return $this;
    }

    /**
     * Settings for how users can recover passes.
     *
     * Generated from protobuf field <code>.members.PassRecoverySettings passRecoverySettings = 26;</code>
     * @return \Members\PassRecoverySettings|null
     */
    public function getPassRecoverySettings()
    {
        return isset($this->passRecoverySettings) ? $this->passRecoverySettings : null;
    }

    public function hasPassRecoverySettings()
    {
        return isset($this->passRecoverySettings);
    }

    public function clearPassRecoverySettings()
    {
        unset($this->passRecoverySettings);
    }

    /**
     * Settings for how users can recover passes.
     *
     * Generated from protobuf field <code>.members.PassRecoverySettings passRecoverySettings = 26;</code>
     * @param \Members\PassRecoverySettings $var
     * @return $this
     */
    public function setPassRecoverySettings($var)
    {
        GPBUtil::checkMessage($var, \Members\PassRecoverySettings::class);
        $this->passRecoverySettings = $var;

        return $this;
    }

}

