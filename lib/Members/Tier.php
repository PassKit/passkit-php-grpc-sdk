<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/member/tier.proto

namespace Members;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The Tier object; will override certain details of the pass (colours, logo's, dynamic back fields, and labels).
 *
 * Generated from protobuf message <code>members.Tier</code>
 */
class Tier extends \Google\Protobuf\Internal\Message
{
    /**
     * Tier identifier (could just be: blue, gold, etc); needs to be lower case. Tier ID needs to be uique within the program.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * Index of the tier; can be used for managing downgrades / upgrade messaging; needs to be unique within the program.
     *
     * Generated from protobuf field <code>uint32 tierIndex = 2;</code>
     */
    protected $tierIndex = 0;
    /**
     * Name of tier.
     *
     * Generated from protobuf field <code>string name = 3;</code>
     */
    protected $name = '';
    /**
     * Localized name of tier.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedName = 4;</code>
     */
    protected $localizedName = null;
    /**
     * Name of the secondary reward tier.
     *
     * Generated from protobuf field <code>string secondaryTierName = 5;</code>
     */
    protected $secondaryTierName = '';
    /**
     * Localized name of the secondary reward tier.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedSecondaryTierName = 6;</code>
     */
    protected $localizedSecondaryTierName = null;
    /**
     * The program id that the tier belongs to.
     *
     * Generated from protobuf field <code>string programId = 7;</code>
     */
    protected $programId = '';
    /**
     * Identifier of pass template which identifies design and data elements for this tier.
     *
     * Generated from protobuf field <code>string passTemplateId = 8;</code>
     */
    protected $passTemplateId = '';
    /**
     * Notification to be shown when someone upgrades tier.
     *
     * Generated from protobuf field <code>string tierUpgradeMessage = 9;</code>
     */
    protected $tierUpgradeMessage = '';
    /**
     * Localized notification to be shown when someone upgrades tier.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedTierUpgradeMessage = 10;</code>
     */
    protected $localizedTierUpgradeMessage = null;
    /**
     * Notification to be shown when someone downgrades tier.
     *
     * Generated from protobuf field <code>string tierDowngradeMessage = 11;</code>
     */
    protected $tierDowngradeMessage = '';
    /**
     * Localized notification to be shown when someone upgrades tier.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedTierDowngradeMessage = 12;</code>
     */
    protected $localizedTierDowngradeMessage = null;
    /**
     * The date the tier was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 13;</code>
     */
    protected $created = null;
    /**
     * The date the tier was updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 14;</code>
     */
    protected $updated = null;
    /**
     * Set true to accept a negative point balance. Default is false.
     *
     * Generated from protobuf field <code>bool pointsOverdrawn = 15;</code>
     */
    protected $pointsOverdrawn = false;
    /**
     * Set true to accept a negative secondary point balance. Default is false.
     *
     * Generated from protobuf field <code>bool secondaryPointsOverdrawn = 16;</code>
     */
    protected $secondaryPointsOverdrawn = false;
    /**
     * Expiry date setting. You can set expiry logic here. Default no expiry logic.
     *
     * Generated from protobuf field <code>.io.ExpirySettings expirySettings = 17;</code>
     */
    protected $expirySettings = null;
    /**
     * Timezone string in IANA timezone format. If not provided defaults to Etc/UTC.
     *
     * Generated from protobuf field <code>string timezone = 18;</code>
     */
    protected $timezone = '';
    /**
     * Indicates if customers can enrol into this tier via a public web form (only for public programs).
     *
     * Generated from protobuf field <code>.io.PkBool allowTierEnrolment = 19;</code>
     */
    protected $allowTierEnrolment = null;
    /**
     * Tier shortcode is used in public enrolment URLs, that enrol members into the tier if the program is set to public and allowTierEnrolment = true for this tier. System generated.
     *
     * Generated from protobuf field <code>string shortCode = 20;</code>
     */
    protected $shortCode = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           Tier identifier (could just be: blue, gold, etc); needs to be lower case. Tier ID needs to be uique within the program.
     *     @type int $tierIndex
     *           Index of the tier; can be used for managing downgrades / upgrade messaging; needs to be unique within the program.
     *     @type string $name
     *           Name of tier.
     *     @type \Io\LocalizedString $localizedName
     *           Localized name of tier.
     *     @type string $secondaryTierName
     *           Name of the secondary reward tier.
     *     @type \Io\LocalizedString $localizedSecondaryTierName
     *           Localized name of the secondary reward tier.
     *     @type string $programId
     *           The program id that the tier belongs to.
     *     @type string $passTemplateId
     *           Identifier of pass template which identifies design and data elements for this tier.
     *     @type string $tierUpgradeMessage
     *           Notification to be shown when someone upgrades tier.
     *     @type \Io\LocalizedString $localizedTierUpgradeMessage
     *           Localized notification to be shown when someone upgrades tier.
     *     @type string $tierDowngradeMessage
     *           Notification to be shown when someone downgrades tier.
     *     @type \Io\LocalizedString $localizedTierDowngradeMessage
     *           Localized notification to be shown when someone upgrades tier.
     *     @type \Google\Protobuf\Timestamp $created
     *           The date the tier was created.
     *     @type \Google\Protobuf\Timestamp $updated
     *           The date the tier was updated.
     *     @type bool $pointsOverdrawn
     *           Set true to accept a negative point balance. Default is false.
     *     @type bool $secondaryPointsOverdrawn
     *           Set true to accept a negative secondary point balance. Default is false.
     *     @type \Io\ExpirySettings $expirySettings
     *           Expiry date setting. You can set expiry logic here. Default no expiry logic.
     *     @type string $timezone
     *           Timezone string in IANA timezone format. If not provided defaults to Etc/UTC.
     *     @type \Io\PkBool $allowTierEnrolment
     *           Indicates if customers can enrol into this tier via a public web form (only for public programs).
     *     @type string $shortCode
     *           Tier shortcode is used in public enrolment URLs, that enrol members into the tier if the program is set to public and allowTierEnrolment = true for this tier. System generated.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Member\Tier::initOnce();
        parent::__construct($data);
    }

    /**
     * Tier identifier (could just be: blue, gold, etc); needs to be lower case. Tier ID needs to be uique within the program.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Tier identifier (could just be: blue, gold, etc); needs to be lower case. Tier ID needs to be uique within the program.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Index of the tier; can be used for managing downgrades / upgrade messaging; needs to be unique within the program.
     *
     * Generated from protobuf field <code>uint32 tierIndex = 2;</code>
     * @return int
     */
    public function getTierIndex()
    {
        return $this->tierIndex;
    }

    /**
     * Index of the tier; can be used for managing downgrades / upgrade messaging; needs to be unique within the program.
     *
     * Generated from protobuf field <code>uint32 tierIndex = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setTierIndex($var)
    {
        GPBUtil::checkUint32($var);
        $this->tierIndex = $var;

        return $this;
    }

    /**
     * Name of tier.
     *
     * Generated from protobuf field <code>string name = 3;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Name of tier.
     *
     * Generated from protobuf field <code>string name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Localized name of tier.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedName = 4;</code>
     * @return \Io\LocalizedString
     */
    public function getLocalizedName()
    {
        return isset($this->localizedName) ? $this->localizedName : null;
    }

    public function hasLocalizedName()
    {
        return isset($this->localizedName);
    }

    public function clearLocalizedName()
    {
        unset($this->localizedName);
    }

    /**
     * Localized name of tier.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedName = 4;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedName($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedName = $var;

        return $this;
    }

    /**
     * Name of the secondary reward tier.
     *
     * Generated from protobuf field <code>string secondaryTierName = 5;</code>
     * @return string
     */
    public function getSecondaryTierName()
    {
        return $this->secondaryTierName;
    }

    /**
     * Name of the secondary reward tier.
     *
     * Generated from protobuf field <code>string secondaryTierName = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setSecondaryTierName($var)
    {
        GPBUtil::checkString($var, True);
        $this->secondaryTierName = $var;

        return $this;
    }

    /**
     * Localized name of the secondary reward tier.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedSecondaryTierName = 6;</code>
     * @return \Io\LocalizedString
     */
    public function getLocalizedSecondaryTierName()
    {
        return isset($this->localizedSecondaryTierName) ? $this->localizedSecondaryTierName : null;
    }

    public function hasLocalizedSecondaryTierName()
    {
        return isset($this->localizedSecondaryTierName);
    }

    public function clearLocalizedSecondaryTierName()
    {
        unset($this->localizedSecondaryTierName);
    }

    /**
     * Localized name of the secondary reward tier.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedSecondaryTierName = 6;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedSecondaryTierName($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedSecondaryTierName = $var;

        return $this;
    }

    /**
     * The program id that the tier belongs to.
     *
     * Generated from protobuf field <code>string programId = 7;</code>
     * @return string
     */
    public function getProgramId()
    {
        return $this->programId;
    }

    /**
     * The program id that the tier belongs to.
     *
     * Generated from protobuf field <code>string programId = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setProgramId($var)
    {
        GPBUtil::checkString($var, True);
        $this->programId = $var;

        return $this;
    }

    /**
     * Identifier of pass template which identifies design and data elements for this tier.
     *
     * Generated from protobuf field <code>string passTemplateId = 8;</code>
     * @return string
     */
    public function getPassTemplateId()
    {
        return $this->passTemplateId;
    }

    /**
     * Identifier of pass template which identifies design and data elements for this tier.
     *
     * Generated from protobuf field <code>string passTemplateId = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setPassTemplateId($var)
    {
        GPBUtil::checkString($var, True);
        $this->passTemplateId = $var;

        return $this;
    }

    /**
     * Notification to be shown when someone upgrades tier.
     *
     * Generated from protobuf field <code>string tierUpgradeMessage = 9;</code>
     * @return string
     */
    public function getTierUpgradeMessage()
    {
        return $this->tierUpgradeMessage;
    }

    /**
     * Notification to be shown when someone upgrades tier.
     *
     * Generated from protobuf field <code>string tierUpgradeMessage = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setTierUpgradeMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->tierUpgradeMessage = $var;

        return $this;
    }

    /**
     * Localized notification to be shown when someone upgrades tier.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedTierUpgradeMessage = 10;</code>
     * @return \Io\LocalizedString
     */
    public function getLocalizedTierUpgradeMessage()
    {
        return isset($this->localizedTierUpgradeMessage) ? $this->localizedTierUpgradeMessage : null;
    }

    public function hasLocalizedTierUpgradeMessage()
    {
        return isset($this->localizedTierUpgradeMessage);
    }

    public function clearLocalizedTierUpgradeMessage()
    {
        unset($this->localizedTierUpgradeMessage);
    }

    /**
     * Localized notification to be shown when someone upgrades tier.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedTierUpgradeMessage = 10;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedTierUpgradeMessage($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedTierUpgradeMessage = $var;

        return $this;
    }

    /**
     * Notification to be shown when someone downgrades tier.
     *
     * Generated from protobuf field <code>string tierDowngradeMessage = 11;</code>
     * @return string
     */
    public function getTierDowngradeMessage()
    {
        return $this->tierDowngradeMessage;
    }

    /**
     * Notification to be shown when someone downgrades tier.
     *
     * Generated from protobuf field <code>string tierDowngradeMessage = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setTierDowngradeMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->tierDowngradeMessage = $var;

        return $this;
    }

    /**
     * Localized notification to be shown when someone upgrades tier.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedTierDowngradeMessage = 12;</code>
     * @return \Io\LocalizedString
     */
    public function getLocalizedTierDowngradeMessage()
    {
        return isset($this->localizedTierDowngradeMessage) ? $this->localizedTierDowngradeMessage : null;
    }

    public function hasLocalizedTierDowngradeMessage()
    {
        return isset($this->localizedTierDowngradeMessage);
    }

    public function clearLocalizedTierDowngradeMessage()
    {
        unset($this->localizedTierDowngradeMessage);
    }

    /**
     * Localized notification to be shown when someone upgrades tier.
     *
     * Generated from protobuf field <code>.io.LocalizedString localizedTierDowngradeMessage = 12;</code>
     * @param \Io\LocalizedString $var
     * @return $this
     */
    public function setLocalizedTierDowngradeMessage($var)
    {
        GPBUtil::checkMessage($var, \Io\LocalizedString::class);
        $this->localizedTierDowngradeMessage = $var;

        return $this;
    }

    /**
     * The date the tier was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 13;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getCreated()
    {
        return isset($this->created) ? $this->created : null;
    }

    public function hasCreated()
    {
        return isset($this->created);
    }

    public function clearCreated()
    {
        unset($this->created);
    }

    /**
     * The date the tier was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created = 13;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreated($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->created = $var;

        return $this;
    }

    /**
     * The date the tier was updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 14;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getUpdated()
    {
        return isset($this->updated) ? $this->updated : null;
    }

    public function hasUpdated()
    {
        return isset($this->updated);
    }

    public function clearUpdated()
    {
        unset($this->updated);
    }

    /**
     * The date the tier was updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp updated = 14;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdated($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->updated = $var;

        return $this;
    }

    /**
     * Set true to accept a negative point balance. Default is false.
     *
     * Generated from protobuf field <code>bool pointsOverdrawn = 15;</code>
     * @return bool
     */
    public function getPointsOverdrawn()
    {
        return $this->pointsOverdrawn;
    }

    /**
     * Set true to accept a negative point balance. Default is false.
     *
     * Generated from protobuf field <code>bool pointsOverdrawn = 15;</code>
     * @param bool $var
     * @return $this
     */
    public function setPointsOverdrawn($var)
    {
        GPBUtil::checkBool($var);
        $this->pointsOverdrawn = $var;

        return $this;
    }

    /**
     * Set true to accept a negative secondary point balance. Default is false.
     *
     * Generated from protobuf field <code>bool secondaryPointsOverdrawn = 16;</code>
     * @return bool
     */
    public function getSecondaryPointsOverdrawn()
    {
        return $this->secondaryPointsOverdrawn;
    }

    /**
     * Set true to accept a negative secondary point balance. Default is false.
     *
     * Generated from protobuf field <code>bool secondaryPointsOverdrawn = 16;</code>
     * @param bool $var
     * @return $this
     */
    public function setSecondaryPointsOverdrawn($var)
    {
        GPBUtil::checkBool($var);
        $this->secondaryPointsOverdrawn = $var;

        return $this;
    }

    /**
     * Expiry date setting. You can set expiry logic here. Default no expiry logic.
     *
     * Generated from protobuf field <code>.io.ExpirySettings expirySettings = 17;</code>
     * @return \Io\ExpirySettings
     */
    public function getExpirySettings()
    {
        return isset($this->expirySettings) ? $this->expirySettings : null;
    }

    public function hasExpirySettings()
    {
        return isset($this->expirySettings);
    }

    public function clearExpirySettings()
    {
        unset($this->expirySettings);
    }

    /**
     * Expiry date setting. You can set expiry logic here. Default no expiry logic.
     *
     * Generated from protobuf field <code>.io.ExpirySettings expirySettings = 17;</code>
     * @param \Io\ExpirySettings $var
     * @return $this
     */
    public function setExpirySettings($var)
    {
        GPBUtil::checkMessage($var, \Io\ExpirySettings::class);
        $this->expirySettings = $var;

        return $this;
    }

    /**
     * Timezone string in IANA timezone format. If not provided defaults to Etc/UTC.
     *
     * Generated from protobuf field <code>string timezone = 18;</code>
     * @return string
     */
    public function getTimezone()
    {
        return $this->timezone;
    }

    /**
     * Timezone string in IANA timezone format. If not provided defaults to Etc/UTC.
     *
     * Generated from protobuf field <code>string timezone = 18;</code>
     * @param string $var
     * @return $this
     */
    public function setTimezone($var)
    {
        GPBUtil::checkString($var, True);
        $this->timezone = $var;

        return $this;
    }

    /**
     * Indicates if customers can enrol into this tier via a public web form (only for public programs).
     *
     * Generated from protobuf field <code>.io.PkBool allowTierEnrolment = 19;</code>
     * @return \Io\PkBool
     */
    public function getAllowTierEnrolment()
    {
        return isset($this->allowTierEnrolment) ? $this->allowTierEnrolment : null;
    }

    public function hasAllowTierEnrolment()
    {
        return isset($this->allowTierEnrolment);
    }

    public function clearAllowTierEnrolment()
    {
        unset($this->allowTierEnrolment);
    }

    /**
     * Indicates if customers can enrol into this tier via a public web form (only for public programs).
     *
     * Generated from protobuf field <code>.io.PkBool allowTierEnrolment = 19;</code>
     * @param \Io\PkBool $var
     * @return $this
     */
    public function setAllowTierEnrolment($var)
    {
        GPBUtil::checkMessage($var, \Io\PkBool::class);
        $this->allowTierEnrolment = $var;

        return $this;
    }

    /**
     * Tier shortcode is used in public enrolment URLs, that enrol members into the tier if the program is set to public and allowTierEnrolment = true for this tier. System generated.
     *
     * Generated from protobuf field <code>string shortCode = 20;</code>
     * @return string
     */
    public function getShortCode()
    {
        return $this->shortCode;
    }

    /**
     * Tier shortcode is used in public enrolment URLs, that enrol members into the tier if the program is set to public and allowTierEnrolment = true for this tier. System generated.
     *
     * Generated from protobuf field <code>string shortCode = 20;</code>
     * @param string $var
     * @return $this
     */
    public function setShortCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->shortCode = $var;

        return $this;
    }

}

