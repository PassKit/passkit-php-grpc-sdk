<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/member/member.proto

namespace Members;

use UnexpectedValueException;

/**
 * List of allowed member statuses
 *
 * Protobuf type <code>members.MemberStatus</code>
 */
class MemberStatus
{
    /**
     * Member has successfully enrolled in the program
     *
     * Generated from protobuf enum <code>ENROLLED = 0;</code>
     */
    const ENROLLED = 0;
    /**
     * Member is active
     *
     * Generated from protobuf enum <code>ACTIVE = 1;</code>
     */
    const ACTIVE = 1;
    /**
     * For expired members
     *
     * Generated from protobuf enum <code>EXPIRED = 3;</code>
     */
    const EXPIRED = 3;
    /**
     * For members who's records have been deleted
     *
     * Generated from protobuf enum <code>DELETED = 5;</code>
     */
    const DELETED = 5;

    private static $valueToName = [
        self::ENROLLED => 'ENROLLED',
        self::ACTIVE => 'ACTIVE',
        self::EXPIRED => 'EXPIRED',
        self::DELETED => 'DELETED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

