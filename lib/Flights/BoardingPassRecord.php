<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/flights/boarding_pass.proto

namespace Flights;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A Boarding Pass record is unique to an individual passenger journey form a boarding point to a deplaning point. A Carrier and a Flight Designation record must exist. If a Flight record does not already exist, then it will be auto-generated based on the Flight Designation record and other publicly available data.
 *
 * Generated from protobuf message <code>flights.BoardingPassRecord</code>
 */
class BoardingPassRecord extends \Google\Protobuf\Internal\Message
{
    /**
     * Id assigned by PassKit to represent the boarding pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * PNR code of the carrier operating the flight, independent of code-share, lease or other issues.
     *
     * Generated from protobuf field <code>string operatingCarrierPNR = 2 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    protected $operatingCarrierPNR = '';
    /**
     * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
     *
     * Generated from protobuf field <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    private $relatedPNRs;
    /**
     * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
     *
     * Generated from protobuf field <code>string ticketNumber = 4 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    protected $ticketNumber = '';
    /**
     * The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
     *
     * Generated from protobuf field <code>int32 ticketLeg = 5 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    protected $ticketLeg = 0;
    /**
     * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     *
     * Generated from protobuf field <code>string boardingPoint = 6 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    protected $boardingPoint = '';
    /**
     * 3 letter IATA code or 4 letter ICAO code of the passenger deplaning point.
     *
     * Generated from protobuf field <code>string deplaningPoint = 7 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    protected $deplaningPoint = '';
    /**
     * The two or three character airline code of the marketing carrier.
     *
     * Generated from protobuf field <code>string carrierCode = 8 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    protected $carrierCode = '';
    /**
     * The flight number of the marketing character (excluding the carrier code).
     *
     * Generated from protobuf field <code>string flightNumber = 9 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    protected $flightNumber = '';
    /**
     * The date of departure in local airport time.
     *
     * Generated from protobuf field <code>.io.Date departureDate = 11;</code>
     */
    protected $departureDate = null;
    /**
     * Details of the passenger and any infant.
     *
     * Generated from protobuf field <code>.flights.Passenger passenger = 12;</code>
     */
    protected $passenger = null;
    /**
     * Free-form text that can be used to describe the ticket class, tier or cabin. E.g. "Business", "Premium Economy", "Club World".
     *
     * Generated from protobuf field <code>string class = 13;</code>
     */
    protected $class = '';
    /**
     * The compartment code / class of the ticket.
     *
     * Generated from protobuf field <code>.cabin_codes.CompartmentCode compartmentCode = 14;</code>
     */
    protected $compartmentCode = 0;
    /**
     * The allocated seat number.  The text "ANY" or "XXX" can be used where a free seating condition exists.
     *
     * Generated from protobuf field <code>string seatNumber = 15 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    protected $seatNumber = '';
    /**
     * The check in sequence number.
     *
     * Generated from protobuf field <code>int32 sequenceNumber = 16;</code>
     */
    protected $sequenceNumber = 0;
    /**
     * A boarding group or zone indicator. This is displayed on the pass to assist passengers and ground-staff to expedite boarding.
     *
     * Generated from protobuf field <code>string boardingGroup = 17;</code>
     */
    protected $boardingGroup = '';
    /**
     * An additional field to indicate boarding priority or order.
     *
     * Generated from protobuf field <code>string boardingPosition = 18;</code>
     */
    protected $boardingPosition = '';
    /**
     * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
     *
     * Generated from protobuf field <code>string freeBaggageAllowance = 19 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    protected $freeBaggageAllowance = '';
    /**
     * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
     *
     * Generated from protobuf field <code>string carryOnAllowance = 20 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    protected $carryOnAllowance = '';
    /**
     * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
     *
     * Generated from protobuf field <code>repeated string ssrCodes = 21;</code>
     */
    private $ssrCodes;
    /**
     * Other service information that may be relevant to the booking.
     *
     * Generated from protobuf field <code>string osi = 22;</code>
     */
    protected $osi = '';
    /**
     * Free text booking remarks.
     *
     * Generated from protobuf field <code>string remarks = 23;</code>
     */
    protected $remarks = '';
    /**
     * Passenger Description as detailed in IATA PSC Resolution 792 Attachment 'C'.
     *
     * Generated from protobuf field <code>.flights.PassengerStatus passengerStatus = 24;</code>
     */
    protected $passengerStatus = 0;
    /**
     * Conditional items for the flight segment as described in IATA PSC Resolution 792.
     *
     * Generated from protobuf field <code>.flights.ConditionalItems conditionalItems = 25;</code>
     */
    protected $conditionalItems = null;
    /**
     * Payload to be encoded in the pass barcode. If omitted, an IATA BCBP Standard (Resolution 792) barcode will be generated.
     *
     * Generated from protobuf field <code>string barcodePayload = 26;</code>
     */
    protected $barcodePayload = '';
    /**
     * Security image should relate to a security image provided in the pass design. If passenger has TSA PreCheck and an image name with `tsa_precheck` is present, it will be used automatically.
     *
     * Generated from protobuf field <code>string securityImage = 27;</code>
     */
    protected $securityImage = '';
    /**
     * Privilege image should relate to a boarding privilege image provided in the pass design. If the passenger has a frequent flyer tier and an image with a lowercase name of the tier is present, it will be used automatically.
     *
     * Generated from protobuf field <code>string privilegeImage = 28;</code>
     */
    protected $privilegeImage = '';
    /**
     * Footer image is applicable to iOS devices. If not provided and security or privilege images (or their defaults) exist, then a composite will automatically be created. Else if a footer image or an airline alliance images exists in the design, it will be used.
     *
     * Generated from protobuf field <code>string footerImage = 29;</code>
     */
    protected $footerImage = '';
    /**
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
     *
     * Generated from protobuf field <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    private $locationMessages;
    /**
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
     *
     * Generated from protobuf field <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    private $beaconMessages;
    /**
     * A list of links to be appended to the end of each boarding pass.
     *
     * Generated from protobuf field <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    private $links;
    /**
     * If PassKit are generating barcodes, airline use data (IATA item 4) to be included in the barcode.
     *
     * Generated from protobuf field <code>string barcodeAdditionalData = 33;</code>
     */
    protected $barcodeAdditionalData = '';
    /**
     * If a passenger is travelling as an infant and the airline is not using conditional data with a passenger description of 6 (Adult With Infant), an id of the infant's boarding pass will be recorded here.
     *
     * Generated from protobuf field <code>string infantPassId = 34;</code>
     */
    protected $infantPassId = '';
    /**
     * Optional key value pairs to be added in to the flight record
     *
     * Generated from protobuf field <code>.io.DataItems additionalDataItems = 35;</code>
     */
    protected $additionalDataItems = null;
    /**
     * Pass Metadata
     *
     * Generated from protobuf field <code>.io.Metadata metadata = 36;</code>
     */
    protected $metadata = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           Id assigned by PassKit to represent the boarding pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
     *     @type string $operatingCarrierPNR
     *           PNR code of the carrier operating the flight, independent of code-share, lease or other issues.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $relatedPNRs
     *           Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
     *     @type string $ticketNumber
     *           Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
     *     @type int $ticketLeg
     *           The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
     *     @type string $boardingPoint
     *           3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     *     @type string $deplaningPoint
     *           3 letter IATA code or 4 letter ICAO code of the passenger deplaning point.
     *     @type string $carrierCode
     *           The two or three character airline code of the marketing carrier.
     *     @type string $flightNumber
     *           The flight number of the marketing character (excluding the carrier code).
     *     @type \Io\Date $departureDate
     *           The date of departure in local airport time.
     *     @type \Flights\Passenger $passenger
     *           Details of the passenger and any infant.
     *     @type string $class
     *           Free-form text that can be used to describe the ticket class, tier or cabin. E.g. "Business", "Premium Economy", "Club World".
     *     @type int $compartmentCode
     *           The compartment code / class of the ticket.
     *     @type string $seatNumber
     *           The allocated seat number.  The text "ANY" or "XXX" can be used where a free seating condition exists.
     *     @type int $sequenceNumber
     *           The check in sequence number.
     *     @type string $boardingGroup
     *           A boarding group or zone indicator. This is displayed on the pass to assist passengers and ground-staff to expedite boarding.
     *     @type string $boardingPosition
     *           An additional field to indicate boarding priority or order.
     *     @type string $freeBaggageAllowance
     *           3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
     *     @type string $carryOnAllowance
     *           3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $ssrCodes
     *           An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
     *     @type string $osi
     *           Other service information that may be relevant to the booking.
     *     @type string $remarks
     *           Free text booking remarks.
     *     @type int $passengerStatus
     *           Passenger Description as detailed in IATA PSC Resolution 792 Attachment 'C'.
     *     @type \Flights\ConditionalItems $conditionalItems
     *           Conditional items for the flight segment as described in IATA PSC Resolution 792.
     *     @type string $barcodePayload
     *           Payload to be encoded in the pass barcode. If omitted, an IATA BCBP Standard (Resolution 792) barcode will be generated.
     *     @type string $securityImage
     *           Security image should relate to a security image provided in the pass design. If passenger has TSA PreCheck and an image name with `tsa_precheck` is present, it will be used automatically.
     *     @type string $privilegeImage
     *           Privilege image should relate to a boarding privilege image provided in the pass design. If the passenger has a frequent flyer tier and an image with a lowercase name of the tier is present, it will be used automatically.
     *     @type string $footerImage
     *           Footer image is applicable to iOS devices. If not provided and security or privilege images (or their defaults) exist, then a composite will automatically be created. Else if a footer image or an airline alliance images exists in the design, it will be used.
     *     @type \Io\GPSLocation[]|\Google\Protobuf\Internal\RepeatedField $locationMessages
     *           A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
     *     @type \Io\Beacon[]|\Google\Protobuf\Internal\RepeatedField $beaconMessages
     *           A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
     *     @type \Io\Link[]|\Google\Protobuf\Internal\RepeatedField $links
     *           A list of links to be appended to the end of each boarding pass.
     *     @type string $barcodeAdditionalData
     *           If PassKit are generating barcodes, airline use data (IATA item 4) to be included in the barcode.
     *     @type string $infantPassId
     *           If a passenger is travelling as an infant and the airline is not using conditional data with a passenger description of 6 (Adult With Infant), an id of the infant's boarding pass will be recorded here.
     *     @type \Io\DataItems $additionalDataItems
     *           Optional key value pairs to be added in to the flight record
     *     @type \Io\Metadata $metadata
     *           Pass Metadata
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Flights\BoardingPass::initOnce();
        parent::__construct($data);
    }

    /**
     * Id assigned by PassKit to represent the boarding pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Id assigned by PassKit to represent the boarding pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * PNR code of the carrier operating the flight, independent of code-share, lease or other issues.
     *
     * Generated from protobuf field <code>string operatingCarrierPNR = 2 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return string
     */
    public function getOperatingCarrierPNR()
    {
        return $this->operatingCarrierPNR;
    }

    /**
     * PNR code of the carrier operating the flight, independent of code-share, lease or other issues.
     *
     * Generated from protobuf field <code>string operatingCarrierPNR = 2 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setOperatingCarrierPNR($var)
    {
        GPBUtil::checkString($var, True);
        $this->operatingCarrierPNR = $var;

        return $this;
    }

    /**
     * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
     *
     * Generated from protobuf field <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRelatedPNRs()
    {
        return $this->relatedPNRs;
    }

    /**
     * Up to three related PNRs can be used to index the record and can be the marketing carrier PNR or a master PNR containing multiple bookings. If required, a related PNR can be followed by the two or three character designator of the carrier or CRS controlling the PNR, separated by an oblique.
     *
     * Generated from protobuf field <code>repeated string relatedPNRs = 3 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRelatedPNRs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->relatedPNRs = $arr;

        return $this;
    }

    /**
     * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
     *
     * Generated from protobuf field <code>string ticketNumber = 4 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return string
     */
    public function getTicketNumber()
    {
        return $this->ticketNumber;
    }

    /**
     * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
     *
     * Generated from protobuf field <code>string ticketNumber = 4 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setTicketNumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->ticketNumber = $var;

        return $this;
    }

    /**
     * The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
     *
     * Generated from protobuf field <code>int32 ticketLeg = 5 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return int
     */
    public function getTicketLeg()
    {
        return $this->ticketLeg;
    }

    /**
     * The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
     *
     * Generated from protobuf field <code>int32 ticketLeg = 5 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param int $var
     * @return $this
     */
    public function setTicketLeg($var)
    {
        GPBUtil::checkInt32($var);
        $this->ticketLeg = $var;

        return $this;
    }

    /**
     * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     *
     * Generated from protobuf field <code>string boardingPoint = 6 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return string
     */
    public function getBoardingPoint()
    {
        return $this->boardingPoint;
    }

    /**
     * 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     *
     * Generated from protobuf field <code>string boardingPoint = 6 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setBoardingPoint($var)
    {
        GPBUtil::checkString($var, True);
        $this->boardingPoint = $var;

        return $this;
    }

    /**
     * 3 letter IATA code or 4 letter ICAO code of the passenger deplaning point.
     *
     * Generated from protobuf field <code>string deplaningPoint = 7 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return string
     */
    public function getDeplaningPoint()
    {
        return $this->deplaningPoint;
    }

    /**
     * 3 letter IATA code or 4 letter ICAO code of the passenger deplaning point.
     *
     * Generated from protobuf field <code>string deplaningPoint = 7 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setDeplaningPoint($var)
    {
        GPBUtil::checkString($var, True);
        $this->deplaningPoint = $var;

        return $this;
    }

    /**
     * The two or three character airline code of the marketing carrier.
     *
     * Generated from protobuf field <code>string carrierCode = 8 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return string
     */
    public function getCarrierCode()
    {
        return $this->carrierCode;
    }

    /**
     * The two or three character airline code of the marketing carrier.
     *
     * Generated from protobuf field <code>string carrierCode = 8 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setCarrierCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->carrierCode = $var;

        return $this;
    }

    /**
     * The flight number of the marketing character (excluding the carrier code).
     *
     * Generated from protobuf field <code>string flightNumber = 9 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return string
     */
    public function getFlightNumber()
    {
        return $this->flightNumber;
    }

    /**
     * The flight number of the marketing character (excluding the carrier code).
     *
     * Generated from protobuf field <code>string flightNumber = 9 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setFlightNumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->flightNumber = $var;

        return $this;
    }

    /**
     * The date of departure in local airport time.
     *
     * Generated from protobuf field <code>.io.Date departureDate = 11;</code>
     * @return \Io\Date
     */
    public function getDepartureDate()
    {
        return isset($this->departureDate) ? $this->departureDate : null;
    }

    public function hasDepartureDate()
    {
        return isset($this->departureDate);
    }

    public function clearDepartureDate()
    {
        unset($this->departureDate);
    }

    /**
     * The date of departure in local airport time.
     *
     * Generated from protobuf field <code>.io.Date departureDate = 11;</code>
     * @param \Io\Date $var
     * @return $this
     */
    public function setDepartureDate($var)
    {
        GPBUtil::checkMessage($var, \Io\Date::class);
        $this->departureDate = $var;

        return $this;
    }

    /**
     * Details of the passenger and any infant.
     *
     * Generated from protobuf field <code>.flights.Passenger passenger = 12;</code>
     * @return \Flights\Passenger
     */
    public function getPassenger()
    {
        return isset($this->passenger) ? $this->passenger : null;
    }

    public function hasPassenger()
    {
        return isset($this->passenger);
    }

    public function clearPassenger()
    {
        unset($this->passenger);
    }

    /**
     * Details of the passenger and any infant.
     *
     * Generated from protobuf field <code>.flights.Passenger passenger = 12;</code>
     * @param \Flights\Passenger $var
     * @return $this
     */
    public function setPassenger($var)
    {
        GPBUtil::checkMessage($var, \Flights\Passenger::class);
        $this->passenger = $var;

        return $this;
    }

    /**
     * Free-form text that can be used to describe the ticket class, tier or cabin. E.g. "Business", "Premium Economy", "Club World".
     *
     * Generated from protobuf field <code>string class = 13;</code>
     * @return string
     */
    public function getClass()
    {
        return $this->class;
    }

    /**
     * Free-form text that can be used to describe the ticket class, tier or cabin. E.g. "Business", "Premium Economy", "Club World".
     *
     * Generated from protobuf field <code>string class = 13;</code>
     * @param string $var
     * @return $this
     */
    public function setClass($var)
    {
        GPBUtil::checkString($var, True);
        $this->class = $var;

        return $this;
    }

    /**
     * The compartment code / class of the ticket.
     *
     * Generated from protobuf field <code>.cabin_codes.CompartmentCode compartmentCode = 14;</code>
     * @return int
     */
    public function getCompartmentCode()
    {
        return $this->compartmentCode;
    }

    /**
     * The compartment code / class of the ticket.
     *
     * Generated from protobuf field <code>.cabin_codes.CompartmentCode compartmentCode = 14;</code>
     * @param int $var
     * @return $this
     */
    public function setCompartmentCode($var)
    {
        GPBUtil::checkEnum($var, \Cabin_codes\CompartmentCode::class);
        $this->compartmentCode = $var;

        return $this;
    }

    /**
     * The allocated seat number.  The text "ANY" or "XXX" can be used where a free seating condition exists.
     *
     * Generated from protobuf field <code>string seatNumber = 15 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return string
     */
    public function getSeatNumber()
    {
        return $this->seatNumber;
    }

    /**
     * The allocated seat number.  The text "ANY" or "XXX" can be used where a free seating condition exists.
     *
     * Generated from protobuf field <code>string seatNumber = 15 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setSeatNumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->seatNumber = $var;

        return $this;
    }

    /**
     * The check in sequence number.
     *
     * Generated from protobuf field <code>int32 sequenceNumber = 16;</code>
     * @return int
     */
    public function getSequenceNumber()
    {
        return $this->sequenceNumber;
    }

    /**
     * The check in sequence number.
     *
     * Generated from protobuf field <code>int32 sequenceNumber = 16;</code>
     * @param int $var
     * @return $this
     */
    public function setSequenceNumber($var)
    {
        GPBUtil::checkInt32($var);
        $this->sequenceNumber = $var;

        return $this;
    }

    /**
     * A boarding group or zone indicator. This is displayed on the pass to assist passengers and ground-staff to expedite boarding.
     *
     * Generated from protobuf field <code>string boardingGroup = 17;</code>
     * @return string
     */
    public function getBoardingGroup()
    {
        return $this->boardingGroup;
    }

    /**
     * A boarding group or zone indicator. This is displayed on the pass to assist passengers and ground-staff to expedite boarding.
     *
     * Generated from protobuf field <code>string boardingGroup = 17;</code>
     * @param string $var
     * @return $this
     */
    public function setBoardingGroup($var)
    {
        GPBUtil::checkString($var, True);
        $this->boardingGroup = $var;

        return $this;
    }

    /**
     * An additional field to indicate boarding priority or order.
     *
     * Generated from protobuf field <code>string boardingPosition = 18;</code>
     * @return string
     */
    public function getBoardingPosition()
    {
        return $this->boardingPosition;
    }

    /**
     * An additional field to indicate boarding priority or order.
     *
     * Generated from protobuf field <code>string boardingPosition = 18;</code>
     * @param string $var
     * @return $this
     */
    public function setBoardingPosition($var)
    {
        GPBUtil::checkString($var, True);
        $this->boardingPosition = $var;

        return $this;
    }

    /**
     * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
     *
     * Generated from protobuf field <code>string freeBaggageAllowance = 19 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return string
     */
    public function getFreeBaggageAllowance()
    {
        return $this->freeBaggageAllowance;
    }

    /**
     * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
     *
     * Generated from protobuf field <code>string freeBaggageAllowance = 19 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setFreeBaggageAllowance($var)
    {
        GPBUtil::checkString($var, True);
        $this->freeBaggageAllowance = $var;

        return $this;
    }

    /**
     * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
     *
     * Generated from protobuf field <code>string carryOnAllowance = 20 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return string
     */
    public function getCarryOnAllowance()
    {
        return $this->carryOnAllowance;
    }

    /**
     * 3 character string comprising the quantity, followed by the unit code (PC - piece, L - lbs, K - kgs). E.g. 2PC, 20K.
     *
     * Generated from protobuf field <code>string carryOnAllowance = 20 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setCarryOnAllowance($var)
    {
        GPBUtil::checkString($var, True);
        $this->carryOnAllowance = $var;

        return $this;
    }

    /**
     * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
     *
     * Generated from protobuf field <code>repeated string ssrCodes = 21;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSsrCodes()
    {
        return $this->ssrCodes;
    }

    /**
     * An array of SSR codes. Codes should be 4 capitalized letters. Codes may be annotated.
     *
     * Generated from protobuf field <code>repeated string ssrCodes = 21;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSsrCodes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->ssrCodes = $arr;

        return $this;
    }

    /**
     * Other service information that may be relevant to the booking.
     *
     * Generated from protobuf field <code>string osi = 22;</code>
     * @return string
     */
    public function getOsi()
    {
        return $this->osi;
    }

    /**
     * Other service information that may be relevant to the booking.
     *
     * Generated from protobuf field <code>string osi = 22;</code>
     * @param string $var
     * @return $this
     */
    public function setOsi($var)
    {
        GPBUtil::checkString($var, True);
        $this->osi = $var;

        return $this;
    }

    /**
     * Free text booking remarks.
     *
     * Generated from protobuf field <code>string remarks = 23;</code>
     * @return string
     */
    public function getRemarks()
    {
        return $this->remarks;
    }

    /**
     * Free text booking remarks.
     *
     * Generated from protobuf field <code>string remarks = 23;</code>
     * @param string $var
     * @return $this
     */
    public function setRemarks($var)
    {
        GPBUtil::checkString($var, True);
        $this->remarks = $var;

        return $this;
    }

    /**
     * Passenger Description as detailed in IATA PSC Resolution 792 Attachment 'C'.
     *
     * Generated from protobuf field <code>.flights.PassengerStatus passengerStatus = 24;</code>
     * @return int
     */
    public function getPassengerStatus()
    {
        return $this->passengerStatus;
    }

    /**
     * Passenger Description as detailed in IATA PSC Resolution 792 Attachment 'C'.
     *
     * Generated from protobuf field <code>.flights.PassengerStatus passengerStatus = 24;</code>
     * @param int $var
     * @return $this
     */
    public function setPassengerStatus($var)
    {
        GPBUtil::checkEnum($var, \Flights\PassengerStatus::class);
        $this->passengerStatus = $var;

        return $this;
    }

    /**
     * Conditional items for the flight segment as described in IATA PSC Resolution 792.
     *
     * Generated from protobuf field <code>.flights.ConditionalItems conditionalItems = 25;</code>
     * @return \Flights\ConditionalItems
     */
    public function getConditionalItems()
    {
        return isset($this->conditionalItems) ? $this->conditionalItems : null;
    }

    public function hasConditionalItems()
    {
        return isset($this->conditionalItems);
    }

    public function clearConditionalItems()
    {
        unset($this->conditionalItems);
    }

    /**
     * Conditional items for the flight segment as described in IATA PSC Resolution 792.
     *
     * Generated from protobuf field <code>.flights.ConditionalItems conditionalItems = 25;</code>
     * @param \Flights\ConditionalItems $var
     * @return $this
     */
    public function setConditionalItems($var)
    {
        GPBUtil::checkMessage($var, \Flights\ConditionalItems::class);
        $this->conditionalItems = $var;

        return $this;
    }

    /**
     * Payload to be encoded in the pass barcode. If omitted, an IATA BCBP Standard (Resolution 792) barcode will be generated.
     *
     * Generated from protobuf field <code>string barcodePayload = 26;</code>
     * @return string
     */
    public function getBarcodePayload()
    {
        return $this->barcodePayload;
    }

    /**
     * Payload to be encoded in the pass barcode. If omitted, an IATA BCBP Standard (Resolution 792) barcode will be generated.
     *
     * Generated from protobuf field <code>string barcodePayload = 26;</code>
     * @param string $var
     * @return $this
     */
    public function setBarcodePayload($var)
    {
        GPBUtil::checkString($var, True);
        $this->barcodePayload = $var;

        return $this;
    }

    /**
     * Security image should relate to a security image provided in the pass design. If passenger has TSA PreCheck and an image name with `tsa_precheck` is present, it will be used automatically.
     *
     * Generated from protobuf field <code>string securityImage = 27;</code>
     * @return string
     */
    public function getSecurityImage()
    {
        return $this->securityImage;
    }

    /**
     * Security image should relate to a security image provided in the pass design. If passenger has TSA PreCheck and an image name with `tsa_precheck` is present, it will be used automatically.
     *
     * Generated from protobuf field <code>string securityImage = 27;</code>
     * @param string $var
     * @return $this
     */
    public function setSecurityImage($var)
    {
        GPBUtil::checkString($var, True);
        $this->securityImage = $var;

        return $this;
    }

    /**
     * Privilege image should relate to a boarding privilege image provided in the pass design. If the passenger has a frequent flyer tier and an image with a lowercase name of the tier is present, it will be used automatically.
     *
     * Generated from protobuf field <code>string privilegeImage = 28;</code>
     * @return string
     */
    public function getPrivilegeImage()
    {
        return $this->privilegeImage;
    }

    /**
     * Privilege image should relate to a boarding privilege image provided in the pass design. If the passenger has a frequent flyer tier and an image with a lowercase name of the tier is present, it will be used automatically.
     *
     * Generated from protobuf field <code>string privilegeImage = 28;</code>
     * @param string $var
     * @return $this
     */
    public function setPrivilegeImage($var)
    {
        GPBUtil::checkString($var, True);
        $this->privilegeImage = $var;

        return $this;
    }

    /**
     * Footer image is applicable to iOS devices. If not provided and security or privilege images (or their defaults) exist, then a composite will automatically be created. Else if a footer image or an airline alliance images exists in the design, it will be used.
     *
     * Generated from protobuf field <code>string footerImage = 29;</code>
     * @return string
     */
    public function getFooterImage()
    {
        return $this->footerImage;
    }

    /**
     * Footer image is applicable to iOS devices. If not provided and security or privilege images (or their defaults) exist, then a composite will automatically be created. Else if a footer image or an airline alliance images exists in the design, it will be used.
     *
     * Generated from protobuf field <code>string footerImage = 29;</code>
     * @param string $var
     * @return $this
     */
    public function setFooterImage($var)
    {
        GPBUtil::checkString($var, True);
        $this->footerImage = $var;

        return $this;
    }

    /**
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
     *
     * Generated from protobuf field <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getLocationMessages()
    {
        return $this->locationMessages;
    }

    /**
     * A list of up to 10 GPS locations where this boarding pass should be presented on the lock-screen. Values here will override the designation and flight values.
     *
     * Generated from protobuf field <code>repeated .io.GPSLocation locationMessages = 30 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param \Io\GPSLocation[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setLocationMessages($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Io\GPSLocation::class);
        $this->locationMessages = $arr;

        return $this;
    }

    /**
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
     *
     * Generated from protobuf field <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getBeaconMessages()
    {
        return $this->beaconMessages;
    }

    /**
     * A list of up to 10 Beacon UUIDs that should trigger the boarding pass to be presented on the lock-screen. Values here will override the designation and flight values.
     *
     * Generated from protobuf field <code>repeated .io.Beacon beaconMessages = 31 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param \Io\Beacon[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setBeaconMessages($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Io\Beacon::class);
        $this->beaconMessages = $arr;

        return $this;
    }

    /**
     * A list of links to be appended to the end of each boarding pass.
     *
     * Generated from protobuf field <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getLinks()
    {
        return $this->links;
    }

    /**
     * A list of links to be appended to the end of each boarding pass.
     *
     * Generated from protobuf field <code>repeated .io.Link links = 32 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param \Io\Link[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setLinks($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Io\Link::class);
        $this->links = $arr;

        return $this;
    }

    /**
     * If PassKit are generating barcodes, airline use data (IATA item 4) to be included in the barcode.
     *
     * Generated from protobuf field <code>string barcodeAdditionalData = 33;</code>
     * @return string
     */
    public function getBarcodeAdditionalData()
    {
        return $this->barcodeAdditionalData;
    }

    /**
     * If PassKit are generating barcodes, airline use data (IATA item 4) to be included in the barcode.
     *
     * Generated from protobuf field <code>string barcodeAdditionalData = 33;</code>
     * @param string $var
     * @return $this
     */
    public function setBarcodeAdditionalData($var)
    {
        GPBUtil::checkString($var, True);
        $this->barcodeAdditionalData = $var;

        return $this;
    }

    /**
     * If a passenger is travelling as an infant and the airline is not using conditional data with a passenger description of 6 (Adult With Infant), an id of the infant's boarding pass will be recorded here.
     *
     * Generated from protobuf field <code>string infantPassId = 34;</code>
     * @return string
     */
    public function getInfantPassId()
    {
        return $this->infantPassId;
    }

    /**
     * If a passenger is travelling as an infant and the airline is not using conditional data with a passenger description of 6 (Adult With Infant), an id of the infant's boarding pass will be recorded here.
     *
     * Generated from protobuf field <code>string infantPassId = 34;</code>
     * @param string $var
     * @return $this
     */
    public function setInfantPassId($var)
    {
        GPBUtil::checkString($var, True);
        $this->infantPassId = $var;

        return $this;
    }

    /**
     * Optional key value pairs to be added in to the flight record
     *
     * Generated from protobuf field <code>.io.DataItems additionalDataItems = 35;</code>
     * @return \Io\DataItems
     */
    public function getAdditionalDataItems()
    {
        return isset($this->additionalDataItems) ? $this->additionalDataItems : null;
    }

    public function hasAdditionalDataItems()
    {
        return isset($this->additionalDataItems);
    }

    public function clearAdditionalDataItems()
    {
        unset($this->additionalDataItems);
    }

    /**
     * Optional key value pairs to be added in to the flight record
     *
     * Generated from protobuf field <code>.io.DataItems additionalDataItems = 35;</code>
     * @param \Io\DataItems $var
     * @return $this
     */
    public function setAdditionalDataItems($var)
    {
        GPBUtil::checkMessage($var, \Io\DataItems::class);
        $this->additionalDataItems = $var;

        return $this;
    }

    /**
     * Pass Metadata
     *
     * Generated from protobuf field <code>.io.Metadata metadata = 36;</code>
     * @return \Io\Metadata
     */
    public function getMetadata()
    {
        return isset($this->metadata) ? $this->metadata : null;
    }

    public function hasMetadata()
    {
        return isset($this->metadata);
    }

    public function clearMetadata()
    {
        unset($this->metadata);
    }

    /**
     * Pass Metadata
     *
     * Generated from protobuf field <code>.io.Metadata metadata = 36;</code>
     * @param \Io\Metadata $var
     * @return $this
     */
    public function setMetadata($var)
    {
        GPBUtil::checkMessage($var, \Io\Metadata::class);
        $this->metadata = $var;

        return $this;
    }

}

