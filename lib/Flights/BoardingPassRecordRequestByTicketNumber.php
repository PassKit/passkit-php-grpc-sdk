<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/flights/boarding_pass.proto

namespace Flights;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Boarding passes are indexed by ticket number and leg or boarding point. Either a journey leg or boarding point is required.
 *
 * Generated from protobuf message <code>flights.BoardingPassRecordRequestByTicketNumber</code>
 */
class BoardingPassRecordRequestByTicketNumber extends \Google\Protobuf\Internal\Message
{
    /**
     * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
     *
     * Generated from protobuf field <code>string ticketNumber = 1 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     */
    protected $ticketNumber = '';
    /**
     * The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
     *
     * Generated from protobuf field <code>int32 ticketLeg = 2;</code>
     */
    protected $ticketLeg = 0;
    /**
     * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     *
     * Generated from protobuf field <code>string boardingPoint = 3;</code>
     */
    protected $boardingPoint = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $ticketNumber
     *           Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
     *     @type int $ticketLeg
     *           The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
     *     @type string $boardingPoint
     *           Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Flights\BoardingPass::initOnce();
        parent::__construct($data);
    }

    /**
     * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
     *
     * Generated from protobuf field <code>string ticketNumber = 1 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @return string
     */
    public function getTicketNumber()
    {
        return $this->ticketNumber;
    }

    /**
     * Ticket number can optionally be prefixed by the 3 digit airline code, followed by a 10 digit ticket number.  For ticket numbers less than 10 digits, pad with zeros.
     *
     * Generated from protobuf field <code>string ticketNumber = 1 [(.grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setTicketNumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->ticketNumber = $var;

        return $this;
    }

    /**
     * The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
     *
     * Generated from protobuf field <code>int32 ticketLeg = 2;</code>
     * @return int
     */
    public function getTicketLeg()
    {
        return $this->ticketLeg;
    }

    /**
     * The leg of the ticketed journey. For a return flight, the outbound flight would be leg 1 and the inbound flight would be leg 2.  For Direct flights, a ticketed leg includes all stops between the boarding point and deplaning point. Leg cannot be zero and ticket/leg combination cannot already exist for a 'create' call.
     *
     * Generated from protobuf field <code>int32 ticketLeg = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setTicketLeg($var)
    {
        GPBUtil::checkInt32($var);
        $this->ticketLeg = $var;

        return $this;
    }

    /**
     * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     *
     * Generated from protobuf field <code>string boardingPoint = 3;</code>
     * @return string
     */
    public function getBoardingPoint()
    {
        return $this->boardingPoint;
    }

    /**
     * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     *
     * Generated from protobuf field <code>string boardingPoint = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setBoardingPoint($var)
    {
        GPBUtil::checkString($var, True);
        $this->boardingPoint = $var;

        return $this;
    }

}

