<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/flights/flight_designator.proto

namespace Flights;

use UnexpectedValueException;

/**
 * The Boarding Policy is used to determine informational labels on the pass.
 *
 * Protobuf type <code>flights.BoardingPolicy</code>
 */
class BoardingPolicy
{
    /**
     * Generated from protobuf enum <code>BOARDING_POLICY_UNSPECIFIED = 0;</code>
     */
    const BOARDING_POLICY_UNSPECIFIED = 0;
    /**
     * Boarding is managed by zone.
     *
     * Generated from protobuf enum <code>ZONE_BASED = 1;</code>
     */
    const ZONE_BASED = 1;
    /**
     * Boarding is managed by group.
     *
     * Generated from protobuf enum <code>GROUP_BASED = 2;</code>
     */
    const GROUP_BASED = 2;
    /**
     * Another, or No boarding policy is in place.
     *
     * Generated from protobuf enum <code>BOARDING_POLICY_OTHER = 3;</code>
     */
    const BOARDING_POLICY_OTHER = 3;

    private static $valueToName = [
        self::BOARDING_POLICY_UNSPECIFIED => 'BOARDING_POLICY_UNSPECIFIED',
        self::ZONE_BASED => 'ZONE_BASED',
        self::GROUP_BASED => 'GROUP_BASED',
        self::BOARDING_POLICY_OTHER => 'BOARDING_POLICY_OTHER',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

