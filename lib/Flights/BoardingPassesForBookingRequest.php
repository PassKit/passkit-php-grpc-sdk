<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/flights/boarding_pass.proto

namespace Flights;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Used to request digital boarding pass(es) by booking number. Either a journey leg or boarding point is required.
 *
 * Generated from protobuf message <code>flights.BoardingPassesForBookingRequest</code>
 */
class BoardingPassesForBookingRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The master PNR for the booking.
     *
     * Generated from protobuf field <code>string pnr = 1;</code>
     */
    protected $pnr = '';
    /**
     * Optional. The leg of the ticket. Typically for a return ticket, the outbound leg will be 1 and the return leg will be 2.
     *
     * Generated from protobuf field <code>int32 ticketLeg = 2;</code>
     */
    protected $ticketLeg = 0;
    /**
     * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     *
     * Generated from protobuf field <code>string boardingPoint = 3;</code>
     */
    protected $boardingPoint = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $pnr
     *           The master PNR for the booking.
     *     @type int $ticketLeg
     *           Optional. The leg of the ticket. Typically for a return ticket, the outbound leg will be 1 and the return leg will be 2.
     *     @type string $boardingPoint
     *           Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Io\Flights\BoardingPass::initOnce();
        parent::__construct($data);
    }

    /**
     * The master PNR for the booking.
     *
     * Generated from protobuf field <code>string pnr = 1;</code>
     * @return string
     */
    public function getPnr()
    {
        return $this->pnr;
    }

    /**
     * The master PNR for the booking.
     *
     * Generated from protobuf field <code>string pnr = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setPnr($var)
    {
        GPBUtil::checkString($var, True);
        $this->pnr = $var;

        return $this;
    }

    /**
     * Optional. The leg of the ticket. Typically for a return ticket, the outbound leg will be 1 and the return leg will be 2.
     *
     * Generated from protobuf field <code>int32 ticketLeg = 2;</code>
     * @return int
     */
    public function getTicketLeg()
    {
        return $this->ticketLeg;
    }

    /**
     * Optional. The leg of the ticket. Typically for a return ticket, the outbound leg will be 1 and the return leg will be 2.
     *
     * Generated from protobuf field <code>int32 ticketLeg = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setTicketLeg($var)
    {
        GPBUtil::checkInt32($var);
        $this->ticketLeg = $var;

        return $this;
    }

    /**
     * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     *
     * Generated from protobuf field <code>string boardingPoint = 3;</code>
     * @return string
     */
    public function getBoardingPoint()
    {
        return $this->boardingPoint;
    }

    /**
     * Required if no ticket leg. The 3 letter IATA code or 4 letter ICAO code of the passenger boarding point.
     *
     * Generated from protobuf field <code>string boardingPoint = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setBoardingPoint($var)
    {
        GPBUtil::checkString($var, True);
        $this->boardingPoint = $var;

        return $this;
    }

}

