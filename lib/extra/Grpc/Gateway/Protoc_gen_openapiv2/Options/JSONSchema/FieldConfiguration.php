<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: protoc-gen-openapiv2/options/openapiv2.proto

namespace Grpc\Gateway\Protoc_gen_openapiv2\Options\JSONSchema;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * 'FieldConfiguration' provides additional field level properties used when generating the OpenAPI v2 file.
 * These properties are not defined by OpenAPIv2, but they are used to control the generation.
 *
 * Generated from protobuf message <code>grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration</code>
 */
class FieldConfiguration extends \Google\Protobuf\Internal\Message
{
    /**
     * Alternative parameter name when used as path parameter. If set, this will
     * be used as the complete parameter name when this field is used as a path
     * parameter. Use this to avoid having auto generated path parameter names
     * for overlapping paths.
     *
     * Generated from protobuf field <code>string path_param_name = 47;</code>
     */
    protected $path_param_name = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $path_param_name
     *           Alternative parameter name when used as path parameter. If set, this will
     *           be used as the complete parameter name when this field is used as a path
     *           parameter. Use this to avoid having auto generated path parameter names
     *           for overlapping paths.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ProtocGenOpenapiv2\Options\Openapiv2::initOnce();
        parent::__construct($data);
    }

    /**
     * Alternative parameter name when used as path parameter. If set, this will
     * be used as the complete parameter name when this field is used as a path
     * parameter. Use this to avoid having auto generated path parameter names
     * for overlapping paths.
     *
     * Generated from protobuf field <code>string path_param_name = 47;</code>
     * @return string
     */
    public function getPathParamName()
    {
        return $this->path_param_name;
    }

    /**
     * Alternative parameter name when used as path parameter. If set, this will
     * be used as the complete parameter name when this field is used as a path
     * parameter. Use this to avoid having auto generated path parameter names
     * for overlapping paths.
     *
     * Generated from protobuf field <code>string path_param_name = 47;</code>
     * @param string $var
     * @return $this
     */
    public function setPathParamName($var)
    {
        GPBUtil::checkString($var, True);
        $this->path_param_name = $var;

        return $this;
    }

}

