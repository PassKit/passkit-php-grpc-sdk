<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ct/scheduler/scheduler.proto

namespace Ct;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>ct.SchedulingJobResponse</code>
 */
class SchedulingJobResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Auto generated 22 char identifier. Read only.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * Job status. Writable values are JOB_STATUS_READY and JOB_STATUS_PAUSED only.
     *
     * Generated from protobuf field <code>.ct.JobStatus status = 2;</code>
     */
    protected $status = 0;
    /**
     * Next scheduled run datetime. Read only.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp nextRunDatetime = 3;</code>
     */
    protected $nextRunDatetime = null;
    /**
     * Datetime when the job will for the last time and expires. Read only. Expiry setting is available in the Schedule field.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expiry = 4;</code>
     */
    protected $expiry = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           Auto generated 22 char identifier. Read only.
     *     @type int $status
     *           Job status. Writable values are JOB_STATUS_READY and JOB_STATUS_PAUSED only.
     *     @type \Google\Protobuf\Timestamp $nextRunDatetime
     *           Next scheduled run datetime. Read only.
     *     @type \Google\Protobuf\Timestamp $expiry
     *           Datetime when the job will for the last time and expires. Read only. Expiry setting is available in the Schedule field.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Ct\Scheduler\Scheduler::initOnce();
        parent::__construct($data);
    }

    /**
     * Auto generated 22 char identifier. Read only.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Auto generated 22 char identifier. Read only.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Job status. Writable values are JOB_STATUS_READY and JOB_STATUS_PAUSED only.
     *
     * Generated from protobuf field <code>.ct.JobStatus status = 2;</code>
     * @return int
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Job status. Writable values are JOB_STATUS_READY and JOB_STATUS_PAUSED only.
     *
     * Generated from protobuf field <code>.ct.JobStatus status = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var, \Ct\JobStatus::class);
        $this->status = $var;

        return $this;
    }

    /**
     * Next scheduled run datetime. Read only.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp nextRunDatetime = 3;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getNextRunDatetime()
    {
        return $this->nextRunDatetime;
    }

    public function hasNextRunDatetime()
    {
        return isset($this->nextRunDatetime);
    }

    public function clearNextRunDatetime()
    {
        unset($this->nextRunDatetime);
    }

    /**
     * Next scheduled run datetime. Read only.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp nextRunDatetime = 3;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setNextRunDatetime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->nextRunDatetime = $var;

        return $this;
    }

    /**
     * Datetime when the job will for the last time and expires. Read only. Expiry setting is available in the Schedule field.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expiry = 4;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getExpiry()
    {
        return $this->expiry;
    }

    public function hasExpiry()
    {
        return isset($this->expiry);
    }

    public function clearExpiry()
    {
        unset($this->expiry);
    }

    /**
     * Datetime when the job will for the last time and expires. Read only. Expiry setting is available in the Schedule field.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expiry = 4;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setExpiry($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->expiry = $var;

        return $this;
    }

}

